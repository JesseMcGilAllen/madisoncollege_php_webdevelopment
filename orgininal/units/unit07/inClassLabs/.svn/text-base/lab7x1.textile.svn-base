h2. In-class Lab 7.1

h3. Exercise 1 - Create a class in PHP 5

# Create a directory named *lab07* under your labs directory, which is under your webserver's document root, if it does not already exist.
# Create a script named *@lab7x1.inc.php@* and save it into your *lab07* directory.
# Create a PHP class named *UnitCounter* with 2 member *properties/variables*:
<br /><pre>
protected $units = 0;
protected $weightPerUnit = 1.0;
</pre>
# Create public individual user-defined setter and getter methods/functions for the 2 member properties, so users of the class UnitCounter will be able to set and get their values through your methods.
# Class UnitCounter will also have 2 other member methods/functions:
<br /><pre>
// Add $n to the total number of units, default $n to 1
function add($n = 1) {
    $this->units = $this->units + $n;
}

// Member method that calculates the total weight
function totalWeight() {
    return $this->units * $this->weightPerUnit;
}
</pre>

h3. Exercise 2 - Create and manipulate objects of the class UnitCounter

# Create a script named *@lab7x1.php@* and save it into your *lab07* directory.
# Use the *@require_once@* directive to include the file: *@lab7x1.inc.php@*
# Create the objects *@$bottles@* and *@$books@* of class *UnitCounter*:
** For *@$bottles@*:
### Set the units member property/variable to 24 using your setter.
### Add 3 units to the object using the member method/function *@add()@*
### Print out the number of units in *@$bottles@*
** For *@$books@*:
### Set the units member property/variable to 10 using your setter.
### Set the *@weightPerUnit@* member property to 1.5 directly
### Print out the result of the *@totalWeight@* member method/function for *@$books@*
# Show your instructor your code and demonstrate how it works in a browser.

<br />

---

[[Unit Seven => 152-166 Unit Seven Index]]
