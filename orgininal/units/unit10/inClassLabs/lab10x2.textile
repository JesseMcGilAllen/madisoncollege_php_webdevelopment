h2. In-class Lab 10.2

<hr />

h3. Exercise 1

# If using your Linux VM, create directory *@lab10@* under your */var/www/labs* directory, if it does not exist. Otherwise create directory *@lab10@* under the document root of whatever web server you are using. On the MATC Windows lab computers that will be: C:\Inetpub\wwwroot
# In jEdit or another text editor, create a PHP script file named *@lab10x2e1.php@* that uses the *@preg_match()@* function to search the text file "data10.txt":/attachment/unit10/data10.txt for the following pattern.
 <br />Match the letter "B" at the beginning of a line, followed by one or more letters (either upper or lower case) and then a whitespace character.
# Use a character class followed by a quantifier to search for the one or more upper or lower case letters in the pattern.
# When your regular expression finds a matching line of text in the *data10.txt* file, print it to the browser window.
# Download the *data10.txt* file from Blackboard or your course web site and place it in a directory the web server user has read access to. In most cases, the same directory you created your PHP script in should work.
# Test your code and show it to your instructor.

<hr />

h3. Exercise 2

# Create a PHP script named *@lab10x2e2.php@* and save it into your *@lab10@* directory.
# This time, use the *@preg_replace()@* function and match variables to find a pattern, consisting of multiple subpatterns, and replace it with an expression involving the subpatterns.
   <br />The lecture examples *matchVars.php*, *matchVars2.php* and *matchVars3.php* will be helpful for completing this exercise.
# Create a regular expression that searches for the following, in this order:
## One or more word text characters, including both upper and lower case letters, and digits. This will be subpattern #1 and will correspond to match variable $1.
## A single whitespace character.
## One or more word text characters, including both upper and lower case letters, and digits. This will be subpattern #2 and will correspond to match variable $2.
## A single whitespace character.
## One or more digits. This will be subpattern #3 and will correspond to match variable $3.
# Your *@preg_replace()@* replacement string will be: '$2, $1 $3' You will be changing the order of the two "word text strings" found by your regular expression, placing the second one first and following it with a comma and a space, and then the first string.
# Print out the (possibly) modified text string for each line in the "data10.txt":/attachment/unit10/data10.txt file.
# Test your code and show it to your instructor.


<br />

---

[[Unit Ten => 152-166 Unit Ten Index]]

