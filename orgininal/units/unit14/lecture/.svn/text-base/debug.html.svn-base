<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>Debugging</title>
<link href="../../../css/basic.css" rel="stylesheet" type="text/css">
<script type="text/javascript" language="JavaScript">
<!--
function putSemester() {
    var today=new Date();
    var thisMonth=today.getMonth()+1;
    var thisYear=today.getFullYear();
    if(thisMonth <=6) {
        return "Spring, " + thisYear;
    }
    else {
       return "Fall, " + thisYear;
    }
}//-->
</script>
<style type="text/css">
<!--
    .bgStripes {
        background-image:url(../../../images/Xstripes.gif);
        background-attachment: fixed;
    }
    body {
        background-color:white;
    }
    strong {
        font-family: Arial, Helvetica, sans-serif;
    }
-->
</style>
</head>
<body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">
<table class="bgStripes" border="0" width="100%">
<tbody>
<tr name="firstRow">
<td valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
<script type="text/javascript">
<!--
    document.write(putSemester());
-->
</script>
</span> <br>
</td>
<td style="text-align: center;"><span style="font-weight: bold; font-size: medium; color: darkblue;">
PHP Web Development with MySQL
</span> </td>
<td align="right" valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
3 Credits</span> </td>
</tr>
<tr>
<td colspan="3" style="text-align: center;"><span style="font-size: xx-small; font-weight: bold;">
152-166</span> </td>
</tr>
</tbody>
</table>
<!--The heading for the slides --> <br>
<table class="headTable1" border="0">
<tbody>
<tr>
<td width="100"><a href="security2.html"><img alt="" src="../../../images/btn_lArrow.gif" border="0"></a><a href="index.html"><img alt="" src="../../../images/btn_upArrow.gif" border="0"></a><a href="index.html"><img alt="" src="../../../images/btn_rArrow.gif" border="0"></a></td>
<td>Debugging</td>
</tr>
</tbody>
</table>
<br>
<div class="disp1">
<ul class="slidesUl1">
<li><p>
No program is ever perfect and you will probably be fixing bugs more than writing
the original code. Debugging code is part art and part science.
</p><p>
Over time, you will get much better at spotting errors and fixing them. The key
is to not get frustrated with errors. There will always be stress-producing
bugs in your programs.
</p><p>
This section outlines some helpful techniques proven successful in the real
world for debugging PHP and MySQL code.
</p></li>
<li><p>
Turn on the Error Reporting
</p><p>
How can we know what the problem is if we cannot see the actual error message?
</p><p>
To turn on all the error reporting, set the directives <b>display_error</b> to
"On" and <b>error_reporting</b> to <b>E_ALL</b> in the php.ini initialization file.
</p>
<blockquote><code>
display_errors = On
</code></blockquote>
<p>
and
</p>
<blockquote><code>
error_reporting = E_ALL
</code></blockquote>
<p>
When your application goes to production, the bugs should have been worked out,
but do not just turn error reporting off.
</p><p>
As discussed in the previous section, use the <b>log_errors</b> and <b>error_log</b>
directives in the php.ini file so that all errors are logged and you know where
the log file is located.
</p><p>
This will alow you to both monitor any suspicious activity for security purposes,
and to be able to debug the application as necessary.
</p></li>
<li><p>
Fix the Parse Errors First
</p><p>
Parse errors are the most common and easiest errors to fix. They are detected
when PHP scans your program code, and you have broken the PHP grammar rules or
used incorrect syntax.
</p><p>
Common causes are unescaped quote marks, missing semicolons (every statement
of PHP code must end with a semicolon), and missing parentheses and curly brackets.
</p><p>
Breaking these syntax rules will cause your program to terminate with a message,
which is sometimes hard to understand, but like anything else, after you have
made the same error enough times, you will know what you did wrong.
</p><p>
The PHP interpreter reports parse errors prior to executing your code.
It attempts to tell us what to look for and where.
</p><p>
Here is an example:
</p>
<code><small>
&lt;?php<br>
&nbsp;&nbsp;$welcome_message = "Hello there, what a nice day!';<br>
&nbsp;&nbsp;print $welcome_message;<br>
?&gt;<br>
</small></code>
<p>
When this program is executed (assume this is saved in file named welcome.php),
PHP will produce an error message similar to this:
</p>
<code><small>
Parse error: syntax error, unexpected $end in welcome.php on line 5<br>
</small></code>
<p>
Although the error messages look strange at first glance, they are very
informative and relatively simple to understand.
</p><p>
This error is basically telling us that there is a problem on line 5 or above
in our code and that it reached an unexpected end-of-file while parsing the
program code.
</p><p>
So you would want to look at this line 5 first. But what if there is no line 5;
there are only 4 lines in the code?
</p><p>
PHP was expecting a certain type of syntax and reached the end of the script
without finding it.
</p><p>
In a case like this, it is best to look at the lines preceding line 5 and try
to find the error, such as unmatched brackets, unclosed quotes, or a missing
semicolon.
</p><p>
Because this is a very simple script, the problem is found on line 2, where the
string has not been properly terminated.
</p><p>
We started the string $welcome_message with a double quote but have terminated
it with a single quote.
</p><p>
In general, the error message given  for a parse error is the PHP interpreter's
best guess as to where the syntax problem is that caused the error.
</p><p>
As you acquire experience coding PHP, you will be able to pinpoint the errors
more quickly.
</p><p>
To help you, you can use a color-coding (programming) editor, such as jEdit or
BlueFish when writing PHP scripts. The code will show up in different colors
depending on what language construct it represents.
</p><p>
For example, if my strings are in red and commands in green, and I have
forgotten to close a string, all the rest of my code will be in red.
</p><p>
This color coding provided by the editors makes it much easier to spot syntax
errors. For a list of free editors, see:
<a href="http://www.thefreecountry.com/programming/editors.shtml">http://www.thefreecountry.com/programming/editors.shtml</a>
</p></li>
<li><p>
Diagnostic Print Statements
</p><p>
Parse errors are errors that can be determined before the program even runs
because they are caused by syntactically invalid code.
</p><p>
On the other hand, there are errors that can happen only at runtime. This is
because these errors depend on the data fed into the application and cannot
be easily predetermined.
</p><p>
Say, for example, we wrote the program shown in the example below to print out
all the Fibonacci numbers smaller than 1,000.
</p><p>
If you are interested, the Fibonacci numbers are the series of numbers starting
with: <code><b>0, 1, 1, 2, 3, 5, 8, 13, ...</b></code>
The series is generated by the rule that the last two numbers are added to get
the next number in the series.
</p>
<h4>
Filename: fibonacci.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>  <span class="syntax10">$</span><span class="syntax10">firstNum</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>  <span class="syntax10">$</span><span class="syntax10">secondNum</span> <span class="syntax18">=</span> <span class="syntax5">1</span><span class="syntax18">;</span>
<span class="gutter">   4:</span>  <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">firstNum</span><span class="syntax14"> </span><span class="syntax14">-</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax14"> </span><span class="syntax14">-</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span>
<span class="gutter">   6:</span>  <span class="syntax8">while</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">secondNum</span> <span class="syntax18">&lt;</span> <span class="syntax5">1000</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   7:</span>    <span class="syntax10">$</span><span class="syntax10">nextFibNum</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">firstNum</span> <span class="syntax18">+</span> <span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">nextFibNum</span><span class="syntax14"> </span><span class="syntax14">-</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">firstNum</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax10">$</span><span class="syntax10">secondNum</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">nextFibNum</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>  <span class="syntax18">}</span>
<span class="gutter">  13:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
With this program, we get the following output:
</p>
<code><small>
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597,
</small></code>
<p>
Suppose that we are not convinced this is working well and not sure how the
calculation is working. We could add a diagnostic print statement to see what
is going on.
</p>
<h4>
Filename: fibonacci2.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>  <span class="syntax10">$</span><span class="syntax10">firstNum</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>  <span class="syntax10">$</span><span class="syntax10">secondNum</span> <span class="syntax18">=</span> <span class="syntax5">1</span><span class="syntax18">;</span>
<span class="gutter">   4:</span>  <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">firstNum</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span>
<span class="gutter">   6:</span>  <span class="syntax8">while</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">secondNum</span> <span class="syntax18">&lt;</span> <span class="syntax5">1000</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   7:</span>    <span class="syntax10">$</span><span class="syntax10">nextFibNum</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">firstNum</span> <span class="syntax18">+</span> <span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">nextFibNum</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   9:</span><span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">debug</span><span class="syntax2"> </span><span class="syntax2">print</span><span class="syntax2"> </span><span class="syntax2">statement</span><span class="syntax2"> </span><span class="syntax2"> </span><span class="syntax2"> </span>
<span class="gutterH">  10:</span><span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">[</span><span class="syntax10">$</span><span class="syntax10">firstNum</span><span class="syntax14"> </span><span class="syntax14">+</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">nextFibNum</span><span class="syntax14">]</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>
<span class="gutter">  12:</span>    <span class="syntax10">$</span><span class="syntax10">firstNum</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">secondNum</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax10">$</span><span class="syntax10">secondNum</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">nextFibNum</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>  <span class="syntax18">}</span>
<span class="gutterH">  15:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
Notice that the diagnostic print statement is preceded by a comment line and is
not indented with the rest of the code.
</p><p>
This makes it make it easier to find and remove the line later when it is no
longer needed.
</p><p>
By adding the print statement, it is easier to see how the numbers were
calculated and to validate that the script is working properly.
The following output is produced:
</p>
<blockquote><code><small>
0, 1, 1, [0 + 1 = 1]<br>
2, [1 + 1 = 2]<br>
3, [1 + 2 = 3]<br>
5, [2 + 3 = 5]<br>
8, [3 + 5 = 8]<br>
13, [5 + 8 = 13]<br>
21, [8 + 13 = 21]<br>
34, [13 + 21 = 34]<br>
55, [21 + 34 = 55]<br>
89, [34 + 55 = 89]<br>
144, [55 + 89 = 144]<br>
233, [89 + 144 = 233]<br>
377, [144 + 233 = 377]<br>
610, [233 + 377 = 610]<br>
987, [377 + 610 = 987]<br>
1597, [610 + 987 = 1597]<br>
</small></code></blockquote>
<p>
Here is another example of how to find some hard-to-spot errors.
</p>
<h4>
Filename: craps.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>  <span class="syntax10">$</span><span class="syntax10">dice1</span> <span class="syntax18">=</span> <span class="syntax9">rand</span><span class="syntax18">(</span><span class="syntax5">1</span><span class="syntax18">,</span><span class="syntax5">6</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>  <span class="syntax10">$</span><span class="syntax10">dice2</span> <span class="syntax18">=</span> <span class="syntax9">rand</span><span class="syntax18">(</span><span class="syntax5">1</span><span class="syntax18">,</span><span class="syntax5">6</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   4:</span>  <span class="syntax10">$</span><span class="syntax10">total</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">dice1</span> <span class="syntax18">+</span> <span class="syntax10">$</span><span class="syntax10">dice2</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span>
<span class="gutter">   6:</span>  <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">total</span> <span class="syntax18">=</span> <span class="syntax5">7</span> <span class="syntax18">|</span><span class="syntax18">|</span> <span class="syntax10">$</span><span class="syntax10">total</span> <span class="syntax18">=</span> <span class="syntax5">11</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   7:</span>    <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">You</span><span class="syntax13"> </span><span class="syntax13">win!</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>  <span class="syntax18">}</span> 
<span class="gutter">   9:</span>  <span class="syntax8">else</span> <span class="syntax18">{</span>
<span class="gutterH">  10:</span>    <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">Better</span><span class="syntax13"> </span><span class="syntax13">luck</span><span class="syntax13"> </span><span class="syntax13">next</span><span class="syntax13"> </span><span class="syntax13">time!</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>  <span class="syntax18">}</span>
<span class="gutter">  12:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The example above is a craps game script. It simulates the rolling of two dice.
The game is won if the sum of the two dice rolled is 7 or 11.
</p><p>
The way this script is written, it appears that there is always a winning roll
of the dice!
</p><p>
There is obviously a problem with the script. To figure out what is going on,
create a diagnostic print statement to demonstrate what is happenning, as shown
in the example that follows.
</p>
<h4>
Filename: craps2.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>  <span class="syntax10">$</span><span class="syntax10">dice1</span> <span class="syntax18">=</span> <span class="syntax9">rand</span><span class="syntax18">(</span><span class="syntax5">1</span><span class="syntax18">,</span><span class="syntax5">6</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>  <span class="syntax10">$</span><span class="syntax10">dice2</span> <span class="syntax18">=</span> <span class="syntax9">rand</span><span class="syntax18">(</span><span class="syntax5">1</span><span class="syntax18">,</span><span class="syntax5">6</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   4:</span>  <span class="syntax10">$</span><span class="syntax10">total</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">dice1</span> <span class="syntax18">+</span> <span class="syntax10">$</span><span class="syntax10">dice2</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span><span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">debug</span><span class="syntax2"> </span><span class="syntax2">print</span><span class="syntax2"> </span><span class="syntax2">statement</span>
<span class="gutter">   6:</span><span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">[</span><span class="syntax14">You</span><span class="syntax14"> </span><span class="syntax14">rolled</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">dice1</span><span class="syntax14"> </span><span class="syntax14">and</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">dice2</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">for</span><span class="syntax14"> </span><span class="syntax14">a</span><span class="syntax14"> </span><span class="syntax14">total</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">total</span><span class="syntax14">]</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   7:</span>
<span class="gutter">   8:</span>  <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">total</span> <span class="syntax18">=</span> <span class="syntax5">7</span> <span class="syntax18">|</span><span class="syntax18">|</span> <span class="syntax10">$</span><span class="syntax10">total</span> <span class="syntax18">=</span> <span class="syntax5">11</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   9:</span>    <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">You</span><span class="syntax13"> </span><span class="syntax13">win!</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>  <span class="syntax18">}</span> 
<span class="gutter">  11:</span>  <span class="syntax8">else</span> <span class="syntax18">{</span>
<span class="gutter">  12:</span>    <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">Better</span><span class="syntax13"> </span><span class="syntax13">luck</span><span class="syntax13"> </span><span class="syntax13">next</span><span class="syntax13"> </span><span class="syntax13">time!</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>  <span class="syntax18">}</span>
<span class="gutter">  14:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The diagnostic print line will print out the results of the actual dice rolls
(or in this case using a random number generator to produce a number between 1 and 6).
</p><p>
After running the above script a few times, it will be obvious that rolling the
dice produces totals ranging from 2 to 12, but the script always prints: "You win!"
</p><p>
There is a problem in the code. Because the sum of the two die is correct,
the next place to look for a problem is in the conditional if statement.
</p><p>
A good strategy here is to go top-to-bottom and validate the execution of the
code by printing out what is going on in the code.
</p><p>
By checking the expression in the if statement, a classic problem should come
to light, the improper use of the equal sign operator.
</p><p>
Instead of a single sign, the expression should use the double equal sign, "==".
</p><p>
The single equal sign is used to assign a value, whereas the double equal sign
is use to compare the equality of two values. The conditional expression should be:
</p>
<blockquote><code><small>
if ($total == 7 || $total == 11) {<br>
</small></code></blockquote>
<p>
With this modification, the script works properly. Sometimes we win and more
often we lose. Now the diagnostic print statement could be removed.
</p></li>
<li><p>
Fixing SQL Errors
</p><p>
SQL errors are also quite common. They are reported by the MySQL database.
</p><p>
Although your PHP code might otherwise be fine, the query you are sending to the
database might not be working properly due to formatting or database-specific
issues. Here is an example:
</p>
<h4>
Filename: users.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>    <span class="syntax10">$</span><span class="syntax10">db</span> <span class="syntax18">=</span> <span class="syntax9">mysql_connect</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">localhost</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">djefferson</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">dino1234</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>    <span class="syntax9">mysql_select_db</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">test</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   4:</span>
<span class="gutterH">   5:</span>    <span class="syntax9">mysql_query</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">INSERT</span><span class="syntax14"> </span><span class="syntax14">INTO</span><span class="syntax14"> </span><span class="syntax14">users</span><span class="syntax14"> </span><span class="syntax14">(</span><span class="syntax14">username</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">password</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">email</span><span class="syntax14">)</span><span class="syntax14">&quot;</span>
<span class="gutter">   6:</span>               <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">VALUES</span><span class="syntax14"> </span><span class="syntax14">(</span><span class="syntax14">'</span><span class="syntax14">marko</span><span class="syntax14">'</span><span class="syntax14">,</span><span class="syntax14">'</span><span class="syntax14">password</span><span class="syntax14">'</span><span class="syntax14">)</span><span class="syntax14">&quot;</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   7:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
This is program has valid PHP code, but the author is making several assumptions,
and not coding defensively.
</p><p>
The first is that the database connection is going to work. This might fail for
many of the reasons in and outside of our control: The database is offline,
the server is unreachable, someone might have changed the database login and
password for this application, and so on.
</p><p>
The second assumption is that the database selection with mysql_select_db() will
not fail. This too might fail for various reasons, such as our database schema
was moved to a different MySQL server, or has been renamed.
</p><p>
The third assumption is that the SQL query being run against the database is
valid. Let's look at it:
</p>
<blockquote><code><small>
INSERT INTO users (username, password, email)<br>
&nbsp;&nbsp;VALUES ('marko','password');<br>
</small></code></blockquote>
<p>
Looking at it a bit carefully, we notice that the number of table columns listed
(three) does not match the number of values provided (two).
</p><p>
This type of error will be hard to find if neither the actual SQL query as executed
nor the database error generated by the query is available to the programmer.
</p><p>
Two techniques for debugging SQL errors are:
</p>
</li>
</ul>
<blockquote>
<ol type="1">
<li class="row1">
<p>
Always keep SQL statements in a separate variable so you can print the query
to the browser exactly as it will be run.
</p></li>
<li class="row0">
<p>
Always print out the MySQL error messages when operations on the database fail.
</p></li>
</ol>
</blockquote>
<ul class="slidesUl1">
<li>
<p>
Let's use these techniques with the previous example:
</p>
<h4>
Filename: users2.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>    <span class="syntax18">@</span> <span class="syntax10">$</span><span class="syntax10">db</span> <span class="syntax18">=</span> <span class="syntax9">mysql_connect</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">localhost</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">djefferson</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">dino1234</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   4:</span>      <span class="syntax8">die</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Connection</span><span class="syntax13"> </span><span class="syntax13">to</span><span class="syntax13"> </span><span class="syntax13">server</span><span class="syntax13"> </span><span class="syntax13">failed:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">mysql_error</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span>    <span class="syntax18">}</span>
<span class="gutter">   6:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span> <span class="syntax9">mysql_select_db</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">test</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   7:</span>      <span class="syntax8">die</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Database</span><span class="syntax13"> </span><span class="syntax13">select</span><span class="syntax13"> </span><span class="syntax13">error:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">mysql_error</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax18">}</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">sql</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">INSERT</span><span class="syntax14"> </span><span class="syntax14">INTO</span><span class="syntax14"> </span><span class="syntax14">users</span><span class="syntax14"> </span><span class="syntax14">(</span><span class="syntax14">username</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">password</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">email</span><span class="syntax14">)</span><span class="syntax14">&quot;</span>
<span class="gutterH">  10:</span>          <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">VALUES</span><span class="syntax14"> </span><span class="syntax14">(</span><span class="syntax14">'</span><span class="syntax14">marko</span><span class="syntax14">'</span><span class="syntax14">,</span><span class="syntax14">'</span><span class="syntax14">password</span><span class="syntax14">'</span><span class="syntax14">)</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span><span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">debug</span><span class="syntax2"> </span><span class="syntax2">print</span><span class="syntax2"> </span><span class="syntax2">statement</span>
<span class="gutter">  12:</span><span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">[DB</span><span class="syntax13"> </span><span class="syntax13">query:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">sql</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">]&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>
<span class="gutter">  14:</span>    <span class="syntax10">$</span><span class="syntax10">result</span> <span class="syntax18">=</span> <span class="syntax9">mysql_query</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">sql</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span> <span class="syntax10">$</span><span class="syntax10">result</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  16:</span>      <span class="syntax8">die</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Database</span><span class="syntax13"> </span><span class="syntax13">query</span><span class="syntax13"> </span><span class="syntax13">error:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">mysql_error</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax18">}</span>
<span class="gutter">  18:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
First, notice the use of the <b>die()</b> statement on lines 4, 7 and 16.
The die() built-in function is a synonym for exit(). It can be passed a single
string parameter, which will be displayed before the script aborts.
</p><p>
An alternative syntax for using die() is the following:
</p>
<blockquote><code><small>
mysql_query($sql, $db) or<br>
&nbsp;&nbsp;die('Database query error: '. mysql_error($db));<br>
</small></code></blockquote>
<p>
When an error occurs in the statement preceding the "or" keyword,
die() prints out its string argument and the program exits.
</p><p>
By combining PHP's die statement and the returned error message from the MySQL
database, the MySQL error is displayed when the program exits.
</p><p>
The other diagnostic tool mentioned is to create a separate variable to hold
the SQL statement that will be sent to the database.
</p><p>
Then you can do a debug print of the value of the variable, in this case $sql,
and see what will be sent to the database before actually sending it.
</p><p>
If the SQL statement is very complex, you can copy and paste it from the failing
script directly into the MySQL client and debug it there.
</p><p>
Often, it is easier to debug SQL statements using the MySQL client rather than
doing it from the PHP script because you are working directly with the database
and the MySQL libraries rather than going to it indirectly through PHP first
where some of the error messages might get lost in translation.
</p><p>
Once you fix the SQL error, you can then update the PHP script.
</p><p>
Note that sometimes your first attempt at fixing an SQL error may not succeed,
but only change the error message returned by MySQL.
</p><p>
Especially if you as the programmer do not have a complete description of the
database schema available to you.
</p><p>
In the following example, we added the "email" column value to the VALUES clause
of the INSERT statement previously used:
</p>
<h4>
Filename: users3.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>    <span class="syntax18">@</span> <span class="syntax10">$</span><span class="syntax10">db</span> <span class="syntax18">=</span> <span class="syntax9">mysql_connect</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">localhost</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">djefferson</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">dino1234</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   4:</span>      <span class="syntax8">die</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Connection</span><span class="syntax13"> </span><span class="syntax13">to</span><span class="syntax13"> </span><span class="syntax13">server</span><span class="syntax13"> </span><span class="syntax13">failed:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">mysql_error</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span>    <span class="syntax18">}</span>
<span class="gutter">   6:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span> <span class="syntax9">mysql_select_db</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">test</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   7:</span>      <span class="syntax8">die</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Database</span><span class="syntax13"> </span><span class="syntax13">select</span><span class="syntax13"> </span><span class="syntax13">error:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">mysql_error</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax18">}</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">sql</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">INSERT</span><span class="syntax14"> </span><span class="syntax14">INTO</span><span class="syntax14"> </span><span class="syntax14">users</span><span class="syntax14"> </span><span class="syntax14">(</span><span class="syntax14">username</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">password</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">email</span><span class="syntax14">)</span><span class="syntax14">&quot;</span>
<span class="gutterH">  10:</span>          <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">VALUES</span><span class="syntax14"> </span><span class="syntax14">(</span><span class="syntax14">'</span><span class="syntax14">marko</span><span class="syntax14">'</span><span class="syntax14">,</span><span class="syntax14">'</span><span class="syntax14">password</span><span class="syntax14">'</span><span class="syntax14">,</span><span class="syntax14">'</span><span class="syntax14">marko</span><span class="syntax14">@</span><span class="syntax14">polo</span><span class="syntax14">.</span><span class="syntax14">com</span><span class="syntax14">'</span><span class="syntax14">)</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span><span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">debug</span><span class="syntax2"> </span><span class="syntax2">print</span><span class="syntax2"> </span><span class="syntax2">statement</span>
<span class="gutter">  12:</span><span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">[DB</span><span class="syntax13"> </span><span class="syntax13">query:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">sql</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">]&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>
<span class="gutter">  14:</span>    <span class="syntax10">$</span><span class="syntax10">result</span> <span class="syntax18">=</span> <span class="syntax9">mysql_query</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">sql</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span> <span class="syntax10">$</span><span class="syntax10">result</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  16:</span>      <span class="syntax8">die</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Database</span><span class="syntax13"> </span><span class="syntax13">query</span><span class="syntax13"> </span><span class="syntax13">error:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">mysql_error</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">db</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax18">}</span>
<span class="gutter">  18:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
What we did not realize was that the "email" column does not exist in the
<b>users</b> table!
</p></li>
<li><p>
More on Debugging
</p><p>
There are a number of excellent resources where you can find more information
on how to debug PHP programs.
</p><p>
If you find yourself consuming hours trying to debug your program, you might
get additional insight from the following Web sites:
</p><p>
<a href="http://www-128.ibm.com/developerworks/library/os-debug/">http://www-128.ibm.com/developerworks/library/os-debug/</a>
</p><p>
<a href="http://www.phpbuilder.com/columns/oier20010406.php3">http://www.phpbuilder.com/columns/oier20010406.php3</a>
</p><p>
<a href="http://dd.cron.ru/dbg/">http://dd.cron.ru/dbg/</a>
</p><p>
<a href="http://xdebug.org/">http://xdebug.org/</a>
</p><p>
<a href="http://www.developertutorials.com/tutorials/php/php-debugging-with-zend-studio-8-02-01/page1.html">http://www.developertutorials.com/tutorials/php/php-debugging-with-zend-studio-8-02-01/page1.html</a>
</p>
</li>
</ul>
</div>
</body>
</html>
