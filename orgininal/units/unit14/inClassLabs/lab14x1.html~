<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content="HTML Tidy, see www.w3.org" />
  <title>In-class Lab 14.1</title>
  <link href="../../../css/basic.css" rel="stylesheet" type="text/css" />
  <script type="text/javascript" language="JavaScript">
<!--
function putSemester() {
    var today=new Date();
    var thisMonth=today.getMonth()+1;
    var thisYear=today.getFullYear();
    if(thisMonth <=6) {
        return "Spring, " + thisYear;
    }
    else {
       return "Fall, " + thisYear;
    }
}//-->
  </script>
  <style type="text/css">
<!--
    .bgStripes {
        background-image:url(../../../images/Xstripes.gif);
        background-attachment: fixed;
    }
    body {
        background-color:white;
    }
    strong {
        font-family: Arial, Helvetica, sans-serif;
    }
-->
  </style>
</head>
<body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">
<table class="bgStripes" border="0" width="100%">
  <tbody>
    <tr name="firstRow">
      <td valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
      <script type="text/javascript">
<!--
document.write(putSemester());
-->
      </script>
      </span> <br />
</td>
<td style="text-align: center;"><span style="color: darkblue; font-size: medium; font-weight: bold;">
PHP Web Development with MySQL</span> </td>
<td align="right" valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
3 Credits</span> </td>
</tr>
<tr>
<td colspan="3" style="text-align: center;"><span style="font-size: xx-small; font-weight: bold;">
152-166</span> </td>
</tr>
</tbody>
</table>
<h2>In-class Lab 14.1</h2>
<ol type="I">
<li class="row0">
<p>Exercise 1</p>
<ol type="1">
<li class="row1">
<p>
Create a table named "users" in your local <b>test</b> database schema
(if it does not already exist)
using a SQL CREATE TABLE command similar to this:
</p>
<blockquote><code>
CREATE TABLE users (<br>
&nbsp;&nbsp;id int(12) NOT NULL auto_increment,<br>
&nbsp;&nbsp;name varchar(20) NOT NULL,<br>
&nbsp;&nbsp;password varchar(40) NOT NULL,<br>
&nbsp;&nbsp;PRIMARY KEY(id)<br>
);<br>
</code></blockquote>
</li>
<li class="row0">
<p>
If using your Linux VM, create directory <b>lab14</b> under your
<b>/var/www/labs</b> directory, if it does not exist.
Otherwise create directory <b>lab14</b> under
the document root of whatever web server you are using.
On the MATC Windows lab computers that will be: <b>C:\xampp\htdocs</b>
If using XAMPP on your external USB drive it will probably be: <b>E:\xampp\htdocs</b>
</p>
</li>
<li class="row1">
<p>In <b>jEdit</b> or another text editor, create an HTML form file named
<b>lab14x1ex1.html</b> . In this file, you will create an HTML form to accept a
user name and password. The form's ACTION attribute should be the file name
"lab14x1ex1.php".
</p>
</li>
<li class="row0">
<p>
Next create the PHP script <b>lab14x1ex1.php</b> to INSERT the name and password
into the "users" table in your local <b>test</b> database schema. This script
should NOT escape the form variables with <b>addslashes()</b> or
<b>mysql_real_escape_string()</b> before storing them in the database.
</p>
</li>
<li class="row1">
<p>
Check your <b>php.ini</b> file. If the <b>magic_quotes_gpc</b> directive is set
to "On", change the setting to "Off", so PHP input and output will not be
automatically escaped. Note that the magic_quotes_gpc directive will not exist
in PHP 6, according to currently available information.
</p></li>
<li class="row0">
<p>
Try to add 2 users to the "users" table in one execution of your form and script
by putting a string similar to the following into the form's name field:
</p>
<blockquote><code>
jack','secret'),('jill
</code></blockquote>
<p>
Then just put a regular entry into the password field. Could you do the SQL
injection using the password field instead?
</p>
</li>
<p><hr width="50%" /></p>
</li>
</ol>
</li>
<li class="row0">
<p>
Exercise 2
</p>
<ol type="1">
<li class="row0">
<p>
Now copy your HTML form and PHP script from Exercise 1 into files named
<b>lab14x1ex2.html</b> and <b>lab14x1ex2.php</b> .
</p>
</li>
<li class="row0">
<p>
Modify the <b>lab14x1ex2.html</b> form's ACTION attribute to be the file name "lab14x1ex2.php".
</p>
</li>
<li class="row0">
<p>
Then modify the PHP script file <b>lab14x1ex2.php</b> to escape the form
variables with the <b>mysql_real_escape_string()</b> built-in function before
storing them in the database.
</p>
<b>Note:</b> Do not turn the magic_quotes_gpc directive back on in your php.ini
file!
<li class="row0">
<p>
Again try to add 2 users to the "users" table in one execution of your form and
script by putting a string similar to the following into the form's name field:
</p>
<blockquote><code>
angelina','brangelina'),('brad
</code></blockquote>
</li>
<li class="row1">
<p>
Test your Exercise 2 form and script to be sure it successfully blocks SQL
injection, in this case. What additional steps might you take to prevent hackers
from attempting SQL injection attacks?
</p>
</li>
<li class="row1">
<p>
Show both exercises to your instructor to demonstrate SQL injection and how to
prevent it.
</p>
</li>
</ol>
<p><hr width="75%" /></p>
</li>
</ol>
</body>
</html>
