h2. The Basics of PHP Operators



h3. Data objects can be manipulated in a number of ways by the large number of operators provided by PHP.

* Operators are symbols, such as @+, -, =, >,@ and @<,@ that produce a result based on some rules.
* An operator manipulates data objects called operands; for example, 5 and 4 are operands in the expression: 5 + 4 Operators and operands are found in expressions.
* An expression combines a group of values to make a new value: @n = 5 + 4@ When you terminate an expression with a semicolon, you have a complete statement; for example: @n = 5 + 4;@
* In the numeric expression @5 + 4 - 2@ , three numbers are combined. The operators are the @+@ and @-@ signs. The operands for the @+@ sign are 5 and 4. After that part of the expression is evaluated to 9, the expression becomes @9 - 2@ . After evaluating the complete expression, the result is 7.
* Because the plus and minus operators each manipulate two operands, they are called binary operators.
* If there is only one operand, the operator is called a unary operator, and if there are three operands, it is called a ternary operator.
* We'll see examples of these operators later in this unit.
* The operands can be either strings, numbers, booleans, or a combination of these. Some of the operators we have already used are the concatenation operator to join two strings together, the reference operator to create an alias for a variable, and the assignment operator to assign a value to a variable.
* Now let's look at a whole plethora of additional PHP operators and see how they manipulate their operands.

h3. Assignment

* An assignment statement evaluates the expression on the right side of the equal sign and assigns the result to the variable on the left side of the equal sign. The equal sign is the assignment operator.
<br /><pre>
$total = 5 + 4;
$name = "Tony";
</pre>

h3. Precedence and Associativity

* When an expression contains a number of operators and operands, such as @5 * 4 + 3 / -2.2@ , and the order of evaluation is ambiguous, then PHP must determine what to do.
* This is where the precedence and associative rules come in. They tell PHP how to evaluate such an expression. Precedence refers to the way in which the operator binds to its operand; that is, should addition be done before division or should assignment come before multiplication. The precedence of one operator over another determines what operation is done first.
* As shown in the precedence table below, the operators are organized as a hierarchy, with the operators of highest precedence at the top, similar to a social system where those with the most power (or money) are at the top.
* In the rules of precedence, the multiplication operator is of higher precedence than the addition operator, technically meaning the operator of higher precedence binds more tightly to its operands.
* The assignment operators are low in precedence and thus bind loosely to their operand. In the expression @sum = 5 + 4@, the equal sign is of low precedence so the expression @5 + 4@ is evaluated first and then the result is assigned to sum.
* Parentheses are of the highest precedence. An expression placed within parentheses is evaluated first; for example, in the expression @2 * ( 10 - 4 )@, the expression within the parentheses is evaluated first and that result is multiplied by 2.
* When parentheses are nested, the expression contained within the innermost set of parentheses is evaluated first.
* Table: Precedence and Associativity (Highest to Lowest)

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Operator*|{background:#ccc}.*Description*|{background:#ccc}.*Associativity* |
|@()@                        |Parentheses                                |Left to right |
|@new@                       |Creates an object                          |Nonassociative|
|@[@                         |Array subscript                            |Right to left |
|@++ --@                     |Auto increment, decrement                  |Nonassociative|
|@! ~ -@                     |Logical not, bitwise not, negation         |Nonassociative|
|@(int) (float)@<br />@(string) (array) (object)@|Cast                   |&nbsp;        |
|@@@                         |Inhibit errors                             |&nbsp;        |
|@* / %@                     |Multiply, divide, modulus                  |Left to right |
|#                     |Add, subtract, string concatenation        |Left to right |
|@<< >>@                     |Bitwise left shift, right shift            |Left to right |
|@< <=@                      |Less than, less than or equal to           |Left to right |
|@> >=@                      |Greater than, greater than or equal to     |&nbsp;        |
|@= = !=@                    |Equal to, not equal to                     |Nonassociative|
|@= = = != =@                |Identical to (same type), not identical to |&nbsp;        |
|@&@                         |Bitwise AND                                |Left to right |
|@^@                         |Bitwise XOR                                |&nbsp;        |
|&#124;                      |Bitwise OR                                 |&nbsp;        |
|@&&@                        |Logical and                                |Left to right |
|&#124;&#124;                |Logical or                                 |Left to right |
|@? :@                       |Ternary, conditional                       |Left to right |
|@= += -= *= /= %= <<= >>=@  |Assignment                                 |Right to left |
|@and@                       |Logical AND                                |Left to right |
|@xor@                       |Logical XOR                                |Left to right |
|@or@                        |Logical OR                                 |Left to right |
|@, (comma)@                 |List separator, etc.                       |Left to right |

* Associativity refers to the order in which an operator evaluates its operands: left to right, in no specified order, or right to left.
* When all of the operators in an expression are of equal precedence, normally the association is left to right; for example, in the expression 5 + 4 + 3, the evaluation is from left to right.
* In the following script, how is the expression evaluated? Is addition, multiplication, or division done first? In what order, right to left or left to right?
* Filename: *opassoc.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Precedence and Associativity()<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">lightgreen</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">font</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">face</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">arial</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">size</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax13">'</SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13">1</SPAN><SPAN CLASS="syntax13">'</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">5</SPAN> <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax5">4</SPAN> <SPAN CLASS="syntax18">&#42;</SPAN> <SPAN CLASS="syntax5">12</SPAN> <SPAN CLASS="syntax18">/</SPAN> <SPAN CLASS="syntax5">4</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">5</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#42;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">12</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">=</SPAN> (<SPAN CLASS="syntax5">5</SPAN> <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax5">4</SPAN>) <SPAN CLASS="syntax18">&#42;</SPAN> <SPAN CLASS="syntax5">12</SPAN> <SPAN CLASS="syntax18">/</SPAN> (<SPAN CLASS="syntax5">4</SPAN> <SPAN CLASS="syntax18">-</SPAN> <SPAN CLASS="syntax5">2</SPAN>)<SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  11:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">(</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">5</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">)</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#42;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">12</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">(</SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">-</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">2</SPAN><SPAN CLASS="syntax13">)</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  13:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  14:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
</PRE>
* The Table above summarizes the rules of precedence and associativity for the PHP operators. The operators on the same line are of equal precedence. The rows are in order of highest to lowest precedence.
* Filename: *opassoc2.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Precedence and Associativity()<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">lightgreen</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">font</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">face</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">arial</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">size</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax13">'</SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13">1</SPAN><SPAN CLASS="syntax13">'</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">5</SPAN> <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax5">4</SPAN> <SPAN CLASS="syntax18">&#42;</SPAN> <SPAN CLASS="syntax5">12</SPAN> <SPAN CLASS="syntax18">/</SPAN> <SPAN CLASS="syntax5">4</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">5</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#42;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">12</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">=</SPAN> (<SPAN CLASS="syntax5">5</SPAN> <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax5">4</SPAN>) <SPAN CLASS="syntax18">&#42;</SPAN> (<SPAN CLASS="syntax5">12</SPAN> <SPAN CLASS="syntax18">/</SPAN> <SPAN CLASS="syntax5">4</SPAN>) <SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  11:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">(</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">5</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">)</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#42;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">(</SPAN><SPAN CLASS="syntax13">12</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">4</SPAN><SPAN CLASS="syntax13">)</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  13:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  14:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
</PRE>
* Because multiplication and division are of higher precedence than addition, those expressions will be evaluated first, associating from left to right.

h3. Arithmetic Operators

* Arithmetic operators take numerical values (either literals or variables) as their operands and return a single numerical value.
* The standard arithmetic operators are addition @(+)@, subtraction @(-)@, multiplication @(*)@, and division @(/)@.
* Table: *Arithmetic Operators*

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Operator/Operands*|{background:#ccc}.*Function*|
|@x + y@            |Addition      |
|@x - y@            |Subtraction   |
|@x * y@            |Multiplication|
|@x / y@            |Division      |
|@x % y@            |Modulus       |

* The arithmetic operations in the following example illustrate precedence and associativity. The expression in parentheses is evaluated first, then the module operator (the % sign) will divide that result by 7 and return the remainder, and addition is performed last.
* Filename: *arith.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Arithmetic Operators<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">#</SPAN><SPAN CLASS="syntax13">ccccff</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">text</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">000033</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">h2</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Arithmetic operators<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">h2</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">p</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num1</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">5</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num2</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">7</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num1</SPAN> <SPAN CLASS="syntax18">&#43;</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num2</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">h3</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num1</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#43;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num2</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  11:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN> <SPAN CLASS="syntax18">&#43;</SPAN> (<SPAN CLASS="syntax5">10</SPAN> <SPAN CLASS="syntax18">/</SPAN> <SPAN CLASS="syntax5">2</SPAN> <SPAN CLASS="syntax18">&#43;</SPAN> <SPAN CLASS="syntax5">5</SPAN>) <SPAN CLASS="syntax18">%</SPAN> <SPAN CLASS="syntax5">7</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">result</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">12</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#43;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">(</SPAN><SPAN CLASS="syntax13">10</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">2</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#43;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">5</SPAN><SPAN CLASS="syntax13">)</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">%</SPAN><SPAN CLASS="syntax13">7</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">h3</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  13:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  14:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">  15:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  16:</SPAN>
</PRE>

h3. Short Circuit Assignment Operators

* The "short circuit" assignment operators allow you to perform an arithmetic or string operation by combining an assignment operator with an arithmetic or string operator. For example: @$x = $x + 1@ can be written: @$x+=1@
* Table: Assignment Operators
                                                                 
table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Operator*|{background:#ccc}.*Example*|{background:#ccc}.*Meaning*                                    |
|@=@       |@$x = 5;@   |Assign 5 to variable $x.                   |
|@+=@      |@$x += 3;@  |Add 3 to $x and assign result to $x.       |
|@-=@      |@$x -= 2;@  |Subtract 2 from $x and assign result to $x.|
|@*=@      |@$x *= 4;@  |Multiply $x by 4 and assign result to $x.  |
|@/=@      |@$x /= 2;@  |Divide $x by 2 and assign result to $x.    |
|@%=@      |@$x %= 2;@  |Divide $x by 2 and assign remainder to $x. |

* Filename: *shortcut.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Arithmetic Operators<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">#</SPAN><SPAN CLASS="syntax13">99ff66</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">h2</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Shortcut Operators<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">h2</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">font</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">size</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&#43;</SPAN><SPAN CLASS="syntax13">1</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>    <SPAN CLASS="syntax2">//</SPAN><SPAN CLASS="syntax2">Using</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">shortcuts</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">10</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">10</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">assigned</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">to</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>    
<SPAN CLASS="gutter">  11:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN> <SPAN CLASS="syntax18">&#43;</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">2</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#43;</SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">2</SPAN><SPAN CLASS="syntax13">;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  13:</SPAN>
<SPAN CLASS="gutter">  14:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN> <SPAN CLASS="syntax18">-</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">1</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  15:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">-</SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">1</SPAN><SPAN CLASS="syntax13">;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  16:</SPAN>
<SPAN CLASS="gutter">  17:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN> <SPAN CLASS="syntax18">&#42;</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">3</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  18:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&#42;</SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">3</SPAN><SPAN CLASS="syntax13">;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  19:</SPAN>
<SPAN CLASS="gutterH">  20:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN> <SPAN CLASS="syntax18">%</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">5</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  21:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">%</SPAN><SPAN CLASS="syntax13">=</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">5</SPAN><SPAN CLASS="syntax13">;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">\$num</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">num</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  22:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  23:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  24:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
</PRE>
* The shortcut assignment modulus operator, %, yields the integer amount that remains after the scalar $num is divided by 5.
* The operator is called the modulus operator or remainder operator. The expression $num %=5 is equivalent to: $num = $num % 5;

h3. Autoincrement and Autodecrement Operators

* To make programs easier to read, to simplify typing, and, at the machine level, to produce more efficient code, the autoincrement @(++)@ and autodecrement @(--)@ operators are provided.
* The autoincrement operator performs the simple task of incrementing the value of its operand by 1, and the autodecrement operator decrements the value of its operand by 1.
* The operator has two forms: The first form prefixes the variable with either @++@ or @--@ (e.g., @++$x@ or @--$x@); the second form postfixes (places the operator after) the variable name with either @++@ or @--@ (e.g., @$x++@, @x--@).
* For simple operations, such as @$x++@ or @$x--@, @++$x@ or @--$x@, the effect is the same; both @++$x@ and @$x++@ add 1 to the value of @$x@, and both @--$x@ and @$x--@ subtract one from the value of @$x@.
* Table: Autoincrement and Autodecrement Operators

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Operator*|{background:#ccc}.*Function*|{background:#ccc}.*What It Does*|{background:#ccc}.*Examples*|
|@++$x@      |Preincrement   |Adds 1 to $x          |@$x = 3; $x++; $x is now 4@|
|@$x++@      |Postincrement  |Adds 1 to $x          |@$x = 3; ++$x; $x is now 4@|
|@--$x@      |Predecrement   |Subtracts 1 from $x   |@$x = 3; $x--; $x is now 2@|
|@$x--@      |Postdecrement  |Subtracts 1 from $x   |@$x = 3; --$x; $x is now 2@|

* Now you have four ways to add 1 to the value of a variable:
<br /><pre>
$x = $x + 1;
$x += 1;
$x++;
++$x ;
</pre>
* You also have four ways to subtract 1 from the value of a variable:
<br /><pre>
$x = $x - 1;
$x -= 1;
$x--;
--$x;
</pre>
* The placement of the operators does make a difference in more complex expressions especially when part of an assignment. In the example below, @$y = $x++@ is not the same as: @$y = ++$x@
* Filename: *prevspost.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Autoincrement and Autodecrement<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">6699ff</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">x</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax5">5</SPAN><SPAN CLASS="syntax18">;</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">y</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax5">0</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">y</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax18">++</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">x</SPAN><SPAN CLASS="syntax18">;</SPAN>  <SPAN CLASS="syntax2">//</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">add</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">1</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">to</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">$x</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">first;</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">then</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">assign</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">to</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">$y</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">h3</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">Preincrement</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$y</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">y</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  11:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$x</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">x</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">hr</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  13:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">x</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax5">5</SPAN><SPAN CLASS="syntax18">;</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">y</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax5">0</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  14:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">y</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">x</SPAN><SPAN CLASS="syntax18">++</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  15:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">Postincrement</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  16:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$y</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">y</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  17:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$x</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">is</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">x</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  18:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  19:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">  20:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
</PRE>
* When the preincrement operator is applied to @$x@, it will be incremented before the assignment is made, so @$y@ gets a value of 6.
* When the postincrement operator is applied to @$x@, it will be incremented after the assignment to the variable @$y@ is made, so @$y@ is 5 and @$x@ is 6.

h3. Some Useful Math Functions

* The table below lists some of the math functions provided by PHP. The complete list can be found at the PHP Web site: http://php.net
* Table: Math Functions

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Function*|{background:#ccc}.*Meaning*|{background:#ccc}.*Example*|
|@abs()@         |Absolute value             |@echo abs(-5); // 5@<br />@echo abs(5.3); // 5@|
|@base_convert()@|Convert a number between<br />arbitrary bases|@echo base_convert("ff",16,10); // 255@<br />@echo base_convert("a",16,2); // 1010@<br />@echo base_convert(11,10,8); // 13@|
|@bindec()@            |Binary to decimal          |@echo bindec('1010'); // 10@<br />@echo bindec('110010'); // 50@|
|@ceil()@              |Round fractions up         |@echo ceil(6.2); // 7@<br />@echo ceil(6.8); // 7@|
|@decbin()@            |Decimal to binary          |@echo decbin(5); // 101@<br />@echo decbin(20); // 10100@|
|@dechex()@            |Decimal to hexadecimal     |@echo dechex(15); // f@<br />@echo dechex(124); // 7c@|
|@decoct()@            |Decimal to octal           |@echo decoct(8); // 10@<br />@echo decoct(20); // 24@|
|@floor()@             |Round fractions down       |@echo floor(6.2); // 6@ <br />@echo floor(6.8); // 6@|
|@getrandmax()@        |Show largest possible<br />random value|@echo getrandmax(); // returns 32767@      |
|@hexdec()@            |Hexadecimal to decimal     |@echo hexdec("ff"); // returns 255@<br />@echo hexdec("a"); // returns 10@|
|@is_finite()@         |Finds whether a value is<br />a legal finite number,<br />returns boolean|@echo is_finite(pi()); // returns 1 true@  |
|@is_infinite()@       |Finds whether a value is<br />infinite|@echo is_infinite(pow(10, 1000000));@<br />@// returns 1 true@|
|@is_nan()@            |Finds whether a value is<br />not a number|@echo is_nan(5.2) // returns false@        |
|@max()@               |Find highest value         |@echo max(1,3,5,12,8); // 12@              |
|@min()@               |Find lowest value          |@echo min(5,3.2, 8, 4); // 3.2@            |
|@octdec()@            |Octal to decimal           |@echo octdec(10); // returns 8@            |
|@pi()@                |Get value of pi            |@echo pi(); // 3.1415926535898@            |
|@pow()@               |Exponential expression     |@echo pow(3,2); // 9@<br />@echo pow(10,3); // 1000@|
|@rand(start,finish)@|Generate a random integer<br />between start and finish|@echo rand(1,10); // 5@<br />@echo rand(1,10); // 7@<br />@echo rand(1,10); // 10@|
|@round()@             |Rounds a float             |@echo round(6.4); // 6@<br />@echo round(6.5); // 7@|
|@sqrt()@              |Square root                |@echo sqrt(81); // 9@                      |
|@srand()@             |Seed the random number generator|&nbsp;|

h3. Casting Operators

* PHP is a loosely typed language, which really means that you don't have to be concerned about what kind of data is stored in a variable.
* You can assign a number to $x on one line and on the next line assign a string to $x; you can compare numbers and strings, strings and booleans, and so on.
* PHP automatically converts values when it assigns values to a variable or evaluates an expression. If data types are mixed, that is, a number is compared to a string, a boolean is compared to a number, a string is compared to a boolean, PHP must decide how to handle the expression.
* Most of the time, letting PHP handle the data works fine, but there are times when you want to force a conversion of one type to another. This is done by using the casting operators listed in the following table.
* Casting doesn't change the value in a variable; it affects the way other operators interpret the value. Casting can be useful when casting strings to integers, arrays to objects, and so on.
* Table: Casting Operators

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Operator*|{background:#ccc}.*Synonym*|{background:#ccc}.*Changes Data Type To*|
|@(int)@     |@(integer)@  |Integer             |
|@(float)@   |@(real)@     |Floating point      |
|@(string)@  |&nbsp;       |String              |
|@(bool)@    |@(boolean)@  |Boolean             |
|@(array)@   |&nbsp;       |Array               |

* Here is the format for using casting operators:
* Format: @variable = (cast operator) value;@
* The following are examples of casting:
<br /><pre>
$salary = "52000"; // Variable is assigned a string value
$salary = (float) $salary; // Value is forced to float and reassigned
</pre>
* Filename: *casting.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Type Casting<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">aqua</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">font</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">face</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">verdana</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">size</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13">1</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">500</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">dogs</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">number</SPAN> <SPAN CLASS="syntax18">=</SPAN> (int) <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">The</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">value</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">in</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">\$string</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">has</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">been</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">cast</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">to</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">an</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">int</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>        <SPAN CLASS="syntax18">,</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">number</SPAN><SPAN CLASS="syntax18">,</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  11:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">hr</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">  13:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total_seconds</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">1132</SPAN><SPAN CLASS="syntax18">;</SPAN> <SPAN CLASS="syntax2">//</SPAN><SPAN CLASS="syntax2">Total</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">running</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">time</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">in</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">seconds</SPAN>
<SPAN CLASS="gutter">  14:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">minutes</SPAN> <SPAN CLASS="syntax18">=</SPAN> (int)(<SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total_seconds</SPAN> <SPAN CLASS="syntax18">/</SPAN> <SPAN CLASS="syntax5">60</SPAN>)<SPAN CLASS="syntax18">;</SPAN> <SPAN CLASS="syntax1">/&#42;</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Result</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">of</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">expression</SPAN>
<SPAN CLASS="gutterH">  15:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">is</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">cast</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">to</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">an</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">integer</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">&#42;/</SPAN>
<SPAN CLASS="gutter">  16:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">seconds_left</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total_seconds</SPAN> <SPAN CLASS="syntax18">%</SPAN> <SPAN CLASS="syntax5">60</SPAN><SPAN CLASS="syntax18">;</SPAN> <SPAN CLASS="syntax2">//</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">Modulus</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">returns</SPAN>
<SPAN CLASS="gutter">  17:</SPAN>                                         <SPAN CLASS="syntax2">//</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">seconds</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">left</SPAN>
<SPAN CLASS="gutter">  18:</SPAN>    print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">You</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">ran</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">for</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">minutes</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">minutes</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">and</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">seconds_left</SPAN>
<SPAN CLASS="gutter">  19:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">seconds\n</SPAN><SPAN CLASS="syntax13">.</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  20:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  21:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">hr</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  22:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">  23:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">5</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  24:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total</SPAN> <SPAN CLASS="syntax18">=</SPAN> (float) <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  25:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\$total</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">has</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">been</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">cast</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">to</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">float</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">,</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">total</SPAN> <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax5">2</SPAN><SPAN CLASS="syntax18">.</SPAN><SPAN CLASS="syntax5">3</SPAN><SPAN CLASS="syntax18">,</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  26:</SPAN>    <SPAN CLASS="syntax8">if</SPAN>( <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">2</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">&gt;</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">100</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">dogs</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>) <SPAN CLASS="syntax18">{</SPAN>print <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">true</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN><SPAN CLASS="syntax18">}</SPAN>
<SPAN CLASS="gutter">  27:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  28:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  29:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
</PRE>
* Your instructor will run the above script and discuss its output with you.

h3. Concatention Operator

* The process of joining strings together is called concatenation. The PHP string concatenation operator is a dot (.). Its operands are two strings.
* It returns the concatenation of its right and left operands. If either operand is a number and the other is a string, PHP still concatenates them as strings.
<br /><pre>
"pop" . "corn" // results in "popcorn"
"Route " . 66 // results in "Route 66"
</pre>
* There is also a shortcut concatenation assignment operator which is used like the other shortcut operators (.=).
* Filename: *concat.php*
<br /><PRE>
<SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   2:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>Concatenation<SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">title</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">head</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   3:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">bgcolor</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">#</SPAN><SPAN CLASS="syntax13">33ff99</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">   4:</SPAN>  <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">font</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">face</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">verdana</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17"> </SPAN><SPAN CLASS="syntax17">size</SPAN><SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">+</SPAN><SPAN CLASS="syntax13">1</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutterH">   5:</SPAN>  <SPAN CLASS="syntax17">&lt;?php</SPAN>
<SPAN CLASS="gutter">   6:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string1</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">My</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">dog</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   7:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string2</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">has</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">fleas</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   8:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string3</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string1</SPAN> <SPAN CLASS="syntax18">.</SPAN> <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string2</SPAN> <SPAN CLASS="syntax18">.</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">   9:</SPAN>    <SPAN CLASS="syntax2">//</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">$string1</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">.=</SPAN><SPAN CLASS="syntax2"> </SPAN><SPAN CLASS="syntax2">$string2</SPAN>
<SPAN CLASS="gutterH">  10:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">First</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">string</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string1</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  11:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">Second</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">string</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string2</SPAN><SPAN CLASS="syntax13">&lt;</SPAN><SPAN CLASS="syntax13">br</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">/</SPAN><SPAN CLASS="syntax13">&gt;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  12:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">After</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">concatenation</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string3</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  13:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">Whoops</SPAN><SPAN CLASS="syntax13">!</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">Let</SPAN><SPAN CLASS="syntax13">'</SPAN><SPAN CLASS="syntax13">s</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">add</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">a</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">space</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  14:</SPAN>    <SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string3</SPAN> <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string1</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">.</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">.</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string2</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutterH">  15:</SPAN>    <SPAN CLASS="syntax8">echo</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">After</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">adding</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">a</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">space</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax10">$</SPAN><SPAN CLASS="syntax10">string3</SPAN><SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax18">;</SPAN>
<SPAN CLASS="gutter">  16:</SPAN>  <SPAN CLASS="syntax17">?&gt;</SPAN>
<SPAN CLASS="gutter">  17:</SPAN> <SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">body</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
<SPAN CLASS="gutter">  18:</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">html</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
</PRE>

<br />

---

[[Unit Three => 152-166 Unit Three Index]]