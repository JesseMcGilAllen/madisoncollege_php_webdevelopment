 PHP and MySQL Developmentredits


 Another Option, Databases

    * Doing It a Better Way: Database Management Systems
      So far, all the examples we have looked at use flat files. Later in the course, we look at how to use MySQL, a relational database management system (RDBMS), instead. You might ask, "Why would I bother?"
    * Problems with Using Flat Files
      There are a number of problems in working with flat files:
          o When a file grows large, working with it can be very slow.
          o Searching for a particular record or group of records in a flat file is difficult. If the records are in order, you can use some kind of binary search in conjunction with a fixed-width record to search on a key field. If you want to find patterns of information (for example, you want to find all the customers who live in a city), you would have to read in each record and check it individually.
          o Dealing with concurrent access can become problematic. You have seen how to lock files, but locking can cause the race condition we discussed earlier. It can also cause a bottleneck. With enough traffic on a site, a large group of users may be waiting for the file to be unlocked before they can place their order. If the wait is too long, people will go elsewhere to buy.
          o All the file processing you have seen so far deals with a file using sequential processing; that is, you start from the beginning of the file and read through to the end. Inserting records into or deleting records from the middle of the file (random access) can be difficult because you end up reading the whole file into memory, making the changes, and writing the whole file out again. With a large data file, having to go through all these steps becomes a significant overhead.
          o Beyond the limits offered by file permissions, there is no easy way of enforcing different levels of access to data.
    * How RDBMSs Solve These Problems
      Relational database management systems address all these issues:
          o RDBMS's can provide much faster access to data than flat files. MySQL, the database system we use in this course, has some of the fastest benchmarks of any RDBMS.
          o RDBMS's can be easily queried to extract sets of data that fit certain criteria.
          o RDBMS's have built-in mechanisms for dealing with concurrent access so that you, as a programmer, do not have to worry about it.
          o RDBMS's provide random access to your data.
          o RDBMS's have built-in privilege systems. MySQL has particular strengths in this area.
      Probably the main reason for using an RDBMS is that all (or at least most) of the functionality that you want in a data storage system has already been implemented. Sure, you could write your own library of PHP functions, but why reinvent the wheel?
      Later in the course, we discuss how relational databases work generally, and specifically how you can set up and use MySQL to create database-backed websites.
      If you are building a simple system and do not feel you need a full-featured database but want to avoid the locking and other issues associated with using a flat file, you may want to consider using PHP's new SQLite extension. This extension provides essentially an SQL interface to a flat file. In this course, we focus on using MySQL, but if you would like more information about SQLite, you can find it at:
           http://sqlite.org/
      and
           http://www.php.net/sqlite
