<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content="HTML Tidy, see www.w3.org" />
  <title>Project Four</title>
  <link href="../../../css/basic.css" rel="stylesheet" type="text/css" />
  <script type="text/javascript" language="JavaScript">

<!--

function putSemester() {

    var today=new Date();

    var thisMonth=today.getMonth()+1;

    var thisYear=today.getFullYear();

    if(thisMonth <=6) {

        return "Spring, " + thisYear;

    }

    else {

       return "Fall, " + thisYear;

    }

}//-->

  

  </script>
  
  <style type="text/css">

<!--

    .bgStripes {

        background-image:url(../../../images/Xstripes.gif);

        background-attachment: fixed;

    }

    

    body {

        background-color:white;

    }

    

    strong {

        font-family: Arial, Helvetica, sans-serif;

    }

    

 

-->

  

  </style>
</head>


<body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">

<table class="bgStripes" border="0" width="100%">

  <tbody>

    <tr name="firstRow">

      <td valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
      
      <script type="text/javascript">

          <!--

            document.write(putSemester());

            -->

      

      </script>
      </span> <br />

      </td>
<td style="text-align: center;"><span style="font-weight: bold; font-size: medium; color: darkblue;">
PHP Web Development with MySQL</span> </td>
<td align="right" valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
3 Credits</span> </td>
</tr>
<tr>
<td colspan="3" style="text-align: center;"><span style="font-size: xx-small; font-weight: bold;">152-166</span> </td>
</tr>
</tbody>
</table>
<h2>Project Four</h2>
<blockquote>
<h4>The PHP and MySQL Orders Application</h4>
</blockquote>
<h3>Table of Contents</h3>
<ul>
<li><a href="#concepts">1. Concepts</a></li>
<li><a href="#readings">2. Readings</a></li>
<li><a href="#overview">3. Project Overview</a></li>
<li><a href="#execs">4. Exercises</a></li>
<li><a href="#submit">5. Submitting the project.</a></li>
</ul>
<h3><a id="concepts" name="concepts">1. Concepts</a></h3>
<blockquote>
<a id="concepts" name="concepts">  </a>
<p>
<a id="concepts" name="concepts">This project is designed to enhance a
simple PHP web application to use additional HTML Form features,
and the MySQL database to store records. You will learn these concepts:</a>
</p>
<a id="concepts" name="concepts">  </a>
<ul>
<a id="concepts" name="concepts">
<li>Creating and Adding Functionality to PHP scripts</li>
<li>Using Additional Functionality of HTML Forms</li>
<li>Using the MySQL DBMS</li>
<li>Accessing a MySQL Database Using PHP
</li>
</a>
</ul>
</blockquote>
<h3><a id="readings" name="readings">2. Readings</a></h3>
<blockquote>
<a id="readings" name="readings">  </a>
<p><a id="readings" name="readings">To prepare for this project
you should study or review the following:</a></p>
<ul>
<a id="readings" name="readings">
<li><p>
<strong>PHP and MySQL by Example</strong>
Ellie Quigley with Marko Gargenta, Prentice Hall
</p></a>
<ul>
<li><a id="readings" name="readings">
Chapter 10, More on PHP Forms</a>
</li>
<li>Chapter 13, Introduction to MySQL</li>
<li>Chapter 14, SQL Language Tutorial</li>
<li>Chapter 15, PHP and MySQL Integration</li>
</ul>
</li>
</a>
</ul>
</blockquote>
<h3><a id="overview" name="overview">3. Project Overview</a></h3>
<blockquote>
<p><a id="overview" name="overview">
This project will involve additional HTML form features,
and use of the MySQL DBMS with the PHP programming language.
</a></p>
</blockquote>
<h3><a id="execs" name="execs">4.
Exercises</a></h3>
<blockquote>
<a id="execs" name="execs"> </a><a id="ex1" name="ex1">
<p>
Create a directory named <b>project4</b> under your web server's document root
directory. Place all HTML files and PHP scripts for this project in this new
directory.
</p>
<p>
<b>Note:</b>
If you are working on an MATC lab computer, always save a copy of this
directory and all the files in it to either the class server, a USB
thumb drive, a floppy disk or similar media, at the end of each work
session. Otherwise your work will be lost!
</p>
</a>
<h4><a id="ex1" name="ex1">Exercise 1</a></h4>
<ul>
<li>
<p><a id="ex1" name="ex1">
Download these two files containing an HTML form</a>
(<a href="p4form.html.txt">p4form.html</a>)
and a PHP script for processing the form (<a href="p4process.php.txt">p4process.php</a>)
into your project4 directory. Be sure to give the files the original names, since
the HTML form file invokes the PHP file by name.
</p>
</li>
<li>
<p>
Modify the data collected by the form in <b>p4form.html</b> to include customer
name and address fields, and hidden fields that identify the form.
Modify the PHP script named <b>p4process.php</b> to save the order
information to two MySQL database tables named "order_master" and "order_detail".
</p>
<ul>
<li>
<p>
Create form fields for:
</p>
<ul>
<li>customer name - text box</li>
<li>customer address - text area with 2 rows</li>
<li>form identifier - hidden</li>
<li>form version date - hidden</li>
</ul>
</li>
<li><p>
Prior to processing the HTML form, your script should verify that the input in
the $_POST array came from your form by checking that the form identifier hidden
field is set to the value you gave it. If the input is not from your form, display
a message such as "Invalid form input, script aborted!" and exit.
</p></li>
<li><p>
Create local variables in the PHP script to store the data from the form's new fields.
</p></li>
<li><p>
Display the customer name and address along with other order information already
being displayed by the PHP script.
</p></li>
<li><p>
Create the "order_master" and "order_detail" tables in your personal database
schema on the class server using the following CREATE TABLE statements:
</p>
<code>
CREATE TABLE order_master<br>
( id INT(12) NOT NULL AUTO_INCREMENT<br>
, order_date DATETIME<br>
, ship_date DATETIME<br>
, customer_name VARCHAR(40) NOT NULL<br>
, address VARCHAR(100) NOT NULL<br>
, item_total FLOAT(10,2) NOT NULL<br>
, total_amt_due FLOAT(10,2) NOT NULL<br>
, PRIMARY KEY(id)<br>
);<br><br>
CREATE TABLE order_detail<br>
( order_id INT(12) NOT NULL<br>
, item_name VARCHAR(20) NOT NULL<br>
, quantity INT(6) NOT NULL<br>
, price_per_unit FLOAT(10,2) NOT NULL<br>
, PRIMARY KEY(id, item_name)<br>
);<br>
</code>
</li>
<li><p>
If the total number of items ordered is greater than zero, write the customer
order to the "order_master" and "order_detail" tables.
</p></li>
<li><p>
Create an "order_master" record for the order, containing the following information:
</p>
<ul>
<li>
<b><i>id</i></b> - This column will be automatically generated and written to
the database by the auto_increment feature.
</li><li>
<b><i>order_date</i></b> - The date and time the order was written to the database.
</li><li>
<b><i>ship_date</i></b> - NULL (empty)
</li><li>
<b><i>customer name</i></b> - Value entered on the HTML form. Use <b>mysql_real_escape_string()</b>
to escape any characters that might cause a problem for your INSERT statement.
</li><li>
<b><i>customer address</i></b> - Value entered on the HTML form. Use <b>mysql_real_escape_string()</b>
here also.
</li><li>
<b><i>item_total</i></b> - Total dollar amount of items ordered.
</li><li>
<b><i>total_amt_due</i></b> - Total amount of order, including the 5% tax added to the item
total.
</li>
</ul>
</li>
<li><p>
Create an "order_detail" record for each item ordered, containing the following
information:
</p>
<ul>
<li>
<b><i>order_id</i></b> - This column must contain the same value as the corresponding 
order_master record's "id" column. The <b>mysql_insert_id()</b> function will
be useful here.
</li><li>
<b><i>item_name</i></b> - Use the strings "calendar", "pigs card", and "reindeer card"
to specify which item this detail record is for.
</li><li>
<b><i>quantity</i></b> - How many of this item the customer ordered. (Do not write a record
if zero (0) of this item were ordered.)
</li><li>
<b><i>price_per_unit</i></b> - Record the price of this item as displayed on the HTML form.
This could change over time, so it is best to record what it was at time of sale.
</li>
</ul>
</li>
<li><p>
Display a message to the user to indicate their order was successfully saved to
the database.
</p></li>
</ul>
</li>
</ul>
<h4>Exercise 2</h4>
<ul>
<li>
<p>
Now, write a PHP script named <b>p4view.php</b> that reads the customer orders
from your "order_master" and "order_detail" tables and displays the records on
a web page:
</p>
<ul>
<li><p>
Display the company name, "RPCV of Wisconsin", and the text "Pending Orders"
both as a title and as headers in the body of the web page.
</p></li>
<li><p>
I recommend that you first query the "order_master" table, and transfer the
result set into a local array. Then you can loop through order_master records
(in the array) and query the corresponding records from the "order_detail" table.
</p></li>
<li><p>
For each order, display the order_master data on a line. Then display the data
from each order_detail record for that order on an indented line beneath it.
</p><p>
Loop through the order_master records, displaying each one followed by its
corresponding detail records.
</p></li>
<li><p>
Be sure to use <b>stripslashes()</b> to strip off any backslashes added when the
records were read from the database if the <b>magic_qutoes_gpc</b> directive is
turned on.
</p></li>
<li><p>
Close the MySQL database explicitly, before ending your script.
</p></li>
</ul>
</li>
</ul>
</blockquote>

<h3><a id="submit" name="submit">5.
Submitting the project</a></h3>
<blockquote>
<p>
<a id="submit" name="submit">
All of your PHP scripts and HTML files for this project should be in one directory.
Using a compression program like WinZip, zip this directory and its contents into
a single file named <strong>project4.zip</strong>&nbsp;.
If you are using Linux or Macintosh OSX then you should tar and
gzip your directory into a file named <strong>project4.tar.gz</strong>&nbsp;.
Submit the <strong>project4.tar.gz</strong> or <strong>project4.zip</strong>
file to your instructor via Blackboard, using the
<b><i>Blackboard Assignment Submission Procedures</i></b>&nbsp;.
In <strong>addition</strong> to this your instructor might grade your projects
with you in the lab.
</a></p>
</blockquote>
<hr width="90%" />
</body>
</html>
