h2. Array Manipulation with Built-In Functions



h3.  Using Loops to Access Array Elements

* Loops make it easy to step through an array. The for and while loops are useful for numeric arrays where you can determine the size, and starting point of the array is usually 0, incremented by 1 for each element.
* The best way to loop through an associative array is with the foreach loop, although you can use this loop for numerically indexed arrays as well.

h3. The for Loop

* The for loop can be used to iterate through a numeric array. The initial value of the for loop will be the first index value of the array, which will be incremented each time through the loop until the end of the array is reached.
* Here is an example that demonstrates how the for loop is used to view each element of an array.
* Filename: *for.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The for Loop<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">bordercolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">black</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;caption</span><span class="syntax17">&gt;</span>Elements<span class="syntax17">&lt;/caption</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">=</span><span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">red</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">white</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">blue</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">black</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">for</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">&lt;</span> <span class="syntax9">count</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">++</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  11:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax14">[</span><span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax14">]</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax18">}</span>
<span class="gutter">  13:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  14:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutterH">  15:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  16:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The first argument to the for loop, $i = 0, sets the initial value of $i to 0, which represents the first index in the array.
* If the index value, $i, is less than the size of the array (returned from the *@count()@* function), the loop body is entered.
* After displaying the color, the third argument of the for loop is executed; that is, increment the value of $i by 1.

h3. The while Loop

* The while loop can be used to iterate through a numeric array as shown below.
* By setting the initial value to 0, the loop will iterate from the first element of the array (assuming that the array starts at element zero) until it reaches the end of the array.
* The *@count()@* or *@sizeof()@* functions can be used to find the length of the array.
* Filename: *while.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The while Loop<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>The while Loop<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax13">'</span><span class="syntax13">1</span><span class="syntax13">'</span><span class="syntax17"> </span><span class="syntax17">bordercolor</span><span class="syntax18">=</span><span class="syntax13">'</span><span class="syntax13">black</span><span class="syntax13">'</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax13">'</span><span class="syntax13">yellow</span><span class="syntax13">'</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;caption</span><span class="syntax17">&gt;</span>Elements<span class="syntax17">&lt;/caption</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">=</span><span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">red</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">white</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">aqua</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">yellow</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">&lt;</span> <span class="syntax9">count</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  13:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">tr</span><span class="syntax14"> </span><span class="syntax14">bgcolor</span><span class="syntax14">=</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax14">[</span><span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax14">]</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax14">[</span><span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax14">]</span>
<span class="gutter">  14:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>      <span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">++</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax18">}</span>
<span class="gutter">  17:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  18:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  20:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* Variable, $i, set to 0, will be the initial value in the loop, and will used as the array's index.
* The *@count()@* function returns the number of elements in the array. The while expression tests that the value of $i is less than the size of the array.
* In this example, the value of the element, a color, will be used as the background color for the current row, and as the text printed within the table's data cell.
* The value of $i is incremented by 1 on line 15. If you forget to increment $i, the loop will go forever because $i will always be less than the size of the array.
* Filename: *while2.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Table Colors<span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax17">1</span><span class="syntax17"> </span><span class="syntax17">bordercolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">white</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">align</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">center</span><span class="syntax14">&quot;</span>
<span class="gutter">   7:</span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17"> </span><span class="syntax17">cellpadding</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">2</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>   <span class="syntax17">&lt;caption</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">2</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">color</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>Colored Rows<span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>   <span class="syntax17">&lt;/caption</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span>   <span class="syntax17">&lt;?php</span>
<span class="gutter">  11:</span>     <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">=</span><span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">orange</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax18">,</span> <span class="syntax14">&quot;</span><span class="syntax14">lightblue</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>     <span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>     <span class="syntax8">while</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">&lt;</span> <span class="syntax5">8</span><span class="syntax18">)</span><span class="syntax18">{</span>
<span class="gutter">  14:</span>       <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Each</span><span class="syntax2"> </span><span class="syntax2">time</span><span class="syntax2"> </span><span class="syntax2">through</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">loop</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">index</span><span class="syntax2"> </span><span class="syntax2">value</span><span class="syntax2"> </span><span class="syntax2">in</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">array</span>
<span class="gutterH">  15:</span>       <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">will</span><span class="syntax2"> </span><span class="syntax2">be</span><span class="syntax2"> </span><span class="syntax2">changed,</span><span class="syntax2"> </span><span class="syntax2">with</span><span class="syntax2"> </span><span class="syntax2">values</span><span class="syntax2"> </span><span class="syntax2">0,</span><span class="syntax2"> </span><span class="syntax2">1,</span><span class="syntax2"> </span><span class="syntax2">2,</span><span class="syntax2"> </span><span class="syntax2">3,</span><span class="syntax2"> </span><span class="syntax2">0,</span><span class="syntax2"> </span><span class="syntax2">1,</span><span class="syntax2"> </span><span class="syntax2">2,</span><span class="syntax2"> </span><span class="syntax2">3.</span>
<span class="gutter">  16:</span>       <span class="syntax10">$</span><span class="syntax10">color</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">[</span><span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">%</span> <span class="syntax5">4</span><span class="syntax18">]</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>   <span class="syntax17">?&gt;</span>
<span class="gutter">  18:</span>   <span class="syntax17">&lt;tr</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span>    <span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span>
<span class="gutterH">  20:</span>    <span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span>
<span class="gutter">  21:</span>    <span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span>
<span class="gutter">  22:</span>    <span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span>
<span class="gutter">  23:</span>    <span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span>
<span class="gutter">  24:</span>   <span class="syntax17">&lt;/tr</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span>   <span class="syntax17">&lt;?php</span>
<span class="gutter">  26:</span>       <span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">++</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Increment</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">value</span><span class="syntax2"> </span><span class="syntax2">of</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">loop</span><span class="syntax2"> </span><span class="syntax2">counter</span>
<span class="gutter">  27:</span>     <span class="syntax18">}</span>
<span class="gutter">  28:</span>   <span class="syntax17">?&gt;</span>
<span class="gutter">  29:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutterH">  30:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  31:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The while loop evaluates the expression in parentheses. Is the value of $i less than 8? If it is, the loop body is entered.
* The index value of the $colors array is divided by 4 and the remainder (modulus) is used as the index value.
* The first time through the loop the index is 0. The value $color[0] is "orange" and will be filled in the table for a row of 5 table cells.
* Next time through the loop, $color[1] is "lightgreen" and that color will fill a row of table cells. And so forth . . .

h3. The foreach Loop

* The foreach statement is designed to work with both numeric and associative arrays (works only on arrays).
* The loop expression consists of the array name, followed by the as keyword, and a user-defined variable that will hold each successive value of the array as the loop iterates.
* The expression in the foreach statement can include both the key and value as shown in the examples below.
* The foreach loop operates on a copy of the original array. If you change the value of an element of the array, it will only change the temporary copy, not the value in the original array.
* Format:
<br /><pre>
// for simple numeric-indexed arrays use:
foreach ($array_name as $value) {
 do-something with the element's value;
}
// for associative arrays use:
foreach ($array_name as $key => $value) {
 do-something $key and/or $value;
}
</pre>
* Examples:
<br /><pre>
$suit=("diamond","spade","club","heart");
foreach ( $suit as $card_type) {
 echo $card_type ."<br />";
}

$courses=("101A"=>"Intro to CS",
         "200B"=>"Data Structures",
         "130A"=>"Visual Basic"
);
foreach ( $courses as $number => $class_name) {
 echo $number . '=>' . $class_name . "<br />";
}
</pre>
* Filename: foreach.php
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The foreach Loop<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>The foreach Loop<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">=</span><span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">red</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">green</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">blue</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">yellow</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">employee</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Name</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">Jon</span><span class="syntax13"> </span><span class="syntax13">Doe</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                      <span class="syntax13">'</span><span class="syntax13">ID</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">23d4</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                      <span class="syntax13">'</span><span class="syntax13">Job</span><span class="syntax13"> </span><span class="syntax13">Title</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">Designer</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                      <span class="syntax13">'</span><span class="syntax13">Department</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax13">'</span><span class="syntax13">Web</span><span class="syntax13"> </span><span class="syntax13">Development</span><span class="syntax13">'</span>
<span class="gutter">  14:</span>                     <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">simple</span><span class="syntax2"> </span><span class="syntax2">array</span>
<span class="gutter">  16:</span>    <span class="syntax8">foreach</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">value</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  17:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">value</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>    <span class="syntax18">}</span>
<span class="gutter">  19:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">hr</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Associative</span><span class="syntax2"> </span><span class="syntax2">array</span>
<span class="gutter">  21:</span>    <span class="syntax8">foreach</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">employee</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">key</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax10">$</span><span class="syntax10">value</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  22:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">employee</span><span class="syntax14">[</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax14">]</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">value</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>       <span class="syntax18">}</span>
<span class="gutter">  24:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  25:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  27:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* A numeric array and an associative array are defined.
* The first foreach loop iterates through each element of the $colors array. The expression "$colors as $value", means: In the $colors array assign the value of each element to the variable $value, one at a time, until the array ends. Each value will be displayed in turn.
* The second foreach loop iterates through each key--value pair of an associative array. The array name is followed by the "as" keyword and a variable to represent the key, called $key, followed by the "=>" operator, and a variable to represent the value, called $value.

h3. Modifying a Value by Reference with a foreach Loop

* As of PHP 5, you can easily modify an array's elements by preceding the value after the "as" keyword with &. This will assign by reference instead of copying the value.
* Then whatever you do to the array while in the loop will change the original array, not a copy of it.
* Filename: *foreach2.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The foreach Loop<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightblue</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Changing Values by Reference<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;p</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>Original array<span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/p</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">val</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">hello</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">Before</span><span class="syntax14"> </span><span class="syntax14">foreach</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">\$val</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax10">$</span><span class="syntax10">years</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax5">44</span><span class="syntax18">,</span> <span class="syntax5">53</span><span class="syntax18">,</span> <span class="syntax5">64</span><span class="syntax18">,</span> <span class="syntax5">77</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">years</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">$val</span><span class="syntax2"> </span><span class="syntax2">is</span><span class="syntax2"> </span><span class="syntax2">a</span><span class="syntax2"> </span><span class="syntax2">reference</span><span class="syntax2"> </span><span class="syntax2">to</span><span class="syntax2"> </span><span class="syntax2">array</span><span class="syntax2"> </span><span class="syntax2">values</span>
<span class="gutterH">  15:</span>    <span class="syntax8">foreach</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">years</span> <span class="syntax8">as</span> <span class="syntax18">&amp;</span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  16:</span>      <span class="syntax10">$</span><span class="syntax10">val</span> <span class="syntax18">+</span><span class="syntax18">=</span> <span class="syntax5">1900</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">$val</span><span class="syntax2"> </span><span class="syntax2">is</span><span class="syntax2"> </span><span class="syntax2">global</span><span class="syntax2"> </span><span class="syntax2">in</span><span class="syntax2"> </span><span class="syntax2">scope</span>
<span class="gutter">  18:</span>    <span class="syntax18">}</span>
<span class="gutter">  19:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">After</span><span class="syntax14"> </span><span class="syntax14">foreach</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">\$val</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  21:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  22:</span>  <span class="syntax17">&lt;hr</span><span class="syntax17">&gt;</span>
<span class="gutter">  23:</span>  <span class="syntax17">&lt;p</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>Array has been changed<span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/p</span><span class="syntax17">&gt;</span>
<span class="gutter">  24:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">  26:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">years</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  27:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  28:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  29:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  30:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* A variable, $val, is assigned the string,"hello", and displayed. $years is created as an array, and printed with the *@print_r()@* function.
* In the foreach expression the variable $val is used as a reference to each element of the $years array. The & preceding the variable name makes it a reference. Any changes made to the value that $val references will change the original array.
* Because $val is a global variable (i.e., visible throughout the program), its original value is changed in the foreach loop, and the last value assigned to it remains after the loop exits.
* The *@print_r()@* function prints the modified $years array.

h3. Checking If an Array Exists

* PHP makes it possible to check to see if an array exists, and to check for the existence of keys, values, or both.
* Table: Functions to Check for Existence of an Array

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Function*|{background:#ccc}.*What_It_Does*|
|*@array_key_exists()@*  |Checks if the given key or index exists in the array     |
|*@in_array()@*          |Checks if a value exists in an array                     |
|*@is_array()@*          |Checks if the variable is an array; returns TRUE or FALSE|

* This example demonstrates how to perform array checks using the functions in the table above.
* Filename: *exists.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Checking for Existence of an Array or Element
<span class="gutter">   4:</span>  <span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightblue</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Does it Exist?<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">country</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">USA</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>   <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">$country</span><span class="syntax2"> </span><span class="syntax2">is</span><span class="syntax2"> </span><span class="syntax2">a</span><span class="syntax2"> </span><span class="syntax2">scalar</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">states</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">CA</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax13">'</span><span class="syntax13">California</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                    <span class="syntax13">'</span><span class="syntax13">MT</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax13">'</span><span class="syntax13">Montana</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                    <span class="syntax13">'</span><span class="syntax13">VA</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax13">'</span><span class="syntax13">Virginia</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax9">is_array</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">country</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  14:</span>      <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">$country</span><span class="syntax13"> </span><span class="syntax13">is</span><span class="syntax13"> </span><span class="syntax13">an</span><span class="syntax13"> </span><span class="syntax13">array.&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax18">}</span>
<span class="gutter">  16:</span>    <span class="syntax8">else</span> <span class="syntax18">{</span>
<span class="gutter">  17:</span>      <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">$country</span><span class="syntax13"> </span><span class="syntax13">is</span><span class="syntax13"> </span><span class="syntax13">not</span><span class="syntax13"> </span><span class="syntax13">an</span><span class="syntax13"> </span><span class="syntax13">array.&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>    <span class="syntax18">}</span>
<span class="gutter">  19:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax9">array_key_exists</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">VA</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>      <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">Array</span><span class="syntax13"> </span><span class="syntax13">key</span><span class="syntax13"> </span><span class="syntax13">&quot;VA&quot;</span><span class="syntax13"> </span><span class="syntax13">exists.&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>    <span class="syntax18">}</span>
<span class="gutter">  22:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax9">in_array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Montana</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  23:</span>      <span class="syntax8">print</span> <span class="syntax13">'</span><span class="syntax13">Array</span><span class="syntax13"> </span><span class="syntax13">value</span><span class="syntax13"> </span><span class="syntax13">&quot;Montana&quot;</span><span class="syntax13"> </span><span class="syntax13">exists.&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  24:</span>    <span class="syntax18">}</span>
<span class="gutterH">  25:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  26:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  27:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>

h3. Creating Strings from Arrays and Arrays from Strings

* In the previous unit, we discussed strings and their many functions. Now that we have learned about arrays, PHP provides functions that serve the dual purpose of creating arrays from strings and strings from arrays.
* Table: Arrays and Strings

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Function*|{background:#ccc}.*What_It_Does*|
|*@explode()@*  |Splits up a string by a specified delimiter and creates an array of strings|
|*@implode()@*  |Creates a string by gluing together array elements by a specific separator |
|*@join()@*     |Alias for implode()                                                        |
|*@split()@*    |Splits up a string into an array by a regular expression                   |

h3. The @implode()@ Function

* The *@implode()@* function creates a string by joining together the elements of an array with a string delimiter, called the glue string.
* As of PHP 4.3.0, the glue parameter of *@implode()@* is optional and defaults to the empty string(""). Another name for *@implode()@* is its alias, *@join()@*.
* The *@implode()@* function returns a string containing a string representation of all the array elements in the same order, with the glue string between each element.
* Format:
<br /><pre>
string implode ( string glue, array elements )
</pre>
* Example:
<br /><pre>
$stats_array = array('name', 'ssn', 'phone');
// implode() creates a string from an array
$stats_string = implode(",", $array);
</pre>

h3. The @explode()@ Function

* The *@explode()@* function splits up a string and creates an array, the opposite of *@implode()@*.
* The new array is created by splitting up the original string into substrings based on the delimiter given. The delimiter is what you determine is the word separator, such as a space or comma. If given a limit, the new array will be limited to that many substrings, and the last one will contain the rest of the string.
* The following examples demonstrate how the explode function works.
* Format:
<br /><pre>
array explode(string separator, string string [, int limit])
</pre>
* Example:
<br /><pre>
$fruit = explode(" ","apples pears peaches plums")
// Creates a 4-element array

$fruit = explode("|","apples|pears|peaches|plums",3)
echo $fruit[0], $fruit[1], $fruit[2];
// Creates a 3-element array
</pre>
* Filename: *explode.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>explode() Array<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">black</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">color</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">white</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14"> </span><span class="syntax14">green</span><span class="syntax14"> </span><span class="syntax14">orange</span><span class="syntax14"> </span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">\$colors</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14"> </span><span class="syntax14">a</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax9">gettype</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">\n\n</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Split</span><span class="syntax2"> </span><span class="syntax2">up</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">string</span><span class="syntax2"> </span><span class="syntax2">by</span><span class="syntax2"> </span><span class="syntax2">spaces</span>
<span class="gutter">  12:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax9">explode</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">img</span><span class="syntax14"> </span><span class="syntax14">src</span><span class="syntax14">=</span><span class="syntax14">'</span><span class="syntax14">explosion</span><span class="syntax14">.</span><span class="syntax14">jpg</span><span class="syntax14">'</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">\n</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">After</span><span class="syntax14"> </span><span class="syntax14">explode</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">\$colors</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14"> </span><span class="syntax14">an</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span>
<span class="gutterH">  15:</span>         <span class="syntax9">gettype</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">\n\n</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Let's</span><span class="syntax2"> </span><span class="syntax2">give</span><span class="syntax2"> </span><span class="syntax2">explode()</span><span class="syntax2"> </span><span class="syntax2">second</span><span class="syntax2"> </span><span class="syntax2">parameter</span><span class="syntax2"> </span><span class="syntax2">limiting</span>
<span class="gutter">  18:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">array</span><span class="syntax2"> </span><span class="syntax2">size</span><span class="syntax2"> </span><span class="syntax2">to</span><span class="syntax2"> </span><span class="syntax2">3</span><span class="syntax2"> </span><span class="syntax2">elements</span>
<span class="gutter">  19:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax9">explode</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14"> </span><span class="syntax14">green</span><span class="syntax14"> </span><span class="syntax14">orange</span><span class="syntax14"> </span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">,</span> <span class="syntax5">3</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">\n</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  22:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  23:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  24:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@gettype()@* function returns the data type of the $colors variable, a string.
* After *@explode()@* the the *@gettype()@* function returns the data type of $colors, an array.
* On line 19, the *@explode()@* function is given an optional second parameter, which will limit the new array created to a length of three elements.
* The new array consists of three elements, the last element contains "orange blue", the remainder of the string after it was divided into three array elements.

h3. Finding the Size of an Array

* PHP provides built-in functions to count the number of elements in an array. They are *@count()@* , *@sizeof()@* , and *@array_count_values()@*.
* The examples below demonstrate how to find the size of a multidimensional array.
* Table: Functions to Find the Size of an Array

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Function*|{background:#ccc}.*What_It_Does*|
|*@array_count_values()@*  |Returns an array consisting of the values of an array and the number of times each value occurs in an array|
|*@count()@*               |Returns the number of elements in an array or properties of an object                                      |
|*@sizeof()@*              |Returns the size of the array, same as *@count()@*                                                             |


h3. The @count()@ and @sizeof()@ Functions

* The *@count()@* and *@sizeof()@* functions do the same thing. The *@sizeof()@* function is simply an alias for the *@count()@* function. They both return the number of elements in an array (or properties in an object).
* To find the number of elements in a multidimensional array, the *@count()@* function has an optional mode argument that recursively counts the elements.
* Format:
<br /><pre>
$number_of_elments = count(array_name);
$number_of_elements = count(array_name, 1);
$number_of_elements = count(array_name, COUNT_RECURSIVE)
</pre>
* Example:
<br /><pre>
$bytes=range('a','z');
$size = count($bytes); // 26 elements
$size = sizeof($bytes); // 26 elements
</pre>
* Filename: *count.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The count() function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>The count() function<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">red</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">green</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">blue</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">[</span><span class="syntax18">]</span> <span class="syntax18">=</span> <span class="syntax13">'</span><span class="syntax13">yellow</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">size</span> <span class="syntax18">=</span> <span class="syntax9">count</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">size</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">array</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">size</span><span class="syntax14">.</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">hr</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  14:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  15:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>

h3. The @array_count_values()@ Function

* The *@array_count_values()@* function counts how many times a unique value is found in an array.
* It returns an associative array with the keys representing the unique elements of the array, and the values containing the number of times that each unique element occurred in the array.
* Format:
<br /><pre>
array array_count_values ( array input )
</pre>
* Example:
<br /><pre>
$hash_count = array_count_values( array("a","b","a","a"));
// Creates an associative array with "a" and "b" as the two keys and
// the number of times each occurs in the array (the associated value)
</pre>
* Filename: *unique.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Array of Colors<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">green</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">   9:</span>                    <span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">unique_count</span> <span class="syntax18">=</span> <span class="syntax9">array_count_values</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">unique_count</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  13:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  14:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  15:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The built-in *@array_count_values()@* function creates an associative array with the key being a unique value from the original array and the value of the number of times that element occurs in the array.
* In the example, the color "red" appears three times, the color "blue" twice, and the colors "green" and "yellow" once. The associative array, $unique_count, will contain keys representing the color element ("red", "blue", "green", "yellow") and the value associated with each color will be the number of times the color occurred in the array.

h3. Extracting Keys and Values from Arrays

* PHP provides functions that allow you to extract elements from an array and assign the keys and values to variables. The *@array_keys()@* function returns all the keys in an array, the *@array_values()@* function returns all the values of the elements in an array, and the *@each()@* function can be used to extract both keys and values.

h3. The @array_keys()@ Function

* The *@array_keys()@* function returns all the keys of an array. If the optional search_value argument is specified, you can get the keys for that particular value.
* Format:
<br /><pre>
array array_keys ( array input [, mixed search_value [, bool strict]] )
</pre>
* Example:
<br /><pre>
$array_of_keys = array_keys("apples","pears","peaches","plums");
// Returns 0,1,2,3

$array_of_keys = array_keys("Title"=>"King","Name"=>"Barbar");
// Returns "Title", "Name"
</pre>
* Filename: *arraykeys.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The array_keys() Function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">silver</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>The array_keys() Function<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">green</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">original</span><span class="syntax14"> </span><span class="syntax14">array</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax10">$</span><span class="syntax10">keys</span> <span class="syntax18">=</span> <span class="syntax9">array_keys</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">keys</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">keys</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">Key</span><span class="syntax14"> </span><span class="syntax14">for</span><span class="syntax14"> </span><span class="syntax14">\&quot;blue\&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax10">$</span><span class="syntax10">keys</span> <span class="syntax18">=</span> <span class="syntax9">array_keys</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">keys</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  19:</span>  <span class="syntax17">&lt;hr</span><span class="syntax17">&gt;</span>
<span class="gutterH">  20:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">  21:</span>    <span class="syntax10">$</span><span class="syntax10">poem</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">Title</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">Raven</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">Author</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Edgar</span><span class="syntax14"> </span><span class="syntax14">Allen</span><span class="syntax14"> </span><span class="syntax14">Poe</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  22:</span>    <span class="syntax10">$</span><span class="syntax10">keys</span> <span class="syntax18">=</span> <span class="syntax9">array_keys</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">poem</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">original</span><span class="syntax14"> </span><span class="syntax14">array</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  24:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">poem</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  25:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">keys</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  26:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">keys</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  27:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  28:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span>
<span class="gutter">  29:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  30:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@array_keys()@* function returns an array of keys; in the first array the keys are numeric index values starting at 0.
* The second call to the *@array_keys()@* function returns an array of keys only for the value "blue" in the array $colors. The third call to *@array_keys()@* returns the keys in the associative array $poems.

h3. The @array_values()@ Function

* The *@array_values()@* function returns an array with all the values of the original array. The new array is indexed by numbers.
* Format:
<br /><pre>
array array_values ( array input )
</pre>
* Example:
<br /><pre>
$animals=array("tiger", "lion", "camel","elephant");

$array_of_values=array_values($animals);
// Returns:"tiger","lion","camel","elephant"
</pre>
* Filename: *arrayvalues.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The array_values() Function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">silver</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>The array_values() Function<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">=</span><span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">green</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">original</span><span class="syntax14"> </span><span class="syntax14">array</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax10">$</span><span class="syntax10">values</span> <span class="syntax18">=</span> <span class="syntax9">array_values</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">values</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">values</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  16:</span>  <span class="syntax17">&lt;hr</span><span class="syntax17">&gt;</span>
<span class="gutter">  17:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">  18:</span>    <span class="syntax10">$</span><span class="syntax10">poem</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">Title</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">Raven</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">Author</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Edgar</span><span class="syntax14"> </span><span class="syntax14">Allen</span><span class="syntax14"> </span><span class="syntax14">Poe</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>    <span class="syntax10">$</span><span class="syntax10">values</span> <span class="syntax18">=</span> <span class="syntax9">array_values</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">poem</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">original</span><span class="syntax14"> </span><span class="syntax14">array</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">poem</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  22:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">values</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">values</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  24:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  25:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  27:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@array_values()@* function returns an array of the values in an array, numerically indexed.

h3. The @each()@ Function

* The *@each()@* function returns the current key--value pair in an array, and moves to the next element, making that the current element.
* The returned value is an array of two alternating values to represent each key and its corresponding value. To access the array elements, you can use either 0 and 1 to represent each key and value, or the keywords "key" and "value" to do the same thing.
* Used with a looping construct, each element of the array can be accessed until the array has reached its end. The *@reset()@* function sets the internal array pointer back to the beginning of the array if you want to access the array elements again.
* Format:
<br /><pre>
array each ( array &array )
</pre>
* Example:
<br /><pre>
$keyval_array = each($employee);
</pre>
* Filename: *each.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The each() Function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCFFCC</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>The each() Function<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">red</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">green</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">blue</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">yellow</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">u</span><span class="syntax14">&gt;</span><span class="syntax14">Numeric</span><span class="syntax14"> </span><span class="syntax14">Array</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">u</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">array</span> <span class="syntax18">=</span> <span class="syntax9">each</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  12:</span>      <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">echo</span><span class="syntax2"> </span><span class="syntax2">$array[0]</span><span class="syntax2"> </span><span class="syntax2">.&quot;</span><span class="syntax2"> </span><span class="syntax2">=&gt;</span><span class="syntax2"> </span><span class="syntax2">&quot;.</span><span class="syntax2"> </span><span class="syntax2">$array[1]</span><span class="syntax2"> </span><span class="syntax2">.&quot;&lt;br</span><span class="syntax2"> </span><span class="syntax2">/&gt;&quot;;</span>
<span class="gutter">  13:</span>      <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">array</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">key</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">array</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">value</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax18">}</span>
<span class="gutterH">  15:</span>    <span class="syntax10">$</span><span class="syntax10">book</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Title</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">War</span><span class="syntax13"> </span><span class="syntax13">and</span><span class="syntax13"> </span><span class="syntax13">Peace</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                  <span class="syntax13">'</span><span class="syntax13">Author</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">Tolstoy</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>                  <span class="syntax13">'</span><span class="syntax13">Publisher</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax14">&quot;</span><span class="syntax14">Oxford</span><span class="syntax14"> </span><span class="syntax14">University</span><span class="syntax14"> </span><span class="syntax14">Press</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  18:</span>                 <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">p</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">u</span><span class="syntax14">&gt;</span><span class="syntax14">Associative</span><span class="syntax14"> </span><span class="syntax14">Array</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">u</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">novel</span> <span class="syntax18">=</span> <span class="syntax9">each</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">book</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  21:</span>      <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">novel</span><span class="syntax18">[</span><span class="syntax5">0</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">novel</span><span class="syntax18">[</span><span class="syntax5">1</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  22:</span>      <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">echo</span><span class="syntax2"> </span><span class="syntax2">$novel['key']</span><span class="syntax2"> </span><span class="syntax2">.&quot;</span><span class="syntax2"> </span><span class="syntax2">=&gt;</span><span class="syntax2"> </span><span class="syntax2">&quot;.</span><span class="syntax2"> </span><span class="syntax2">$novel['value']</span><span class="syntax2"> </span><span class="syntax2">.&quot;&lt;br</span><span class="syntax2"> </span><span class="syntax2">/&gt;&quot;;</span>
<span class="gutter">  23:</span>    <span class="syntax18">}</span>
<span class="gutter">  24:</span>    <span class="syntax9">reset</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">book</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  25:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  26:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  27:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  28:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The while loop evaluates the expression in parentheses. The *@each()@* function returns two values: the array element's first numeric key and its value. These two values are assigned to $array. The internal array pointer will then move to the next element in the array.
* The *@each()@* function allows you to index the array it returns either by using a number, 0 or 1, or by using the reserved strings "key" and "value".
* The *@reset()@* function sets the internal array pointer back to the beginning of the array.

h3. Creating Variables from Array Elements

* The *@list()@* and *@extract()@* functions create variables from numeric and associative arrays, respectively.

h3. The @list()@ Function and Numeric Arrays

* The *@list()@* function extracts elements from a numeric array (with index starting at 0) and assigns them to individual variables. Technically, although *@list()@* acts like a function, it is a language construct with no return value.
* The *@list()@* function is on the left side of the assignment operator. Its arguments are a comma-separated list of variable names.
* The variables created by *@list()@* correspond to the array elements on the right side of the assignment operator. If there are less variables than array elements, the extra elements are ignored.
* The *@list()@* and *@each()@* functions work nicely together when iterating through an associative array.
* Format:
<br /><pre>
void list ( mixed varname, mixed ... )
</pre>
* Example:
<br /><pre>
$swatch = array('blue','#33A1C9','peacock');
// Create variables from array
list($color, $code, $name) = $swatch;
// Ignore 'peacock'
list($color, $code) = $swatch;
// Skip '#33A1C9'
list($color,, $name) = $swatch;
</pre>
* Filename: *list.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The each and list Functions<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCFFCC</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>   <span class="syntax17">&lt;?php</span>
<span class="gutter">   7:</span>     <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">h4</span><span class="syntax14">&gt;</span><span class="syntax14">Using</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">list</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14"> </span><span class="syntax14">and</span><span class="syntax14"> </span><span class="syntax14">each</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14"> </span><span class="syntax14">Functions</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">h4</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>     <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">hr</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">p</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>     <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">red</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">green</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>     <span class="syntax8">list</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">a</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">b</span><span class="syntax18">)</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Create</span><span class="syntax2"> </span><span class="syntax2">two</span><span class="syntax2"> </span><span class="syntax2">variables,</span><span class="syntax2"> </span><span class="syntax2">$a</span><span class="syntax2"> </span><span class="syntax2">and</span><span class="syntax2"> </span><span class="syntax2">$b</span>
<span class="gutter">  11:</span>     <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">list</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14"> </span><span class="syntax14">function</span><span class="syntax14"> </span><span class="syntax14">assigns</span><span class="syntax14"> </span><span class="syntax14">array</span><span class="syntax14"> </span><span class="syntax14">elements</span><span class="syntax14"> </span><span class="syntax14">to</span><span class="syntax14"> </span><span class="syntax14">variables</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>     <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">list($a,</span><span class="syntax13"> </span><span class="syntax13">$b)</span><span class="syntax13"> </span><span class="syntax13">=</span><span class="syntax13"> </span><span class="syntax13">$colors&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>     <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">\$a</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">=</span><span class="syntax14"> </span><span class="syntax14">'</span><span class="syntax10">$</span><span class="syntax10">a</span><span class="syntax14">'</span><span class="syntax14"> </span><span class="syntax14">and</span><span class="syntax14"> </span><span class="syntax14">\$b</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">=</span><span class="syntax14"> </span><span class="syntax14">'</span><span class="syntax10">$</span><span class="syntax10">b</span><span class="syntax14">'</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>     <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;/p&gt;&lt;p&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>     <span class="syntax10">$</span><span class="syntax10">book</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Title</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">War</span><span class="syntax13"> </span><span class="syntax13">and</span><span class="syntax13"> </span><span class="syntax13">Peace</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                   <span class="syntax13">'</span><span class="syntax13">Author</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax13">'</span><span class="syntax13">Tolstoy</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>                   <span class="syntax13">'</span><span class="syntax13">Publisher</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax14">&quot;</span><span class="syntax14">Oxford</span><span class="syntax14"> </span><span class="syntax14">University</span><span class="syntax14"> </span><span class="syntax14">Press</span><span class="syntax14">&quot;</span>
<span class="gutter">  18:</span>                  <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>     <span class="syntax8">while</span><span class="syntax18">(</span> <span class="syntax8">list</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax18">)</span> <span class="syntax18">=</span> <span class="syntax9">each</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">book</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>       <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>     <span class="syntax18">}</span>
<span class="gutter">  22:</span>     <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;/p&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>     <span class="syntax9">reset</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">book</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  24:</span>   <span class="syntax17">?&gt;</span>
<span class="gutterH">  25:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@list()@* function will create two variables from the first two array elements. "red" will be assigned to $a, and "green" will be assigned to $b.
* The *@each()@* function returns the first key and value in the $book array. Those values are assigned to $key and $val, two variables created by the *@list()@* function.
* Because the *@each()@* function only returns the first key--value pair, the while loop is used to iteratate through the rest of the associative array.
* After the loop exits, $key and $val are empty. To reset the array's internal pointer to the beginning of the array, use the *@reset()@* function.

h3. The @extract()@ Function and Associative Arrays

* We used the *@extract()@* function in previous chapters to extract variables from the $_REQUEST array.
* You might remember that the $_REQUEST array contains name--value pairs. The name represents the name of the HTML form input field and its value, whatever the user typed as a value.
* The PHP statement extract($_REQUEST) creates variables named after the keys of this array, with the values representing what the user typed into each of the corresponding form fields.
* The *@extract()@* function creates variables from any associative array, not just the $_REQUEST array. The variables are named after the keys, and the values assigned to them are the same as the correspnding values in the associative array. For example, if the array has a key--value pair consisting of "first_name" => "John" , the *@extract()@* function would create a variable called $first_name and assign it the value "John".
* If a local variable has the same name as one of the keys in the associative array, a collision can occur, the default being to overwrite the existing variable, and if a value in the associative array is not a valid variable name, the *@extract()@* function will not import it.
* The behavior of this function can be changed based on the extract_type and prefix parameters, shown in the table below. As of PHP 4.0.5, *@extract()@* returns the number of variables extracted.
* Table: Extract Arguments

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Extract_Type*|{background:#ccc}.*What_It_Does*|
|@EXTR_IF_EXISTS@         |Only overwrite the variable if it already exists; otherwise do nothing                    |
|@EXTR_OVERWRITE@         |If there is a collision, overwrite the existing variable                                  |
|@EXTR_PREFIX_ALL@        |Prefix all variable names with a prefix                                                   |
|@EXTR_PREFIX_IF_EXISTS@  |Only create prefixed variable names if the nonprefixed version of the same variable exists|
|@EXTR_PREFIX_INVALID@    |Only prefix invalid or numeric variable names with a prefix                               |
|@EXTR_PREFIX_SAME@       |If there is a collision, prefix the variable name with a prefix                           |
|@EXTR_REFS@              |Extract variables as references                                                           |
|@EXTR_SKIP@              |If there is a collision, do not overwrite the existing variable                           |

* It is not wise to use this function when extracting values from superglobal arrays such as $_GET, $_POST, $_REQUEST, and so on (arrays that contain user input) unless you use one of the flags that prevents overwriting existing variables.
* Format:
<br /><pre>
int extract ( array var_array [, int extract_type [, string prefix]] )
</pre>
* Example:
<br /><pre>
$dimensions = array("height" => "65 in",
                   "weight" => "50 lb.",
                   "width" => "65" in"
                  );
extract($dimensions);
extract($dimensions, EXTR_PREFIX_SAME,"my");
</pre>
* This example demonstrates how to use the *@extract()@* function to create variables.
* Filename: *extract.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Extracting Values<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span>  <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCCFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">style=&quot;</span>arial<span class="syntax17">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">model</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">Pan</span><span class="syntax14"> </span><span class="syntax14">TH</span><span class="syntax14">-</span><span class="syntax14">33XYZXYTV</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Original</span><span class="syntax14"> </span><span class="syntax14">model</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">television</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">model</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Pan</span><span class="syntax14"> </span><span class="syntax14">PX</span><span class="syntax14">-</span><span class="syntax14">44BBCCSTV</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">type</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">plasma</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">color</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">charcoal</span><span class="syntax14"> </span><span class="syntax14">bezel</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">size</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">42</span><span class="syntax14"> </span><span class="syntax14">in</span><span class="syntax14">.</span><span class="syntax14"> </span><span class="syntax14">widescreen</span><span class="syntax14">&quot;</span>
<span class="gutter">  14:</span>                       <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax9">extract</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">television</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Create</span><span class="syntax2"> </span><span class="syntax2">variables</span><span class="syntax2"> </span><span class="syntax2">from</span><span class="syntax2"> </span><span class="syntax2">keys</span>
<span class="gutter">  16:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">Model</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14"> </span><span class="syntax14">after</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">extract</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">p</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Values</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">variables</span><span class="syntax14"> </span><span class="syntax14">created</span><span class="syntax14"> </span><span class="syntax14">by</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">extract</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">type</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">size</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  20:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span>
<span class="gutter">  21:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  22:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* First a variable, named $model, is defined and assigned the value "Pan TH-33XYZXYTV".
* Then an array, named $television, is defined. Note that one of the keys is named "model". It is assigned a different model number than the variable $model.
* The *@extract()@* function takes the array $television as its argument and returns a list of variables, named after the keys in the array. Each variable is assigned the value associated with the corresponding key of the associative array.
* The original variable $model is overwritten by the new variable of the same name created by *@extract()@*.
* The following example demonstrates how to use the *@extract()@* function with the EXTR_SKIP argument.
* Filename: *extract2.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Extracting Values<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCCFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">style=&quot;</span>arial<span class="syntax17">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">model</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">Pan</span><span class="syntax14"> </span><span class="syntax14">TH</span><span class="syntax14">-</span><span class="syntax14">33XYZXYTV</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Original</span><span class="syntax14"> </span><span class="syntax14">model</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">television</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">model</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Pan</span><span class="syntax14"> </span><span class="syntax14">PX</span><span class="syntax14">-</span><span class="syntax14">44BBCCSTV</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">type</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">plasma</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">color</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">charcoal</span><span class="syntax14"> </span><span class="syntax14">bezel</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">size</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">42</span><span class="syntax14"> </span><span class="syntax14">in</span><span class="syntax14">.</span><span class="syntax14"> </span><span class="syntax14">widescreen</span><span class="syntax14">&quot;</span>
<span class="gutter">  14:</span>                       <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Don't</span><span class="syntax2"> </span><span class="syntax2">overwrite</span><span class="syntax2"> </span><span class="syntax2">existing</span><span class="syntax2"> </span><span class="syntax2">variables</span>
<span class="gutter">  16:</span>    <span class="syntax9">extract</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">television</span><span class="syntax18">,</span> EXTR_SKIP<span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Model</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14"> </span><span class="syntax14">after</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">extract</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">p</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Values</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">variables</span><span class="syntax14"> </span><span class="syntax14">created</span><span class="syntax14"> </span><span class="syntax14">by</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">extract</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">type</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">size</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  21:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span>
<span class="gutter">  22:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  23:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@extract()@* function again takes the array, $television, as its argument, and returns a list of variables, named after the keys in the array.
* The EXTR_SKIP flag prevents the function from overwriting any existing variables with the same name. The original variable, $model, will not be overwritten by the new variable of the same name in the $television array.
* This example demonstrates how to use the *@extract()@* function with the EXTR_PREFIX_ALL argument to create prefixes for any variables it creates.
* Filename: *extract3.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Extracting Values and Adding Prefixes
<span class="gutter">   4:</span>  <span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCCFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Extracting Values and Adding Prefixes<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">style=&quot;</span>arial<span class="syntax17">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">model</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">Pan</span><span class="syntax14"> </span><span class="syntax14">TH</span><span class="syntax14">-</span><span class="syntax14">33XYZXYTV</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Original</span><span class="syntax14"> </span><span class="syntax14">model</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">model</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax10">$</span><span class="syntax10">television</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">model</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Pan</span><span class="syntax14"> </span><span class="syntax14">PX</span><span class="syntax14">-</span><span class="syntax14">44BBCCSTV</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">type</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">plasma</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  14:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">color</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">charcoal</span><span class="syntax14"> </span><span class="syntax14">bezel</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutterH">  15:</span>                        <span class="syntax14">&quot;</span><span class="syntax14">size</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">42</span><span class="syntax14"> </span><span class="syntax14">in</span><span class="syntax14">.</span><span class="syntax14"> </span><span class="syntax14">widescreen</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                       <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Adding</span><span class="syntax2"> </span><span class="syntax2">a</span><span class="syntax2"> </span><span class="syntax2">prefix</span>
<span class="gutter">  18:</span>    <span class="syntax9">extract</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">television</span><span class="syntax18">,</span> EXTR_PREFIX_ALL<span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">myvar</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">Variables</span><span class="syntax14"> </span><span class="syntax14">created</span><span class="syntax14"> </span><span class="syntax14">by</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">extract</span><span class="syntax14">(</span><span class="syntax14">)</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">all</span><span class="syntax14"> </span><span class="syntax14">have</span>
<span class="gutterH">  20:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">prefixes</span><span class="syntax14">.</span><span class="syntax14"> </span><span class="syntax14">Here</span><span class="syntax14"> </span><span class="syntax14">are</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">values</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">myvar_model</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">myvar_type</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">myvar_color</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">myvar_size</span>
<span class="gutter">  22:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">em</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  24:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@extract()@* function takes the array $television as its argument and returns a list of variables, named after the keys in the $television array.
* The EXTR_PREFIX_ALL flag causes the function to prepend all the variable names with the prefix "myvar" and an underscore (_).

h3. Multidimensional Arrays

* To this point, we have been talking about one-dimensional arrays; that is, arrays in which each key or index has one value.
* A multidimensional array is an array that contains another array. Instead of having a single set of key--value pairs, the key--value pairs can be nested, allowing you to create more complex data structures.
* For example, you might have numbers stored in a table consisting of rows and columns, or an array of teachers each teaching multiple subjects, or an array of employees each with a set of his or her own keys and values, and so on.
* Filename: *multidim.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Array of Arrays<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Array of Arrays<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">arial</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">numbers</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax5">10</span><span class="syntax18">,</span><span class="syntax5">12</span><span class="syntax18">,</span><span class="syntax5">14</span><span class="syntax18">,</span><span class="syntax5">16</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutterH">  10:</span>                     <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax5">15</span><span class="syntax18">,</span><span class="syntax5">18</span><span class="syntax18">,</span><span class="syntax5">21</span><span class="syntax18">,</span><span class="syntax5">24</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                     <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax5">20</span><span class="syntax18">,</span><span class="syntax5">25</span><span class="syntax18">,</span><span class="syntax5">30</span><span class="syntax18">,</span><span class="syntax5">35</span><span class="syntax18">)</span>
<span class="gutter">  12:</span>                    <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">table</span><span class="syntax14"> </span><span class="syntax14">border</span><span class="syntax14">=</span><span class="syntax14">'</span><span class="syntax14">1</span><span class="syntax14">'</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">caption</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">font</span><span class="syntax14"> </span><span class="syntax14">size</span><span class="syntax14">=</span><span class="syntax14">'</span><span class="syntax14">-</span><span class="syntax14">2</span><span class="syntax14">'</span><span class="syntax14">&gt;</span><span class="syntax14">Rows</span><span class="syntax14"> </span><span class="syntax14">and</span>
<span class="gutter">  14:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">Columns</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">font</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">caption</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax8">for</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">=</span><span class="syntax5">0</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">&lt;</span> <span class="syntax5">3</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">++</span><span class="syntax18">)</span> <span class="syntax18">{</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">3</span><span class="syntax2"> </span><span class="syntax2">rows</span>
<span class="gutter">  16:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">tr</span><span class="syntax14"> </span><span class="syntax14">bgcolor</span><span class="syntax14">=</span><span class="syntax14">'</span><span class="syntax14">999FFF</span><span class="syntax14">'</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>      <span class="syntax8">for</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">j</span><span class="syntax18">=</span><span class="syntax5">0</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">j</span><span class="syntax18">&lt;</span><span class="syntax5">4</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">j</span><span class="syntax18">++</span><span class="syntax18">)</span><span class="syntax18">{</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">4</span><span class="syntax2"> </span><span class="syntax2">columns</span>
<span class="gutter">  18:</span>        <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">numbers</span><span class="syntax18">[</span><span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">]</span><span class="syntax18">[</span><span class="syntax10">$</span><span class="syntax10">j</span><span class="syntax18">]</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>      <span class="syntax18">}</span>
<span class="gutterH">  20:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>    <span class="syntax18">}</span>
<span class="gutter">  22:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">table</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  24:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* An array of arrays is created. This is a two-dimensional array consisting of rows and columns. Each of the rows in declared as an array within the array $numbers.
* An HTML table is created; the outer for loop is used to cycle through each of the rows, and the inner for loop is used to cycle through each of the columns.
* The following example demonstrates how to create an array of associative arrays.
* Filename: *multidim2.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Array of Associative Arrays<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">9999CC</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">arial</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Array of Associative Arrays<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">teachers</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span>
<span class="gutterH">  10:</span>      <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Name</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax14">&quot;</span><span class="syntax14">John</span><span class="syntax14"> </span><span class="syntax14">Doe</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>            <span class="syntax13">'</span><span class="syntax13">Subjects</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Government</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">English</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>            <span class="syntax13">'</span><span class="syntax13">Salary</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax5">56000</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>           <span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  14:</span>      <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Name</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax14">&quot;</span><span class="syntax14">Steven</span><span class="syntax14"> </span><span class="syntax14">Lee</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutterH">  15:</span>            <span class="syntax13">'</span><span class="syntax13">Subjects</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">Math</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">Science</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">PE</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>            <span class="syntax13">'</span><span class="syntax13">Salary</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax5">65000</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>           <span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  18:</span>      <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Name</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax14">&quot;</span><span class="syntax14">Jean</span><span class="syntax14"> </span><span class="syntax14">Perot</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  19:</span>            <span class="syntax13">'</span><span class="syntax13">Subjects</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">French</span><span class="syntax14">&quot;</span><span class="syntax18">,</span> <span class="syntax14">&quot;</span><span class="syntax14">Literature</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutterH">  20:</span>            <span class="syntax13">'</span><span class="syntax13">Salary</span><span class="syntax13">'</span><span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax5">57000</span><span class="syntax18">,</span>
<span class="gutter">  21:</span>           <span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  22:</span>                      <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>    <span class="syntax8">foreach</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">teachers</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">value</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  24:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">hr</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  25:</span>      <span class="syntax8">foreach</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">value</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">key</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  26:</span>        <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">key</span> <span class="syntax18">=</span><span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">Subjects</span><span class="syntax14">&quot;</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  27:</span>          <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  28:</span>          <span class="syntax8">foreach</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">val</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">subjects</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  29:</span>            <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">subjects</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  30:</span>          <span class="syntax18">}</span>
<span class="gutter">  31:</span>        <span class="syntax18">}</span>
<span class="gutter">  32:</span>        <span class="syntax8">else</span> <span class="syntax18">{</span>
<span class="gutter">  33:</span>          <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  34:</span>        <span class="syntax18">}</span>
<span class="gutterH">  35:</span>      <span class="syntax18">}</span>
<span class="gutter">  36:</span>    <span class="syntax18">}</span>
<span class="gutter">  37:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  38:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span>
<span class="gutter">  39:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  40:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The array named $teachers consists of three nested associative arrays, and each of the associative arrays contains an array with a like key: 'Subjects'.
* Notice that each of the associative arrays nested within the $teacher array contains a set of key--value pairs, where the value corresponding to the "Subject" key is an array of subjects.
* The outer foreach loop will start cycling through each of the associative arrays contained within the $teacher array. Each of the associative arrays is a value of the $teachers array.
* The first inner foreach loop will cycle through the keys and values of each associative array. If the key of the associative array is "Subject", then another foreach loop will be started to get the array of values associated with that key.
* The second inner foreach loop is used to cycle through all the subjects in the array assigned to the "Subject" key. Each subject in the array will be printed.
* If the key in the associative array is not "Subject", its single value will be printed.

h3. Finding the Size of a Mutidimensional Array

* To find the size of an array, we used the built-in *@count()@* function. To find the size of a multidimensional array, the *@count()@* function can be given the COUNT_RECURSIVE argument, which causes the *@count()@* function to go into each nested array and count its elements.
* Recursion is when a function, to accomplish a task, calls itself with some part of the task until it has applied the task to all of its targets. In the case of the *@count()@* function, counting the elements of all of the nested arrays, not just the outer one.
* This example demonstrates how to get the size of a multidimensional array and how to count all of its elements.
* Filename: *countAssoc.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Counting Elements in a Multidimensional Array
<span class="gutter">   4:</span>  <span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">blue</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Counting Elements in a Multidimensional Array
<span class="gutter">   8:</span>  <span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;div</span><span class="syntax17"> </span><span class="syntax17">align</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">center</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">2</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">  11:</span>  <span class="syntax17">&lt;tr</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;td</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">cornflowerblue</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">  12:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">  13:</span>    <span class="syntax10">$</span><span class="syntax10">plants</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">perennials</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Day</span><span class="syntax13"> </span><span class="syntax13">Lilies</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  14:</span>                                          <span class="syntax13">'</span><span class="syntax13">Coral</span><span class="syntax13"> </span><span class="syntax13">Bells</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutterH">  15:</span>                                          <span class="syntax13">'</span><span class="syntax13">Goldenrod</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                                          <span class="syntax13">'</span><span class="syntax13">Russian</span><span class="syntax13"> </span><span class="syntax13">Sage</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>                    <span class="syntax13">'</span><span class="syntax13">annuals</span><span class="syntax13">'</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">Begonia</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  18:</span>                                       <span class="syntax13">'</span><span class="syntax13">Sweet</span><span class="syntax13"> </span><span class="syntax13">Alyssum</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutter">  19:</span>                                       <span class="syntax13">'</span><span class="syntax13">Cosmos</span><span class="syntax13">'</span><span class="syntax18">,</span>
<span class="gutterH">  20:</span>                                       <span class="syntax13">'</span><span class="syntax13">Helioptrope</span><span class="syntax13">'</span><span class="syntax18">)</span>
<span class="gutter">  21:</span>                   <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  22:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Recursive</span><span class="syntax2"> </span><span class="syntax2">count</span>
<span class="gutter">  23:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">elements</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  24:</span>          <span class="syntax9">count</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">plants</span><span class="syntax18">,</span> COUNT_RECURSIVE<span class="syntax18">)</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">\n</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  25:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">number</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">arrays</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">,</span> <span class="syntax9">count</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">plants</span><span class="syntax18">)</span><span class="syntax18">,</span>
<span class="gutter">  26:</span>         <span class="syntax14">&quot;</span><span class="syntax14">\n</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  27:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  28:</span>  <span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/tr</span><span class="syntax17">&gt;</span>
<span class="gutter">  29:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutterH">  30:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  31:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@count()@* function, with the COUNT_RECURSIVE flag argument, will recursively count all the elements in all of the arrays. The *@count()@* function, without COUNT_RECURSIVE, counts just the two outer arrays.

h3. Sorting Arrays

* PHP provides numerous built-in functions to sort an array, listed in the table below.
* The examples following the table show the more common array sorting functions and examples of how to use them.
* Table: Sorting an Array

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Function*|{background:#ccc}.*What_It_Does*|
|*@array_multisort()@*  |Sorts multiple or multidimensional arrays                                             |
|*@arsort()@*           |Sorts an array in reverse order and maintains index association                       |
|*@asort()@*            |Sorts an array and maintains index association                                        |
|*@krsort()@*           |Sorts an array by key in reverse order                                                |
|*@ksort()@*            |Sorts an array by key                                                                 |
|*@natcasesort()@*      |Sorts an array using a case-insensitive "natural order" algorithm                     |
|*@natsort()@*          |Sorts an array using a "natural order" algorithm                                      |
|*@rsort()@*            |Sorts an array in reverse order                                                       |
|*@shuffle()@*          |Shuffles an array                                                                     |
|*@sort()@*             |Sorts an array                                                                        |
|*@uasort()@*           |Sorts an array with a user-defined comparison function and maintains index association|
|*@uksort()@*           |Sorts an array by keys using a user-defined comparison function                       |
|*@usort()@*            |Sorts an array by values using a user-defined comparison function                     |

h3. Alphabetic Sort of Numerically Indexed Arrays

* The *@sort()@* function sorts an array alphabetically, and given specific flags, can also sort numerically.
* An alphabetic, also called a lexicographic sort, is performed according to the traditional "dictionary order," using the ASCII collating sequence. Uppercase letters come before lowercase letters, with numbers and punctuation interspersed.
* The built-in PHP *@sort()@* function sorts an array in ascending order by the value of the elements in the array. The index values are reset after the array is sorted.
* This function should be used on arrays with numeric indexes, and *@theasort()@* function used on associative arrays. The value returned is TRUE for success or FALSE for failure.
* This table lists the sort_flags (an optional parameter) used to modify the sorting behavior.
* Table: Sort Flags

table{text-align:left; margin-left: 4em;}.
|{background:#ccc}.*Flag*|{background:#ccc}.*What_It_Does*|
|@SORT_LOCALE_STRING@  |Compares items as strings, based on the current locale|
|@SORT_NUMERIC@        |Compares items numerically                            |
|@SORT_REGULAR@        |Compares items normally (does not change types)       |
|@SORT_STRING@         |Compares items as strings                             |

h3. Alphabetic Sort

* The *@sort()@* function sorts the elements of an array alphabetically (ASCII sort).
* Filename: *alphasort.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Sorting an Array<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCFFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Sorting an Array Alphabetically<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">animals</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">dog</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">cat</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">horse</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">monkey</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">gorilla</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">zebra</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax9">sort</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">animals</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">animals</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  15:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  16:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  17:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@sort()@* function sorts the values in the array alphabetically and resets the index values.

h3. Numeric Sort

* When the *@sort()@* function is given the SORT_NUMERIC argument, the values in the array are sorted numerically.
* Filename: *numsort.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Sorting an Array<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCFFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span> <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Sorting an Array Numerically<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutterH">  10:</span>      <span class="syntax10">$</span><span class="syntax10">animals</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">5</span><span class="syntax14"> </span><span class="syntax14">dogs</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">15</span><span class="syntax14"> </span><span class="syntax14">cats</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">10</span><span class="syntax14"> </span><span class="syntax14">horses</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">1</span><span class="syntax14"> </span><span class="syntax14">monkey</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  11:</span>                       <span class="syntax14">&quot;</span><span class="syntax14">1</span><span class="syntax14"> </span><span class="syntax14">gorilla</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">2</span><span class="syntax14"> </span><span class="syntax14">zebras</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>      <span class="syntax9">sort</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">animals</span><span class="syntax18">,</span> SORT_NUMERIC<span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>      <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">animals</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  15:</span>  <span class="syntax17">&lt;/b</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  16:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  17:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@sort()@* function with the SORT_NUMERIC argument sorts the array numerically; that is, the numbers in the strings are sorted as numbers, not alphabetic characters.

h3. Reversed Sort

* The *@rsort()@* function sorts an array in reverse order. This function assigns new keys for the elements in the array. It will remove any existing keys you might have assigned, rather than just reordering the keys.
* This function sorts an array in reverse order (highest to lowest). It returns TRUE on success or FALSE on failure.
* Format:
<br /><pre>
bool rsort ( array &array [, int sort_flags] )
</pre>

h3. Sort an Associative Array by Values

* The *@asort()@* function sorts an associative array so that the relation between the key and value is maintained. The function returns boolean TRUE for success, and FALSE for failure.
* The *@asort()@* function is used mainly when sorting associative arrays where the actual element order is significant.
* Format:
<br /><pre>
asort( associative_array_name);
</pre>
* Example:
<br /><pre>
asort($states ); // Sorts by value
</pre>
* Filename: *asort.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Sorting an Array<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCCFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">style=&quot;</span>arial<span class="syntax17">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">2</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">cellspacing</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">3</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>   <span class="syntax17">&lt;caption</span><span class="syntax17">&gt;</span>Sorting by Values<span class="syntax17">&lt;/caption</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>   <span class="syntax17">&lt;tr</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span>   <span class="syntax17">&lt;?php</span>
<span class="gutter">  11:</span>     <span class="syntax10">$</span><span class="syntax10">states</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">HI</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Hawaii</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">ME</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Maine</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">MT</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Montana</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  14:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">CA</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">California</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutterH">  15:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">AZ</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Arizona</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">MD</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Maryland</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>                    <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>     <span class="syntax9">asort</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Sort</span><span class="syntax2"> </span><span class="syntax2">by</span><span class="syntax2"> </span><span class="syntax2">value</span>
<span class="gutter">  19:</span>     <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax8">list</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax18">)</span> <span class="syntax18">=</span> <span class="syntax9">each</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>       <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">states</span><span class="syntax14">[</span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">key</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">]</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">\n</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>     <span class="syntax18">}</span>
<span class="gutter">  22:</span>   <span class="syntax17">?&gt;</span>
<span class="gutter">  23:</span>   <span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/tr</span><span class="syntax17">&gt;</span>
<span class="gutter">  24:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@asort()@* function sorts the values of an associative array, alphabetically.
* The while loop evaluates its expression and cycles through each of the key--value pairs of the $states array.
* When the array key--values are printed, we see that the values have been sorted alphabetically and the keys reordered to match their original corresponding values.

h3. Sort by Value in Reverse Order

* The *@arsort()@* function sorts an array in reverse order and maintains index association with keys and values associated with them.
* It is used mainly with associative arrays where the association is significant. The function returns a boolean TRUE for success and FALSE for failure.
* Format:
<br /><pre>
arsort ( array_name );
// See sort() function for flag arguments
arsort (array_name, flags);
</pre>
* Example:
<br /><pre>
arsort ($states); // Sorts in reverse order by value
</pre>
* Filename: *arsort.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Sorting an Array<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCFFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">style=&quot;</span>arial<span class="syntax17">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">2</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">cellspacing</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">3</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>   <span class="syntax17">&lt;caption</span><span class="syntax17">&gt;</span>Reverse Sort by Values<span class="syntax17">&lt;/caption</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>   <span class="syntax17">&lt;tr</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span>   <span class="syntax17">&lt;?php</span>
<span class="gutter">  11:</span>     <span class="syntax10">$</span><span class="syntax10">states</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">HI</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Hawaii</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">ME</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Maine</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">MT</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Montana</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  14:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">CA</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">California</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutterH">  15:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">AZ</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Arizona</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">MD</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Maryland</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>                    <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>     <span class="syntax9">arsort</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>     <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax8">list</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax18">)</span> <span class="syntax18">=</span> <span class="syntax9">each</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>       <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">states</span><span class="syntax14">[</span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">key</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">]</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">\n</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>     <span class="syntax18">}</span>
<span class="gutter">  22:</span>   <span class="syntax17">?&gt;</span>
<span class="gutter">  23:</span>   <span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/tr</span><span class="syntax17">&gt;</span>
<span class="gutter">  24:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@arsort()@* function sorts the values of an associative array, alphabetically and in reverse order. When the array key--values are printed in the while loop, the values have been sorted in reverse, alphabetically, and the keys reordered to match their original corresponding values.

h3. Sort an Associative Array by Key

* The *@ksort()@* function sorts an array by keys, maintaining the relation between the key and its corresponding value.
* This function is used primarily for associative arrays, and returns TRUE on success or FALSE on failure.
* Filename: *ksort.php*
<br /><PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Sorting an Array<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">CCFFFF</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">style=&quot;</span>arial<span class="syntax17">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;table</span><span class="syntax17"> </span><span class="syntax17">border</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">2</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">cellspacing</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">3</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>   <span class="syntax17">&lt;caption</span><span class="syntax17">&gt;</span>Sorting by Keys<span class="syntax17">&lt;/caption</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>   <span class="syntax17">&lt;tr</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;td</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span>   <span class="syntax17">&lt;?php</span>
<span class="gutter">  11:</span>     <span class="syntax10">$</span><span class="syntax10">states</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">HI</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Hawaii</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  12:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">ME</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Maine</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  13:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">MT</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Montana</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  14:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">CA</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">California</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutterH">  15:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">AZ</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Arizona</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  16:</span>                     <span class="syntax14">&quot;</span><span class="syntax14">MD</span><span class="syntax14">&quot;</span><span class="syntax18">=</span><span class="syntax18">&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">Maryland</span><span class="syntax14">&quot;</span><span class="syntax18">,</span>
<span class="gutter">  17:</span>                    <span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>     <span class="syntax9">ksort</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>     <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax8">list</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">key</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">val</span><span class="syntax18">)</span> <span class="syntax18">=</span> <span class="syntax9">each</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">states</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>       <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">states</span><span class="syntax14">[</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">key</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">]</span><span class="syntax14"> </span><span class="syntax14">=</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">val\n</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>     <span class="syntax18">}</span>
<span class="gutter">  22:</span>   <span class="syntax17">?&gt;</span>
<span class="gutter">  23:</span>   <span class="syntax17">&lt;/td</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/tr</span><span class="syntax17">&gt;</span>
<span class="gutter">  24:</span>  <span class="syntax17">&lt;/table</span><span class="syntax17">&gt;</span>
<span class="gutterH">  25:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
* The *@ksort()@* function sorts the keys of an array alphabetically. When the array key--values are printed, the keys have been sorted alphabetically, and the values reordered to match the original keys that correspond to them.

<br />

---

[[Unit Five => 152-166 Unit Five Index]]

