<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>Functions</title>
<link href="../../../css/basic.css" rel="stylesheet" type="text/css">
<script type="text/javascript" language="JavaScript">
<!--
function putSemester() {
    var today=new Date();
    var thisMonth=today.getMonth()+1;
    var thisYear=today.getFullYear();
    if(thisMonth <=6) {
        return "Spring, " + thisYear;
    }
    else {
       return "Fall, " + thisYear;
    }
}//-->
</script>
<style type="text/css">
<!--
    .bgStripes {
        background-image:url(../../../images/Xstripes.gif);
        background-attachment: fixed;
    }
    body {
        background-color:white;
    }
    strong {
        font-family: Arial, Helvetica, sans-serif;
    }
-->
</style>
</head>
<body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">
<table class="bgStripes" border="0" width="100%">
<tbody>
<tr name="firstRow">
<td valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
<script type="text/javascript">
<!--
    document.write(putSemester());
-->
</script>
</span> <br>
</td>
<td style="text-align: center;"><span style="font-weight: bold; font-size: medium; color: darkblue;">
PHP Web Development with MySQL
</span> </td>
<td align="right" valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
3 Credits</span> </td>
</tr>
<tr>
<td colspan="3" style="text-align: center;"><span style="font-size: xx-small; font-weight: bold;">
152-166</span> </td>
</tr>
</tbody>
</table>
<!--The heading for the slides --> <br>
<table class="headTable1" border="0">
<tbody>
<tr>
<td width="100"><a href="index.html"><img alt="" src="../../../images/btn_lArrow.gif" border="0"></a><a href="index.html"><img alt="" src="../../../images/btn_upArrow.gif" border="0"></a><a href="func2.html"><img alt="" src="../../../images/btn_rArrow.gif" border="0"></a></td>
<td>User-Defined Functions</td>
</tr>
</tbody>
</table>
<br>
<div class="disp1">
<ul class="slidesUl1">
<li><p>
What Is a Function?
</p><p>
We have already seen a number of PHP built-in functions to manipulate arrays
and strings, perform tests on variables, display output, and more.
</p><p>
PHP provides you with a large array of built-in functions to perform common
tasks to save you the trouble of writing your own functions.
</p><p>
As your programs become more sophisticated, you might find that the particular
task you need is not handled by PHP or that you want to break your program into
smaller units to make it more manageable. Then it is time to write your own
functions, and this unit will show you how. But first things first—let's define
a function.
</p><p>
Functions are self-contained units of a program designed to accomplish a
specified task such as calculating a mortgage payment, retrieving data from a
database, or checking for valid input.
</p><p>
When a function is called in a program, it is like taking a detour from the
main part of the program. PHP starts executing the instructions in the function,
and when finished, returns to the main program and picks up where it left off.
</p><p>
Functions can be used over and over again and thus save you from repetitious
programming. They are also used to break up a program into smaller modules to
keep it better organized and easier to maintain.
</p><p>
By definition, a function is a block of statements that not only performs some
task, but can also return a value.
</p><p>
A function is independent of your program and not executed until called.
A function, often referred to as a "black box," is like the pocket calculator
or remote control. Information goes into the black box as input (like the
calculator or remote control when you push buttons), and the action or value
returned from the box is its output (such as a calculation or a different channel).
</p><p>
What goes on inside the box is transparent to the user. The programmer who
writes the function is the only one who cares about those details.
</p><p>
When you use PHP's built-in functions such as print() or rand(), you send a
string of text or a number to the function, and it sends something back.
</p><p>
You do not care how it does its job, you just expect it to work. If you send
bad input, you get back bad output or maybe nothing, hence the expression
"Garbage in, garbage out."
</p><p>
Functions are like miniscripts. They contain PHP statements that behave as a
single command and can be called repeatedly throughout a program without
rewriting the code.
</p><p>
The terms <b>function</b> and <b>method</b> are often used interchangeably.
The term method refers to a function that is defined as part of a PHP object.
</p><p>
The term function as used in this unit is a stand-alone block of statements,
independent of the program until invoked by a caller.
</p></li>
<li><p>
Function Declaration, Definition, and Invocation
</p><p>
The terms <b>declaration</b> and <b>definition</b> are often used interchangeably,
but they are really different terms.
</p><p>
To declare a function is to give it a name followed by the keyword function,
and a set of parentheses that might or might not contain parameters (messages)
that the function will accept.
</p>
<blockquote><code><small>
function do_something()    // Declaration<br>
</small></code></blockquote>
<p>
The function definition is the declaration and the body of statements found
in the curly brackets after the function's name.
</p>
<blockquote><code><small>
function do_something() {<br>
&nbsp;&nbsp;statements;  // Definition<br>
}<br>
</small></code></blockquote>
<p>
By itself, a function does not do anything. Invocation refers to calling a function;
that is, telling PHP to start executing the statements within the curly brackets.
</p><p>
Typically, a function is called from a statement in another part of the program
by its name, followed by a set of parentheses that might or might not be empty.
</p>
<blockquote><code><small>
do_something();<br>
</small></code></blockquote>
<p>
Now we are ready to put all of these pieces together to create a function and call it.
</p></li>
<li><p>
Where to Put Functions
</p><p>
User-defined functions can be declared anywhere in a file. They are placed inside
the <b>&lt;?php</b> and <b>?&gt;</b> tags and are available only to the script
where they are defined.
</p><p>
The function can be called before or after its definition because PHP internally
compiles all function definitions before it executes any of the statements in the script.
</p><p>
Commonly used functions are often stored in separate files to reuse them as
needed.
</p></li>
<li><p>
How to Define a Function
</p><p>
To define a function, the function keyword is followed by the name of the
function, and a set of parentheses.
</p><p>
The parentheses are used to hold parameters, values that are received by the
function. The function's statements are enclosed in curly brackets.
</p>
<blockquote><code><small>
&lt;?php<br>
&nbsp;&nbsp;function bye() {<br>
&nbsp;&nbsp;&nbsp;&nbsp;print "Bye, adios, adieu, au revoir...");<br>
&nbsp;&nbsp;}<br>
?&gt;<br>
</small></code></blockquote>
<p>
Within the curly braces, any legal PHP code is accepted, including other function
calls, HTML, declaration of new variables, even calls to itself.
Think of a function as a mini PHP script.
</p><p>
Function names, like variable names, must follow naming conventions:
</p>
</li>
</ul>
<blockquote>
<ol type="1">
<li class="row1">
<p>
They must consist of letters, digits, or the underscore and cannot begin with a digit.
</p></li>
<li class="row0">
<p>
The function name must be unique for each function. You can have a variable
with the same name as a function, but it is not recommended.
</p></li>
<li class="row0">
<p>
A function should be given a name that indicates its purpose with an action word,
a verb, such as <b>updateEmail()</b> , <b>getList()</b> , or <b>calculateTax()</b>
. The name of your function should indicate what the function is supposed to do;
for example, a function used to display form output might be named
<b>display-Form()</b> rather than <b>showit()</b> .
</p></li>
<li class="row0">
<p>
Unlike variable names, function names are <b>not</b> case sensitive.
The PHP convention is to use lowercase names.
</p></li>
</ol>
</blockquote>
<ul class="slidesUl1">
<li>
<p>
Examples of <b>valid</b> function names
</p>
<blockquote><code><small>
do_work()<br>
Addemup()<br>
calculate2()<br>
_name_that_tune()<br>
</small></code></blockquote>

<p>
Examples of <b>invalid</b> function names
</p>
<blockquote><code><small>
5printout()&nbsp;&nbsp;// Can't start with a number<br>
show-form()&nbsp;&nbsp// Can't contain a dash<br>
$moveover()&nbsp;&nbsp// Can't contain nonalphanumeric<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// characters other than an underscore<br>            
</small></code></blockquote>
</li>
<li><p>
How to Call a Function
</p><p>
Once you define a function, you can use it. PHP functions are invoked by calling
the function; for example: <b>bye()</b> or <b>show_me($a, $b)</b>
</p><p>
Calling a function is similar to taking a detour from the main highway you are
driving on, and then later returning to the main road again. The main highway
is analogous to the PHP program, and a function call is analogous to the detour
in the road.
</p><p>
When you call (invoke) the function, the statements in the function are executed.
When the function ends, control returns to the statement following the function
call (i.e., where it left off in the main program), and program execution continues.
</p><p>
When called, the function's name is followed by a set of parentheses that might
contain "messages" that will go to the function. These messages are called
<b>arguments</b> .
</p><p>
When the function returns, it might send back information to the main program.
</p><p>
To continue the detour analogy, if before you detour, you buy a digital camera
and some water to take along with you, these items would be like arguments are
to the function. When you return to the main road again, you might bring back
some pictures and an empty water bottle.
</p><p>
This would be analagous to a <b>return</b> statement in a function. If, for example,
the function is sent a list of numbers, and its task is get the average of the
numbers, then it might return the average to the caller of the function.
</p><p>
To check whether the function has been defined or if it is truly a function,
use the built-in <b>isset()</b> function.
</p><p>
Format - Function definition:
</p>
<blockquote><code><small>
function function_name() {<br>
&nbsp;&nbsp;statement;<br>
&nbsp;&nbsp;statement;<br>
}<br><br>
function function_name (parameter, parameter, ...)<br>
{<br>
&nbsp;&nbsp;statement;<br>
&nbsp;&nbsp;statement;<br>
}<br>
</small></code></blockquote>
<p>
Format - Function call:
</p>
<blockquote><code><small>
function_name();<br><br>
function_name(argument, argument, ...);<br>
</small></code></blockquote>
<h4>
Filename: funcdef.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>A Simple Function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">009900</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17"> </span><span class="syntax17">align</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">center</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>User-Defined Function and Call<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;p</span><span class="syntax17"> </span><span class="syntax17">align</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">center</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Function</span><span class="syntax2"> </span><span class="syntax2">definition</span>
<span class="gutterH">  10:</span>    <span class="syntax8">function</span> <span class="syntax6">welcome</span><span class="syntax18">(</span><span class="syntax18">)</span> <span class="syntax18">{</span>   
<span class="gutter">  11:</span>      <span class="syntax10">$</span><span class="syntax10">place</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">San</span><span class="syntax14"> </span><span class="syntax14">Francisco</span><span class="syntax14"> </span><span class="syntax14">Zoo</span><span class="syntax14">&quot;</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2">Local</span><span class="syntax2"> </span><span class="syntax2">variable</span>
<span class="gutter">  12:</span>      <span class="syntax8">print</span><span class="syntax18"> (</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">Welcome</span><span class="syntax14"> </span><span class="syntax14">to</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">place</span><span class="syntax14">!</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax18">}</span>
<span class="gutter">  14:</span>    
<span class="gutterH">  15:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Function</span><span class="syntax2"> </span><span class="syntax2">call</span>
<span class="gutter">  16:</span>    <span class="syntax6">welcome</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>  
<span class="gutter">  17:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  18:</span>  <span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/p</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutterH">  20:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
A function can be defined before or after the place in the program where it is
called. Function definitions are placed between the PHP tags.
</p><p>
Variables declared inside a function are local in scope to the function.
They are not visible outside of the function.
</p><p>
Variables defined outside of the function are not visible inside the function
unless they are made global (We will discuss how, later in this unit.).
</p></li>
<li><p>
Passing Arguments to Functions
</p><p>
If a user wants to send values to a function, he or she calls the function
with a comma-separated list of arguments enclosed in parentheses.
</p><p>
In the "detour in the road" analogy, this would be like picking up some food
or a disposable camera to take along when you temporarily leave the main road.
</p><p>
The following <b>feed_me()</b> function takes three arguments when called:
</p>
<blockquote><code><small>
feed_me("fruit", $veggies, 5);<br>
</small></code></blockquote>
<p>
The arguments can be a combination of numbers, strings, references, variables, and so on.
They are received by the function in a list of corresponding <b>parameters</b> .
</p>
<blockquote><code><small>
function feed_me($fr, $veg, $num) {;<br>
&nbsp;&nbsp;. . .<br>
}<br>
</small></code></blockquote>
<p>
The names of the arguments are not necessarily the same as the names in the parameter
list, but they correspond to the same values. These values can be assigned to
local variables inside the function. They disappear when the function exits.
</p><p>
PHP does not keep track of the number of arguments sent to the function to make
sure they match up with the number of parameters specified in the function
definition at the other end.
</p><p>
If you send three arguments, and there are only two parameters defined in the
function definition, the third argument is ignored. If you send only two arguments,
and the parameter list expects three, then PHP will send a warning such as the
following, and the parameter remains unset:
</p>
<blockquote><code><small>
Warning: Missing argument 3 for calc_mileage() in c:\wamp\www\exemples\<br>
ch9functions\calc_mileage.php on line 5<br>
</small></code></blockquote>
<p>
In the analogy of the pocket calculator, you are the caller when you press
the buttons, and the internal functions inside the calculator are the receiver.
</p></li>
<li><p>
Passing by Value
</p><p>
When you pass arguments by value, PHP makes a copy of the variable, so that if
you change it in the function, you are only changing the copy.
When the function exits, the copy is destroyed. 
</p><p>
In the following example the parameters, $m and $g, are copies of the original
values of $miles and $gallons. If you give yourself 10 more gallons of gas in
the function ($m + 10), then when the function exits, the original value will
be unchanged.
</p><p>
To prevent inadvertently altering the values of variables declared outside of a
function, sending a copy is considered a safe way to pass arguments, and is
designed to be the default.
</p>
<h4>
Filename: arguments.html (The HTML File)
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;</span><span class="syntax17">html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;</span><span class="syntax17">head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;</span><span class="syntax17">title</span><span class="syntax17">&gt;</span>Passing Arguments<span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;</span><span class="syntax17">body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">lavender</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;</span><span class="syntax17">form</span><span class="syntax17"> </span><span class="syntax17">action</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">arguments.php</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;</span><span class="syntax17">p</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  Find the volume (in feet) of a rectangular room with sides
<span class="gutter">   9:</span>  <span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">text</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax17">6</span><span class="syntax17"> </span><span class="syntax17">name</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">s1</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span>  by
<span class="gutter">  11:</span>  <span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">text</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax17">6</span><span class="syntax17"> </span><span class="syntax17">name</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">s2</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">  12:</span>  by
<span class="gutter">  13:</span>  <span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">text</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax17">6</span><span class="syntax17"> </span><span class="syntax17">name</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">s3</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">  14:</span>  <span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">p</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;</span><span class="syntax17">p</span><span class="syntax17">&gt;</span>
<span class="gutterH">  15:</span>  <span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">submit</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">name</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">submit</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">value</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">Get</span><span class="syntax13"> </span><span class="syntax13">Volume</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">&gt;</span>
<span class="gutter">  16:</span>  <span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">p</span><span class="syntax17">&gt;</span>
<span class="gutter">  17:</span>  <span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">form</span><span class="syntax17">&gt;</span>
<span class="gutter">  18:</span> <span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">body</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span><span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<h4>
Filename: arguments.php (The PHP Script)
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Passing Arguments<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax17"> </span><span class="syntax18">=</span><span class="syntax17"> </span><span class="syntax14">&quot;</span><span class="syntax14">#</span><span class="syntax14">ffffcc</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">verdana</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax9">extract</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">_REQUEST</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax6">volume</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">s1</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">s2</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">s3</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Passes</span><span class="syntax2"> </span><span class="syntax2">3</span><span class="syntax2"> </span><span class="syntax2">arguments</span>
<span class="gutterH">  10:</span>       
<span class="gutter">  11:</span>    <span class="syntax8">function</span> <span class="syntax6">volume</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">side1</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">side2</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">side3</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  12:</span>      <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">volume</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">room</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span>
<span class="gutter">  13:</span>           <span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">side1</span> <span class="syntax18">*</span> <span class="syntax10">$</span><span class="syntax10">side2</span> <span class="syntax18">*</span> <span class="syntax10">$</span><span class="syntax10">side3</span> 
<span class="gutter">  14:</span>           <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">cubic</span><span class="syntax14"> </span><span class="syntax14">ft</span><span class="syntax14">.</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax18">}</span>
<span class="gutter">  16:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  17:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  18:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The user fills in the HTML form and presses the submit button.
Then the PHP script listed in the action attribute will be started by the server.
</p><p>
The method being used here is the GET method, the default method for sending data
from the browser to the server.
</p><p>
In the PHP script, the values (i.e., the user input) are extracted from the 
$_REQUEST array. The values are stored in variables named after the input fields
in the HTML form: $s1, $s2, and $s3.
</p><p>
The function <b>volume()</b> is called (invoked) with three arguments,
$s1, $s2, and $s3. Copies of these values will be sent to the function.
</p><p>
The function will multiply the three values passed to get the volume of a room
and print the result.
</p></li>
<li><p>
Missing Arguments
</p><p>
If a function definition specifies input parameters to the function, then you
must send that number of arguments to the function or you will get a warning
message from the PHP interpreter.
</p><p>
To guarantee that a parameter will be set even if the function call does not
provide one, you can set default parameter values in the function definition
as we discuss later in this unit.
</p>
<h4>
Filename: missingArgs.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Passing Arguments<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span>  <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax17"> </span><span class="syntax18">=</span><span class="syntax17"> </span><span class="syntax14">&quot;</span><span class="syntax14">#</span><span class="syntax14">ffffcc</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">verdana</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax9">extract</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">_REQUEST</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Need</span><span class="syntax2"> </span><span class="syntax2">three</span><span class="syntax2"> </span><span class="syntax2">arguments,</span><span class="syntax2"> </span><span class="syntax2">but</span><span class="syntax2"> </span><span class="syntax2">pass</span><span class="syntax2"> </span><span class="syntax2">only</span><span class="syntax2"> </span><span class="syntax2">two</span>
<span class="gutterH">  10:</span>    <span class="syntax6">volume</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">s1</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">s2</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    
<span class="gutter">  12:</span>    <span class="syntax8">function</span> <span class="syntax6">volume</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">side1</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">side2</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">side3</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  13:</span>      <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">volume</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">room</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span>
<span class="gutter">  14:</span>           <span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">side1</span> <span class="syntax18">*</span> <span class="syntax10">$</span><span class="syntax10">side2</span> <span class="syntax18">*</span> <span class="syntax10">$</span><span class="syntax10">side3</span>
<span class="gutterH">  15:</span>           <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">cubic</span><span class="syntax14"> </span><span class="syntax14">ft</span><span class="syntax14">.</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax18">}</span>
<span class="gutter">  17:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  18:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The volume() function is called with two arguments, but the function expects three.
</p><p>
Because the third argument is missing, the function will multiply $side1 and
$side2 by zero, which is the default value of the missing variable $side3.
A warning message will be generated.
</p></li>
<li><p>
Variable Number of Arguments
</p><p>
If the function is to take a variable number of arguments, there are three
built-in PHP functions that will help you determine how many arguments were
passed and what they were.
</p><p>
These functions are: <b>func_num_args</b> , <b>func_get_args</b> , and
<b>func_get_arg</b>
</p><p>
Table: Built-In Functions to Handle Variable Number of Arguments
</p>
<blockquote>
<table>
<tr>
<td><code><b><u>
Function</u></b></code></td>
<td><code><b><u>
What It Does</u></b></code></td>
</tr><tr>
<td><code>
func_num_args()</code></td>
<td><code>
Returns the number of arguments passed to the function</code></td>
</tr><tr>
<td><code>
func_get_arg($arg_num)&nbsp;</code></td>
<td><code>
Returns a specific argument, based on its index position</code></td>
</tr><tr>
<td><code>
func_get_args()</code></td>
<td><code>
Returns an array containing all the arguments</code></td>
</tr>
</table>
</blockquote>
<p>
This example demonstrates the use of the built-in functions listed in the table
above.
</p>
<h4>
Filename: variableArgs.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Variable Arguments<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax17"> </span><span class="syntax18">=</span><span class="syntax17"> </span><span class="syntax14">&quot;</span><span class="syntax14">#</span><span class="syntax14">ffffcc</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Variable Number of Arguments<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">verdana</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutterH">  10:</span>     <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Arguments</span><span class="syntax2"> </span><span class="syntax2">must</span><span class="syntax2"> </span><span class="syntax2">be</span><span class="syntax2"> </span><span class="syntax2">scalars,</span><span class="syntax2"> </span><span class="syntax2">not</span><span class="syntax2"> </span><span class="syntax2">an</span><span class="syntax2"> </span><span class="syntax2">array</span>
<span class="gutter">  11:</span>     <span class="syntax10">$</span><span class="syntax10">forty</span> <span class="syntax18">=</span> <span class="syntax5">40</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>     <span class="syntax6">average</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">forty</span><span class="syntax18">,</span> <span class="syntax5">90</span><span class="syntax18">,</span> <span class="syntax5">88</span><span class="syntax18">,</span> <span class="syntax5">33</span><span class="syntax18">,</span> <span class="syntax5">45</span><span class="syntax18">)</span><span class="syntax18">;</span>  
<span class="gutter">  13:</span>
<span class="gutter">  14:</span>     <span class="syntax8">function</span> <span class="syntax6">average</span><span class="syntax18">(</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  15:</span>       <span class="syntax10">$</span><span class="syntax10">sum</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>       <span class="syntax10">$</span><span class="syntax10">all_args</span> <span class="syntax18">=</span> <span class="syntax9">func_get_args</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>       <span class="syntax9">print_r</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">all_args</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>       <span class="syntax10">$</span><span class="syntax10">size</span> <span class="syntax18">=</span> <span class="syntax9">func_num_args</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>       <span class="syntax8">for</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">=</span> <span class="syntax5">0</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">i</span> <span class="syntax18">&lt;</span> <span class="syntax10">$</span><span class="syntax10">size</span><span class="syntax18">;</span> <span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">+</span><span class="syntax18">+</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>         <span class="syntax10">$</span><span class="syntax10">sum</span> <span class="syntax18">+</span><span class="syntax18">=</span> <span class="syntax9">func_get_arg</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">i</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>       <span class="syntax18">}</span>
<span class="gutter">  22:</span>       <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">The</span><span class="syntax14"> </span><span class="syntax14">average</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">&quot;</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">sum</span><span class="syntax18">/</span><span class="syntax10">$</span><span class="syntax10">size</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>     <span class="syntax18">}</span>
<span class="gutter">  24:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  25:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  27:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The function <b>average()</b> is called with a list of numbers as arguments.
When using the special PHP built-in functions, the argument list must be scalars,
not an array.
</p><p>
The built-in function <b>func_all_args()</b> returns an array of all the
parameters received by the function.
</p><p>
The built-in function <b>func_num_args()</b> returns the number of parameters
received by the function.
</p><p>
The built-in function <b>func_get_arg()</b> takes the index number from an
element of the array of arguments and returns its value. In this example,
the index starts at 0, and each time through the loop it will be incremented by
1 until the array ends.
</p><p>
Each time through the loop the value of the element is added to the sum.
The sum of all the grades is totaled by the time the loop exits.
</p></li>
<li><p>
Setting Default Parameters
</p><p>
If the caller of a function does not pass an argument and the function expects
one, you can set a <b>default</b> parameter. Here are some rules for using
default parameters:
</p>
</li>
</ul>
<blockquote>
<ol type="1">
<li class="row1">
<p>
Parameters without defaults must be placed before parameters where defaults are
assigned.
</p></li>
<li class="row0">
<p>
The value assigned as a default must be a constant such as a string or number,
but not a variable.
</p></li>
<li class="row0">
<p>
If the caller of the function passes the expected argument, the value of the
default parameter will be ignored.
</p></li>
</ol>
</blockquote>
<ul class="slidesUl1">
<li>
<h4>
Filename: defaultArgs.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Default Arguments<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">#</span><span class="syntax14">fffed9</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">verdana</span><span class="syntax14">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">+</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax8">function</span> <span class="syntax6">print_table</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">border</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">color</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">#</span><span class="syntax14">669966</span><span class="syntax14">&quot;</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   9:</span>      <span class="syntax8">print</span> <span class="syntax16">&lt;&lt;&lt;TABLE_BLOCK</span>
<span class="gutterH">  10:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">table</span><span class="syntax16"> </span><span class="syntax16">border</span><span class="syntax16">=</span><span class="syntax16">&quot;</span><span class="syntax10">$</span><span class="syntax10">border</span><span class="syntax16">&quot;</span><span class="syntax16">&gt;</span>
<span class="gutter">  11:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">caption</span><span class="syntax16">&gt;</span><span class="syntax16">&lt;</span><span class="syntax16">b</span><span class="syntax16">&gt;</span><span class="syntax16">Lincoln</span><span class="syntax16"> </span><span class="syntax16">High</span><span class="syntax16"> </span><span class="syntax16">Events</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">b</span><span class="syntax16">&gt;</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">caption</span><span class="syntax16">&gt;</span>
<span class="gutter">  12:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">tr</span><span class="syntax16"> </span><span class="syntax16">bgcolor</span><span class="syntax16">=</span><span class="syntax16">&quot;</span><span class="syntax10">$</span><span class="syntax10">color</span><span class="syntax16">&quot;</span><span class="syntax16">&gt;</span>
<span class="gutter">  13:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">th</span><span class="syntax16">&gt;</span><span class="syntax16">Date</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">th</span><span class="syntax16">&gt;</span>
<span class="gutter">  14:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">th</span><span class="syntax16">&gt;</span><span class="syntax16">Event</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">th</span><span class="syntax16">&gt;</span>
<span class="gutterH">  15:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">th</span><span class="syntax16">&gt;</span><span class="syntax16">Time</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">th</span><span class="syntax16">&gt;</span>
<span class="gutter">  16:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">th</span><span class="syntax16">&gt;</span><span class="syntax16">Location</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">th</span><span class="syntax16">&gt;</span>
<span class="gutter">  17:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  18:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  19:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">June</span><span class="syntax16"> </span><span class="syntax16">8</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutterH">  20:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">Graduation</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  21:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">8</span><span class="syntax16">:</span><span class="syntax16">00</span><span class="syntax16"> </span><span class="syntax16">PM</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  22:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">Gymnasium</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  23:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  24:</span>
<span class="gutterH">  25:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  26:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">June</span><span class="syntax16"> </span><span class="syntax16">21</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  27:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">Piano</span><span class="syntax16"> </span><span class="syntax16">Recital</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  28:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">8</span><span class="syntax16">:</span><span class="syntax16">00</span><span class="syntax16"> </span><span class="syntax16">PM</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  29:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">Theatre</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutterH">  30:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  31:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  32:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">July</span><span class="syntax16"> </span><span class="syntax16">4</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  33:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">Fireworks</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  34:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">9</span><span class="syntax16">:</span><span class="syntax16">00</span><span class="syntax16"> </span><span class="syntax16">PM</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutterH">  35:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">td</span><span class="syntax16">&gt;</span><span class="syntax16">Football</span><span class="syntax16"> </span><span class="syntax16">Field</span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">td</span><span class="syntax16">&gt;</span>
<span class="gutter">  36:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">tr</span><span class="syntax16">&gt;</span>
<span class="gutter">  37:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">/</span><span class="syntax16">table</span><span class="syntax16">&gt;</span>
<span class="gutter">  38:</span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16"> </span><span class="syntax16">&lt;</span><span class="syntax16">hr</span><span class="syntax16">&gt;</span>
<span class="gutter">  39:</span><span class="syntax16">TABLE_BLOCK</span><span class="syntax18">;</span>
<span class="gutterH">  40:</span>    <span class="syntax18">}</span>
<span class="gutter">  41:</span>    <span class="syntax6">print_table</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">1</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">One</span><span class="syntax2"> </span><span class="syntax2">argument</span><span class="syntax2"> </span><span class="syntax2">passed;</span><span class="syntax2"> </span><span class="syntax2">default</span><span class="syntax2"> </span><span class="syntax2">color</span><span class="syntax2"> </span><span class="syntax2">used</span>
<span class="gutter">  42:</span>    <span class="syntax6">print_table</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">10</span><span class="syntax14">&quot;</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">gray</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax1">/*</span><span class="syntax1"> </span><span class="syntax1">Two</span><span class="syntax1"> </span><span class="syntax1">arguments</span><span class="syntax1"> </span><span class="syntax1">passed;</span><span class="syntax1"> </span><span class="syntax1">second</span>
<span class="gutter">  43:</span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1"> </span><span class="syntax1">argument</span><span class="syntax1"> </span><span class="syntax1">overrides</span><span class="syntax1"> </span><span class="syntax1">the</span><span class="syntax1"> </span><span class="syntax1">default</span><span class="syntax1"> </span><span class="syntax1">*/</span>
<span class="gutter">  44:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  45:</span>  <span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span>
<span class="gutter">  46:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  47:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The function <b>print_table()</b> has two parameters. The first must be sent by
the caller and the second has a default value.
</p><p>
The print statement uses a "heredoc". All the text between <b>&lt;&lt;&lt;TABLE_BLOCK</b>
and the ending <b>TABLE_BLOCK</b> at the beginning of a line will be printed to
the browser.
</p><p>
First the print_table() function is called with one argument, the border width
for the table. The function will use the default parameter to set the first table row's
background color. The value of the default parameter must be a constant.
</p><p>
The second time the print_table() function is called with two arguments.
</p></li>
<li><p>
Passing by Reference
</p><p>
When passing a variable by reference (only variables can be passed by reference),
the value being passed can be changed directly, because instead of passing a
copy of the value, you are passing a reference to the orginial variable.
</p><p>
Any changes you make to the variable in the function will change the value in the
original variable. When passing large strings, arrays, or objects, this is a
less expensive operation for PHP than copying all the values onto the parameter list.
</p><p>
If you pass a variable by reference, your function can change it directly,
rather than having to send a return value back that can be assigned to a variable
in the main program.
</p><p>
However, it is dangerous to pass variables by reference, since it allows
modifications of the variable from inside the function that might result in
undesirable side effects to program code outside the function.
</p>
<h4>
Filename: byref.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Pass by Reference<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">yellow</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">arial</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;b</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">colors</span> <span class="syntax18">=</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">red</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">green</span><span class="syntax13">'</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">blue</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">list</span> <span class="syntax18">=</span> <span class="syntax9">print_r</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">colors</span><span class="syntax18">,</span><span class="syntax8">true</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax6">html_tags</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">list</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">list</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax10">$</span><span class="syntax10">string</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">Hello</span><span class="syntax14">,</span><span class="syntax14"> </span><span class="syntax14">world</span><span class="syntax14">!</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax6">html_tags</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">string</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">br</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">string</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax6">html_tags</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">string</span><span class="syntax18">,</span><span class="syntax14">&quot;</span><span class="syntax14">p</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">string</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    
<span class="gutter">  18:</span>    <span class="syntax8">function</span> <span class="syntax6">html_tags</span><span class="syntax18">(</span><span class="syntax18">&amp;</span><span class="syntax10">$</span><span class="syntax10">text</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">tags</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">pre</span><span class="syntax14">&quot;</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  19:</span>      <span class="syntax8">switch</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">tags</span><span class="syntax18">)</span><span class="syntax18">{</span>
<span class="gutterH">  20:</span>        <span class="syntax8">case</span> <span class="syntax13">'</span><span class="syntax13">br</span><span class="syntax13">'</span><span class="syntax18">:</span>
<span class="gutter">  21:</span>          <span class="syntax10">$</span><span class="syntax10">text</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">text</span><span class="syntax14">&lt;</span><span class="syntax10">$</span><span class="syntax10">tags</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  22:</span>          <span class="syntax8">break</span><span class="syntax18">;</span>
<span class="gutter">  23:</span>        <span class="syntax8">case</span> <span class="syntax13">'</span><span class="syntax13">p</span><span class="syntax13">'</span><span class="syntax18">:</span>
<span class="gutter">  24:</span>          <span class="syntax10">$</span><span class="syntax10">text</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax10">$</span><span class="syntax10">tags</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">text</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  25:</span>          <span class="syntax8">break</span><span class="syntax18">;</span>
<span class="gutter">  26:</span>        <span class="syntax8">default</span><span class="syntax18">:</span>
<span class="gutter">  27:</span>          <span class="syntax10">$</span><span class="syntax10">text</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax10">$</span><span class="syntax10">tags</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">text</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax10">$</span><span class="syntax10">tags</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  28:</span>          <span class="syntax8">break</span><span class="syntax18">;</span>
<span class="gutter">  29:</span>      <span class="syntax18">}</span>
<span class="gutterH">  30:</span>    <span class="syntax18">}</span>
<span class="gutter">  31:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  32:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  33:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span>
<span class="gutter">  34:</span></span>
</PRE>
</div>
</small></blockquote>
<p>
1	The output from the built-in print_r() function is a variable, $list. It is a formatted list of the contents of the $colors array.
2	The html_tags() function is called with one argument, $list (the contents of the $colors array). The default is to print the text with <pre> tags.
3	Because the argument, $list, was passed to the function by reference, it was modified in the function. In this example, the HTML <pre> tags were added so that the output would appear on separate lines. See Figure 9.8.
A string is assigned to $string, which will be passed as an argument to the
function, html_tags(). Another argument, "p", is also passed to the function,
causing the string to be printed as a paragraph by prepending the <p> tag.
The string is printed twice to show that the paragraph tag was added.
6	The function html_tags() is defined. It has two parameters: a reference to the text that is being passed, and a default parameter that will set the default tag to a <pre> tag, if the user does not provide a second argument when calling the function. Because the first parameter is a reference, PHP will not make a copy of the value coming into the function, but will create a reference, or alias, so that the original value can be modified within the function. A return statement will not be necessary, because the function has access to the original variable.
7	The switch statement will evaluate the value of $tags and test it against the cases listed below it. The original text passed as the first parameter will be surrounded by the tags selected in the second parameter.
8	The default is to provide an opening and closing tag for the text passed to the function. When the function exits, the original text will have changed to include the selected tags.

Figure 9.8. Passing by reference. Output from Example 9.6.

</p><p>
Dynamic Function Calls
</p><p>
In Chapter 4, "The Building Blocks," we discussed dynamic variables, also called variable variables, where a variable could be aliased by giving it the name of another variable. You can also assign a function name as a string to a variable and then use the variable exactly as you would the function name itself.
</p><p>
Format
</p><p>
function function_name() { statements... ; }
$variable = function_name;
$variable();

</p><p>
Example:
</p><p>
function sayGoodbye(){
   echo "So long.<br />";
}
$bye = "sayGoodbye";   // Assign the function's name to a variable
$bye();  // Call the function using the variable variable
// prints "So long."

</p>
</li>
</ul>
</div>
</body>
</html>

