<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<title>Files and Directories</title>
<link href="../../../css/basic.css" rel="stylesheet" type="text/css">
<script type="text/javascript" language="JavaScript">
<!--
function putSemester() {
    var today=new Date();
    var thisMonth=today.getMonth()+1;
    var thisYear=today.getFullYear();
    if(thisMonth <=6) {
        return "Spring, " + thisYear;
    }
    else {
       return "Fall, " + thisYear;
    }
}//-->
</script>
<style type="text/css">
<!--
    .bgStripes {
        background-image:url(../../../images/Xstripes.gif);
        background-attachment: fixed;
    }
    body {
        background-color:white;
    }
    strong {
        font-family: Arial, Helvetica, sans-serif;
    }
-->
</style>
</head>
<body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);">
<table class="bgStripes" border="0" width="100%">
<tbody>
<tr name="firstRow">
<td valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
<script type="text/javascript">
<!--
    document.write(putSemester());
-->
</script>
</span> <br>
</td>
<td style="text-align: center;"><span style="font-weight: bold; font-size: medium; color: darkblue;">
PHP Web Development with MySQL
</span> </td>
<td align="right" valign="top" width="80"><span style="font-size: x-small; font-weight: bold;">
3 Credits</span> </td>
</tr>
<tr>
<td colspan="3" style="text-align: center;"><span style="font-size: xx-small; font-weight: bold;">
152-166</span> </td>
</tr>
</tbody>
</table>
<!--The heading for the slides --> <br>
<table class="headTable1" border="0">
<tbody>
<tr>
<td width="100"><a href="index.html"><img alt="" src="../../../images/btn_lArrow.gif" border="0"></a><a href="index.html"><img alt="" src="../../../images/btn_upArrow.gif" border="0"></a><a href="files2.html"><img alt="" src="../../../images/btn_rArrow.gif" border="0"></a></td>
<td>Files and Direcories</td>
</tr>
</tbody>
</table>
<br />
<div class="disp1">
<ul class="slidesUl1">
<li><p>
After the browser sends data to the server and PHP processes the information,
a database management system such as MySQL or Oracle will normally store or
retrieve the data.
</p><p>
But PHP might also exchange data from simple text files (also called flat files),
such as HTML templates, spreadsheet (csv) data, the contents of remote Web pages,
or files that contain text that does not need to be stored in a database.
</p><p>
This unit focuses on creating directories and text files for storing and
retrieving data.
</p></li>
<li><p>
File Permissions and Ownership
</p><p>
To open an external file in a PHP program, you first need to determine where the
file is, who owns it, and whether or not you have the proper permission to open it.
</p><p>
If you are opening the file simply to view it, you will need read permission and
if you want to modify it in any way, you will need write permission.
</p><p>
Granting permissions to directories gives users access to the files stored there,
and granting permission to files allows users to read, write, or execute the
individual files.
</p><p>
For obvious security reasons, it is important to be able to control who has
permission to access the files and directories on your Web site.
</p><p>
Because operating systems differ in how they handle permissions, we look at
UNIX/Linux and Windows in the following sections.
</p></li>
<li><p>
UNIX/Linux Permissions
</p></li>
<li><p>
Ownership and Groups
</p><p>
Users are categorized into three classes of users: (1) you, the owner;
(2) the group, a special group of users who can share files without making them
public to everyone; and (3) the others (also called "the world"), everyone who
has an account on the system.
</p><p>
When you create a file, it is automatically owned by you and the group to which
you belong. You can change the owner of a file with the chown command; that is,
if you own it or you are root, the superuser.
</p><p>
Changing the group to which a file belongs is done with the chgrp command.
PHP provides built-in functions of the same name as the UNIX/Linux commands
allowing you to mimic these operating system commands from a PHP script.
</p></li>
<li><p>
Permissions
</p><p>
Permissions are assigned to the three classes of users discussed in the last section.
Each class can be assigned a combination of three types of permissions:
</p>
</li>
</ul>
<blockquote>
<ol type="1">
<li class="row1">
Read</li>
<li class="row0">
Write</li>
<li class="row1">
Execute</li>
</ol>
</blockquote>
<ul class="slidesUl1">
<li>
<p>
The three groups of permissions are set for each of the three classes of users:
</p>
</li>
</ul>
<blockquote>
<ol type="1">
<li class="row1">
You, the user.
</li>
<li class="row0">
The group (the group to which you belong).
</li>
<li class="row1">
The others (anyone else on the system).
</li>
</ol>
</blockquote>
<ul class="slidesUl1">
<li>
<p>
Because a directory is simply a place where files are stored (similar to drawers
in a file cabinet), and a plain file contains the actual text (similar to the
files in the cabinet), the permissions affect directories and plain files
somewhat differently.
</p><p>
For example, if a directory has execute permission, it means you can enter the
directory with the cd command, but if a file has execute permission, the file
can be executed as a script or program.
</p><p>
A directory needs read permission so that you can view the contents of the
directory with ls, whereas read permission on a file allows you to view it or
copy it.
</p><p>
Write permission on a directory allows you to create, move, or remove files from
within the directory (whether or not you own the files), whereas on a file it
means that you can modify it or remove it.
</p><p>
The table below provides a list of how permissions affect files and directories.
</p><p>
Table: Permissions on Files and Directories
</p>
<blockquote>
<table>
<tr>
<td><code><b><u>
Permission</u></b></code></td>
<td><code><b><u>
What It Allows on a Directory</u></b></code></td>
<td><code><b><u>
What It Allows on a File</u></b></code></td>
</tr><tr>
<td><code>
read</code></td>
<td><code>
View its contents (ls).</code></td>
<td><code>
View, copy, print it, and so on.</code></td>
</tr><tr>
<td><code>
write</code></td>
<td><code>
Create or remove files in it.</code></td>
<td><code>
Modify, rename, or remove it.</code></td>
</tr><tr>
<td><code>
execute</code></td>
<td><code>
cd into it.</code></td>
<td><code>
Execute the file as script or program.</code></td>
</tr>
</table>
</blockquote>
</li>
<li><p>
Changing Permissions at the Command Line
</p><p>
Changing permissions of files and directories can be done at the command line
or from inside a PHP script.
</p><p>
We start with the <b>chmod</b> command at the command line. Keep in mind that if the
PHP script is being executed by the server, the permissions are limited to what
a server can do, whereas if you are running the script at the command line,
the program, permissions will apply to what you, the user, can do.
</p><p>
Because ownership and permissions are different for the server than for the user,
<b>chmod</b> and <b>chgrp</b> might behave differently depending on what process
is running the script.
</p><p>
There are two different ways to assign permissions to a file at the command line
— one is text-based and the other numeric-based.
</p><p>
Because PHP does not provide functions to mimic the behavior of the text-based
method, we use the numeric-based method in the following examples.
</p><p>
The UNIX/Linux <b>chmod</b> command takes two arguments: the mode (a number
between 0 and 7) for each permission level (owner, group, others) followed by
the name of the directory or files that will have their permissions changed.
</p><p>
Format:
</p>
<blockquote><code>
chmod mode file(s)<br>
chmod mode directory<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
chmod 755 fileX<br>
</code></blockquote>
<p>
The three sets of permissions for all classes of users (owner, group, others)
can be represented by different numeric values. The three numeric values combined
represent the complete numeric permission mode.
</p><p>
If a user is assigned 7, a group is assigned 5, and the others are assigned 5,
the combined value is 755.
</p><p>
The table below displays the numeric values that will represent each class of users.
By adding the values for the owner, group, and others, the resulting number is
the permission mode.
</p><p>
Read is represented by 4, write by 2, execute by 1, and none of the permissions
is 0. If you want the user to have read, write, and execute, add up the first
column in The table, and you get 700.
</p><p>
Now if you only want the group to have read and execute, then add up 040 + 010
in the second column, and you get 050, and if you want the same for everybody
else, add up the numbers in the third column, 004 + 001, to get 005.
</p><p>
Table: Numeric Values for File Permissions for a Class of Users
</p>
<blockquote>
<table>
<tr>
<td><code>
&nbsp;</code></td>
<td><code><b><u>
Owner</u></b>&nbsp;</code></td>
<td><code><b><u>
Group</u></b>&nbsp;</code></td>
<td><code><b><u>
Others</u></b></code></td>
</tr><tr>
<td><code>
Read</code></td>
<td><code>
400</code></td>
<td><code>
040</code></td>
<td><code>
004</code></td>
</tr><tr>
<td><code>
Write</code></td>
<td><code>
200</code></td>
<td><code>
020</code></td>
<td><code>
002</code></td>
</tr><tr>
<td><code>
Execute&nbsp;</code></td>
<td><code>
100</code></td>
<td><code>
010</code></td>
<td><code>
001</code></td>
</tr>
</table>
</blockquote>
<p>
Now combine all three sets of permissions: 700 + 050 + 005 and, presto! you get
755 as your permission mode.
</p><p>
Some common permission modes are:
</p>
<code><small>
777	Owner, group, and others have read, write, or execute (-rwxrwxrwx)<br>
755	Owner has read, write, and execute; others have only read and execute (-rwxr-xr-x)<br>
711	Owner has read, write, and execute; others have only execute (-rwx--x--x)<br>
700	Owner has read, write, and execute; others have nothing (-rwx------)<br>
644	Owner has read and write; others have only read (-rw-r--r--)<br>
</small></code>
<p>
If you type: <b>ls -l</b> at the UNIX prompt, file permissions are represented
as three groups. A leading dash means you are looking at a file, any other
dashes between the <b>rwx</b> means the permission is turned off.
</p><p>
For example: <b>r-x</b> means <b>w</b> is turned off.
</p><p>
Example:
</p>
<blockquote><code>
$ chmod 755 myfolder<br><br>
$ chmod 777 *<br><br>
$ chmod 644 fileX<br><br>
</code></blockquote>
<p>
First line, grant read, write, and execute to the owner, read and execute to
the group and the others (world).
</p><p>
Second line, grant everybody read, write, and execute on all files and in the
current working directory.
</p><p>
Third line, user gets read and write, group and others get read.
</p></li>
<li><p>
Windows Permissions
</p><p>
Originally, DOS was not intended to be a multiuser, networked operating system,
whereas UNIX was. Consequently, the way that file permissions are handled is
quite different between UNIX and Windows.
</p><p>
To see the permissions on a Windows file, you can right-click the file and
choose the Properties menu item.
</p><p>
Windows has four attributes to describe a file (see table below):
</p>
</li>
</ul>
<blockquote>
<ol type="1">
<li class="row1">
Read-only</li>
<li class="row0">
System</li>
<li class="row1">
Hidden</li>
<li class="row0">
Archive</li>
</ol>
</blockquote>
<ul class="slidesUl1">
<li>
<p>
Table: File Attributes for Windows
</p>
<table>
<tr>
<td><code><b><u>
Attribute</u></b>&nbsp;</code></td>
<td><code><b><u>
What It Means</u></b></code></td>
</tr><tr>
<td><code>
Read-only</code></td>
<td><code>
The file's contents can be read by a user but cannot be written to.</code></td>
</tr><tr>
<td><code>
System</code></td>
<td><code>
This file has a specific purpose required by the operating system.</code></td>
</tr><tr>
<td><code>
Hidden</code></td>
<td><code>
This file has been marked to be invisible to the user, unless the<br>
operating system is explicitly set to show it.</code></td>
</tr><tr>
<td><code>
Archive</code></td>
<td><code>
This file has been touched since the last DOS backup was performed on it.</code></td>
</tr>
</table>
<p>
There is no attribute to specify that a file is executable. DOS and Windows NT
file systems identify executable files by giving them the extensions: .exe, .com,
.cmd, or .bat
</p><p>
You can also display and change the attributes of a file from the command line
with the DOS <b>attrib</b> command by going to the Start menu and clicking Run.
</p><p>
In the <b>cmd.exe</b> window type the following and you will see a window
displaying the file attributes.
</p>
<blockquote><code>
help attrib<br>
</code></blockquote>
</li>
<li><p>
The Web Server, PHP, and Permissions
</p><p>
Like all processes running in a UNIX environment, PHP programs run on behalf
of a particular user. If you run a PHP script from the command line (for instance,
as a shell script), it will run with the permissions set for you, the user,
who started the script.
</p><p>
More typically, however, PHP scripts will be executed by your Web server.
Under most system configurations, Web servers run as a user (such as nobody) that,
for security reasons, has minimal permissions to access the file system
(usually read and execute, but not write permission).
</p><p>
The reason for limiting access is to keep potential hackers from using your
server as a gateway to write whatever they please into an open directory.
</p><p>
Because PHP is being executed by the server, it too will have the same limited
permissions, thereby restricting its ability to work with files and directories.
</p><p>
The solution is to create directories outside the Web directory and put the files
PHP will be working with there. If the directory has the same group permissions
as the locally running PHP program, others will not have access to those files.
</p><p>
Example:
</p>
<blockquote><code><small>
$ ps -ef | grep apache<br><br>
nobody 27874&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
root&nbsp;&nbsp;&nbsp;&nbsp; 352&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp; 0&nbsp;&nbsp;
Jun 07 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0:02 /usr/apache/bin/httpd<br>
nobody 29038&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
nobody 28987&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
nobody 27877&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
nobody 27876&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
nobody 27873&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
nobody 27875&nbsp;&nbsp; 352&nbsp; 0&nbsp;&nbsp; Aug 12 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0:00 /usr/apache/bin/httpd<br>
</small></code></blockquote>
<p>
When Apache (httpd) is started as root, it opens the privileged ports (80, 443 (SSL)),
opens the log files, and then stops acting as the potentially dangerous root and
becomes nobody (or another nonprivileged user as specified in httpd.conf).
</p><p>
This example shows that user nobody is running the Apache server daemon.
(The system is a UNIX system.)
</p></li>
<li><p>
PHP Built-In Functions
</p><p>
PHP provides three functions that correspond to the UNIX commands discussed in
the previous section. They are the <b>chown()</b>, <b>chgrp()</b>, and <b>chmod()</b> functions.
</p></li>
<li><p>
The chown() Function
</p><p>
Just like the chown command, the <b>chown()</b> function changes the ownership
of a file, provided the PHP script performing this operation is run by the owner
or by the superuser root.
</p><p>
Format:
</p>
<blockquote><code>
bool chown(filename, newuser);<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$success = chown('myfile','john');<br>
</code></blockquote>
<p>
"filename" (above) refers to the file that is being modified, and "newuser"
is the username of the new owner. When executed, this function returns a boolean
value, true or false, which indicates whether PHP was successful in changing the
owner of the file.
</p></li>
<li><p>
The chgrp() Function
</p><p>
The PHP <b>chgrp()</b> function, like the chgrp command, is used to change
group membership.
</p><p>
To change the group to which a file belongs, the user must be a member of the
new group and the file must reside locally.
</p><p>
The function takes two arguments:
the name of a file, and the group to which it will be assigned.
The group can be represented either by its name or by its group ID, a numeric value.
</p><p>
Format:
</p>
<blockquote><code>
bool chgrp(filename, newgroup);<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$result = chgrp('myfile','admin');<br>
$result = chgrp('myfile', 0502);<br>
</code></blockquote>
</li>
<li><p>
The chmod() Function
</p><p>
PHP scripts are often embedded in HTML documents and these files are placed on
the Web server and executed by the serverside software.
</p><p>
The <b>chmod()</b> function changes file permissions to allow the serverside
software to read, write, and execute data in the file.
</p><p>
The owner of the currently running PHP process must also be the owner of the
file to change permissions and the file cannot be on a remote system.
</p><p>
The chmod() function takes the filename or full path and filename as its first
argument and the octal value for the permission mode as its second value.
It returns TRUE if successful in making the change; otherwise, it returns FALSE.
</p><p>
Format:
</p>
<blockquote><code>
bool chmod('filename', octal_mode );<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$result = chmod('/dir/fileX', 0755);<br>
</code></blockquote>
<p>
Notice that the mode is set as an octal value, a number with a leading zero.
If you are prone to forgetting the leading zero, you can use the PHP built-in
function <b>octdec()</b> to assure the number you select is converted from octal to
decimal as shown here:
</p>
<blockquote><code>
$result = chmod('some_filename.ext', octdec($mode));<br>
$result = chmod('fileX', octdec(644));<br>
</code></blockquote>
</li>
<li><p>
The Filehandle
</p><p>
In a PHP script, you cannot access a file directly by the name it was given when
it was created (i.e., the name that your operating system uses to identify it).
</p><p>
Instead you have to use a filehandle. A filehandle, also called a file pointer,
binds the named file to a "stream."
</p><p>
Streams were introduced with PHP 4.3.0 to represent a way in which to abstractly
deal with all kinds of files (local, compressed, and remote) and the functions
they all share, such as reading, writing, appending, or seeking to a certain
location within the file.
</p><p>
For a complete discussion on streams, see:
<a href="http://us3.php.net/streams">http://us3.php.net/streams</a>
</p><p>
Once the file is opened, the filehandle is used to perform a number of operations
on the file. Of course, to access a file, the PHP program must have permission
to do so.
</p></li>
<li><p>
Opening a File
</p></li>
<li><p>
The fopen() Function
</p><p>
To create the filehandle, PHP provides the <b>fopen()</b> function. This function
opens a file and returns a filehandle, and if it fails, returns false.
</p><p>
It normally takes two arguments: a filename and a mode, the mode being how you
want to deal with the file; that is, do you want to open it for reading, writing,
appending, and so on?
</p><p>
A third optional argument, if set to TRUE, tells PHP to check the PHP "include path".
The PHP include path is a list of directories where the require() and include()
functions will look for files. It is defined in the php.ini file.
</p><p>
The filename argument is either a file or a URL and can be referenced by a full
path name, a relative path name, or simply by the name of the file if it resides
in the same directory or folder as the PHP script that is trying to open it.
</p><p>
If specifying a path, forward slashes can be used as the separator between path
elements with both UNIX and Windows. If, however, you are using Windows and want
to use backslashes in the path, then the backslash must be escaped if you enclose
the path in double quotes:
</p>
<blockquote><code>
"C:\\dir\\file.txt"<br>
</code></blockquote>
<p>
But not if you enclose it in single quotes:
</p>
<blockquote><code>
'C:\dir\file.txt'<br>
</code></blockquote>
<p>
It is also possible to bind the filehandle to a URL by prefixing the name of the
file with either: <b>http://</b> or <b>ftp://</b>
</p><p>
Note: You may experience problems using PHP with URLs on some versions of Red Hat Linux.
</p><p>
Format:
</p>
<blockquote><code>
filehandle = fopen('filename', mode, [ 1 or TRUE]));<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$fh = fopen('../myfile','a'); // Open for append<br>
$fh = fopen('http://www.index.php/','r'); // Open for read<br>
$handle = fopen('/Documents and Setting/Owner/Desktop/stuff/myfile','r');<br>
$handle = fopen('myfile','r+'); // Read and write<br>
$handle = fopen("myfile","w"); // Write<br>
$handle = fopen("../myfile","rb");        // Read binary<br>
$handle = fopen('http://www.hostname.com/','r');<br>
$handle = fopen('ftp://www.hostname.com/','r');<br>
</code></blockquote>
</li>
<li><p>
The Mode and Permissions
</p><p>
The mode specifies what kind of operation you want to perform on the file.
For example, do you want to read its contents, write to it, read and write,
and so on, and this depends on who owns the file and what permissions are
assigned to the file. The modes are shown in the table.
</p><p>
Table: Modes for fopen()
</p>
<table>
<tr>
<td><code><b><u>
Mode</u></b>&nbsp;</code></td>
<td><code><b><u>
Name</u></b></code></td>
<td><code><b><u>
Description</u></b></code></td>
</tr><tr>
<td><code>
r</code></td>
<td><code>
Read</code></td>
<td><code>
Opens only for reading; starts at the beginning of the file.</code></td>
</tr><tr>
<td><code>
r+</code></td>
<td><code>
Read</code></td>
<td><code>
Opens for reading and writing; starts from the beginning of the file.</code></td>
</tr><tr>
<td><code>
w</code></td>
<td><code>
Write</code></td>
<td><code>
Opens only for writing; starts at the beginning of the file. If the file exists,
truncates it; if not, creates it.</code></td>
</tr><tr>
<td><code>
w+</code></td>
<td><code>
Write</code></td>
<td><code>
Opens for reading and writing; starts at the beginning of the file.
If the file exists, truncates it. If the file does not exist, attempts to
create it.</code></td>
</tr><tr>
<td><code>
a</code></td>
<td><code>
Append</code></td>
<td><code>
Opens for writing only; appends at the end of the file. If the file does not exist,
attempts to create it.</code></td>
</tr><tr>
<td><code>
a+</code></td>
<td><code>
Append</code></td>
<td><code>
Opens for reading and writing; appends at the end of the file. If the file does
not exist, attempts to create it.</code></td>
</tr><tr>
<td><code>
x</code></td>
<td><code>
Cautious&nbsp;<br>
write&nbsp;</code></td>
<td><code>
Creates and opens a local file for writing only; starts at the beginning of the
file. If the file already exists, fopen() returns false, and PHP sends a warning.
If the file does not exist, attempts to create it (PHP 4.3.2+).</code></td>
</tr><tr>
<td><code>
x+</code></td>
<td><code>
Cautious&nbsp;<br>
write</code></td>
<td><code>
Creates and opens local files for both reading and writing; starts at the
beginning of the file. If the file already exists, fopen() returns false and
PHP sends a warning. If the file does not exist, attempts to create it.</code></td>
</tr><tr>
<td><code>
b</code></td>
<td><code>&nbsp;</code></td>
<td><code>
The default mode, used with one of the other modes for file systems that
differentiate between binary and text files. Necessary with Windows, but not
with UNIX or Macintosh.</code></td>
</tr><tr>
<td><code>
t</code></td>
<td><code>&nbsp;</code></td>
<td><code>
Used with one of the other modes to represent Windows text files. Translates
end of line character \n to \r\n. Used with the b mode for portability.</code></td>
</tr>
</table>
<p>
The table below lists some of the most useful PHP built-in functions provided
to work with files. We cover most of these functions in this unit.
</p><p>
Table: Some Useful File Functions
</p>
<table>
<tr>
<td><code><b><u>
Function Name</u></b></code></td>
<td><code><b><u>
What It Does</u></b></code></td>
<td><code><b><u>
Prototype</u></b></code></td>
</tr><tr>
<td><code>
fclose()</code></td>
<td><code>
Closes a file or URL</code></td>
<td><code>
fclose(fh);</code></td>
</tr><tr>
<td><code>
feof()</code></td>
<td><code>
Tests for end-of-file on a file pointer</code></td>
<td><code>
bool feof(fh);</code></td>
</tr><tr>
<td><code>
fflush()</code></td>
<td><code>
Flushes output to a file</code></td>
<td><code>
fflush(fh);</code></td>
</tr><tr>
<td><code>
fgetc()</code></td>
<td><code>
Gets a character from a file</code></td>
<td><code>
string fgetc(fh);</code></td>
</tr><tr>
<td><code>
fgets()</code></td>
<td><code>
Gets a line from a file</code></td>
<td><code>
string fgets(fh);</code></td>
</tr><tr>
<td><code>
fgetscsv()</code></td>
<td><code>
Gets a line from a file, parses for CSV<br>
fields (comma-separated value file format)&nbsp;</code></td>
<td><code>
array fgetscsv(fh);</code></td>
</tr><tr>
<td><code>
fgetss()</code></td>
<td><code>
Gets a line from a file, strips out HTML<br>
and PHP tags</code></td>
<td><code>
string fgetss(fh);</code></td>
</tr><tr>
<td><code>
file()</code></td>
<td><code>
Reads entire file into an array</code></td>
<td><code>
array file(filename);</code></td>
</tr><tr>
<td><code>
file_exists()</code></td>
<td><code>
Checks if a file (or directory) exists</code></td>
<td><code>
bool file_exists(filename);</code></td>
</tr><tr>
<td><code>
file_get_contents()&nbsp;</code></td>
<td><code>
Reads an entire file into a string</code></td>
<td><code>
string file_get_contents(fh)</code></td>
</tr><tr>
<td><code>
fopen()</code></td>
<td><code>
Opens a file or URL</code></td>
<td><code>
fh = fopen(mode, filename);</code></td>
</tr>
</table>
</li>
<li><p>
Opening a File for Reading
</p><p>
Four PHP functions are used for reading text from a file: <b>fgets()</b>, <b>fgetc()</b>,
<b>fread()</b>, and <b>file_get_contents()</b>
</p><p>
Before opening a file you need to determine whether or not the file exists and
is accessible for reading. The <b>file_exists()</b> function checks to see if
the file exists, and the <b>is_readable()</b> function will return true if a
file exists and has read permission.
</p><p>
When a file is initially opened for reading, the internal file pointer is placed
at the beginning of the file.
</p><p>
When a read operation is performed on a file, the program keeps track of where
it is in the file, by repositioning the file pointer to the next byte after the
last read.
</p><p>
For example, if using the <b>fgets()</b> function, after a line is read from the file,
the file pointer positioned at the beginning of the next line, unless the end-of-file
has already been reached.
</p><p>
The <b>feof()</b> function can be used to determine when the end of the file has
been reached.
</p><p>
If you do not have read permission on the file, you will get an error.
</p></li>
<li><p>
The fgets() Function—Reading Lines from a File
</p><p>
The <b>fgets()</b> function takes a filehandle as its argument and returns a
line of text from the file. It can take a third optional argument,
the length that will read up to (length - 1) bytes (characters) from the file,
the default being 1042 bytes.
</p><p>
As of PHP 4.3, omitting the length will cause the function to keep reading from
the file stream until it reaches the end of the line. If the majority of the
lines in the file are all larger than 8 KB, it is more resource efficient for
your script to specify the maximum line length (PHP manual).
</p><p>
Remember, the end of line is different on Windows and UNIX.
</p><p>
Format:
</p>
<blockquote><code>
string = fgets(filehandle, [ length ] );<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$line = fgets('myfile');<br>
$line = fgets('myfile', 4096);<br>
</code></blockquote>
<h4>
Filename: openFile.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Open a File<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">$filename</span><span class="syntax2"> </span><span class="syntax2">=</span><span class="syntax2"> </span><span class="syntax2">&quot;data.txt&quot;;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax14">[</span><span class="syntax14">DOCUMENT_ROOT</span><span class="syntax14">]</span><span class="syntax14">/</span><span class="syntax14">files</span><span class="syntax14">/</span><span class="syntax14">data</span><span class="syntax14">.</span><span class="syntax14">txt</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Check</span><span class="syntax2"> </span><span class="syntax2">for</span><span class="syntax2"> </span><span class="syntax2">file</span><span class="syntax2"> </span><span class="syntax2">existence</span>
<span class="gutter">  11:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax9">file_exists</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>  
<span class="gutter">  12:</span>        <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">No</span><span class="syntax14"> </span><span class="syntax14">such</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14"> </span><span class="syntax14">as</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>      <span class="syntax8">exit</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax18">}</span>
<span class="gutterH">  15:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Open</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">file</span><span class="syntax2"> </span><span class="syntax2">for</span><span class="syntax2"> </span><span class="syntax2">reading</span>
<span class="gutter">  16:</span>    <span class="syntax10">$</span><span class="syntax10">fh</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">r</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Get</span><span class="syntax2"> </span><span class="syntax2">text</span><span class="syntax2"> </span><span class="syntax2">from</span><span class="syntax2"> </span><span class="syntax2">file,</span><span class="syntax2"> </span><span class="syntax2">line</span><span class="syntax2"> </span><span class="syntax2">by</span><span class="syntax2"> </span><span class="syntax2">line</span>
<span class="gutter">  18:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax18">!</span><span class="syntax9">feof</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  19:</span>      <span class="syntax10">$</span><span class="syntax10">line_of_text</span> <span class="syntax18">=</span> <span class="syntax9">fgets</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>   
<span class="gutterH">  20:</span>      <span class="syntax8">print</span> <span class="syntax10">$</span><span class="syntax10">line_of_text</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>    <span class="syntax18">}</span>
<span class="gutter">  22:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Close</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">file</span>
<span class="gutter">  23:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>  
<span class="gutter">  24:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  25:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  26:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  27:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The variable, $filename, on line 8 is assigned the path to the file <b>/files/data.txt</b>
under the server's document root ($_SERVER[DOCUMENT]).
</p><p>
The file_exists() function on line 11 will return true if $filename exists,
and the program exits if the file does not exist.
</p><p>
The fopen() function on line 16 will open the file for reading and return a
filehandle, assigned to $fh. From this point on, we will access the file through this handle.
</p><p>
The while loop is entered on line 18. The expression tests to see if the end of
file has not been reached. The loop will not end until we have reached
the end of the file; that is, read in all the lines.
</p><p>
The fgets() function on line 19 reads one line from the file using the newline
character as the end of line marker. As soon as a line is read, the file pointer
will move to the next line.
</p><p>
Each time a line is read, it will be assigned to the variable $line_of_text.
</p><p>
A line is printed to the browser on line 20.
</p><p>
After all the lines have been read, and we are finished using the file,
it will be closed on line 23.
</p></li>
<li><p>
The fgetss() Function—Stripping HTML Tags from a File
</p><p>
The <b>fgetss()</b> function is just like fgets() but strips out HTML and PHP
tags from a file as it reads from the file. The optional third parameter can be
used to specify tags that should not be stripped.
</p><p>
This is the same as <b>strip_tags()</b> except strip_tags removes tags from a
string rather than a file.
</p><p>
Format:
</p>
<code><small>
string fgetss ( resource handle [, int length [, string allowable_tags]] )<br>
</small></code>
<p>
Example:
</p>
<blockquote><code>
fopen($fh,'myfile.html');<br>
$line = fgetss($fh);<br>
</code></blockquote>
<h4>
Filename: fgetss.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Read HTML File<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax13">'</span><span class="syntax13">myForm.html</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">fh</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">r</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">while</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax9">feof</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  11:</span>      <span class="syntax10">$</span><span class="syntax10">content</span> <span class="syntax18">=</span> <span class="syntax9">fgetss</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>      <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">content</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax18">}</span>
<span class="gutter">  14:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  16:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  17:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  18:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<h4>
Filename: myForm.html - The HTML File Before fgetss()
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;</span><span class="syntax17">html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span><span class="syntax17">&lt;</span><span class="syntax17">head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span><span class="syntax17">&lt;</span><span class="syntax17">title</span><span class="syntax17">&gt;</span>My HTML Form<span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span><span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span><span class="syntax17">&lt;</span><span class="syntax17">body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">lightblue</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;</span><span class="syntax17">font</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">+1</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span><span class="syntax17">&lt;</span><span class="syntax17">form</span><span class="syntax17"> </span><span class="syntax17">action</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">myScript.php</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">method</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">GET</span><span class="syntax13">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span><span class="syntax17">&lt;</span><span class="syntax17">p</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>Please enter your salary: <span class="syntax17">&lt;</span><span class="syntax17">br</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutter">   9:</span><span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">text</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax17">30</span><span class="syntax17"> </span><span class="syntax17">name</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">salary</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutterH">  10:</span><span class="syntax17">&lt;</span><span class="syntax17">p</span><span class="syntax17">&gt;</span>
<span class="gutter">  11:</span>Please enter your age: <span class="syntax17">&lt;</span><span class="syntax17">br</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutter">  12:</span><span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">text</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">size</span><span class="syntax18">=</span><span class="syntax17">10</span><span class="syntax17"> </span><span class="syntax17">name</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">age</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutter">  13:</span><span class="syntax17">&lt;</span><span class="syntax17">p</span><span class="syntax17">&gt;</span>
<span class="gutter">  14:</span><span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax17">submit</span><span class="syntax17"> </span><span class="syntax17">value</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">submit</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutterH">  15:</span><span class="syntax17">&lt;</span><span class="syntax17">input</span><span class="syntax17"> </span><span class="syntax17">type</span><span class="syntax18">=</span><span class="syntax17">reset</span><span class="syntax17"> </span><span class="syntax17">value</span><span class="syntax18">=</span><span class="syntax13">&quot;</span><span class="syntax13">clear</span><span class="syntax13">&quot;</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutter">  16:</span><span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">form</span><span class="syntax17">&gt;</span>
<span class="gutter">  17:</span><span class="syntax17">&lt;</span><span class="syntax17">hr</span><span class="syntax17"> </span><span class="syntax17">/</span><span class="syntax17">&gt;</span>
<span class="gutter">  18:</span><span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">body</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span><span class="syntax17">&lt;</span><span class="syntax17">/</span><span class="syntax17">html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The fgetss() function strips out all HTML and PHP tags from the file before
storing each line in $content.
</p></li>
<li><p>
The fgetc() Function—Reading Characters from a File
</p><p>
The <b>fgetc()</b> function reads and returns one character at a time from an
open file. It returns FALSE when the end of file is reached.
</p><p>
Format:
</p>
<blockquote><code>
character = fgetc(filehandle);<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$char = fgetc($fh);<br>
</code></blockquote>
<h4>
Filename: fgetc.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Read a Character at a Time<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   7:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/data.txt</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax9">file_exists</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   9:</span>      <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">No</span><span class="syntax14"> </span><span class="syntax14">such</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14"> </span><span class="syntax14">as</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>      <span class="syntax8">exit</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax18">}</span>
<span class="gutter">  12:</span>    <span class="syntax10">$</span><span class="syntax10">fh</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">r</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax18">!</span><span class="syntax9">feof</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  14:</span>      <span class="syntax10">$</span><span class="syntax10">char</span> <span class="syntax18">=</span> <span class="syntax9">fgetc</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>      <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">char</span> <span class="syntax18">=</span><span class="syntax18">=</span> <span class="syntax14">&quot;</span><span class="syntax14">\n</span><span class="syntax14">&quot;</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  16:</span>        <span class="syntax10">$</span><span class="syntax10">char</span> <span class="syntax18">=</span> <span class="syntax13">'</span><span class="syntax13">&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>      <span class="syntax18">}</span>
<span class="gutter">  18:</span>      <span class="syntax8">print</span> <span class="syntax10">$</span><span class="syntax10">char</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>    <span class="syntax18">}</span>
<span class="gutterH">  20:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  22:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  23:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The path and filename assigned to $filename are relative to the document root of the server.
If the specified file does not exist, the program will exit on line 10.
</p><p>
The file is opened for reading and a filehandle is returned to $fh on line 12.
</p><p>
For each pass through the loop, the fgetc() function reads one character from
the file specified by $fh, and assigns that character to $char. The function
will return false when the end of file has been reached.
</p><p>
If the character read by fgetc() is a newline, it is replaced by a string containing
an HTML linebreak.
</p></li>
<li><p>
The fread() Function - Reading Chunks from a File
</p><p>
The <b>fread()</b> function reads from a file a specified number of characters,
treating the file as a simple binary file consisting of bytes without concern
for end of line or other special characters.
</p><p>
On systems that differentiate between binary and text files such as Windows,
the file should be opened with "b" mode by fopen()).
</p><p>
If you are reading the entire file, the <b>filesize()</b> function returns the
number of bytes (characters) in the file.
</p><p>
In the following example, a chunk of text will be read from a file.
</p><p>
Format:
</p>
<blockquote><code><small>
bytes_read = fread(filehandle, number_of_bytes);<br>
</small></code></blockquote>
<p>
Example:
</p>
<blockquote><code>
$contents = fread($myFile, 4096);<br>
</code></blockquote>
<h4>
Filename: fread.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Read a File<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   7:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/data.txt</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">filehandle</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">rb</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">contents</span> <span class="syntax18">=</span> <span class="syntax9">fread</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">,</span> <span class="syntax9">filesize</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">contents</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  13:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  14:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The fread() function reads the number of bytes from a file (returned by filesize())
and stores the bytes in $contents.
</p><p>
The fread() function reads the specified number of bytes, if it can, and does not
concern itself with the end-of-line character. All characters are just bytes.
</p><p>
It will stop reading when it reaches the specified file size or end of file,
whichever come first.
</p><p>
The contents of the file are printed using &lt;pre&gt; tags so the line feeds work.
That is, the number of bytes selected when the file was opened are printed.
</p><p>
In the following example a chunk of binary data is read from a file,
in this example, an image file.
</p>
<h4>
Filename: freadImage.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;?php</span>
<span class="gutter">   2:</span>  <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/pictures/pizza-chef.jpg</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   3:</span>  <span class="syntax10">$</span><span class="syntax10">handle</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">rb</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   4:</span>  <span class="syntax10">$</span><span class="syntax10">contents</span> <span class="syntax18">=</span> <span class="syntax9">fread</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">handle</span><span class="syntax18">,</span> <span class="syntax9">filesize</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">   5:</span>
<span class="gutter">   6:</span>  <span class="syntax9">header</span><span class="syntax18">(</span><span class="syntax14">&quot;</span><span class="syntax14">Content</span><span class="syntax14">-</span><span class="syntax14">type</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax14">image</span><span class="syntax14">/</span><span class="syntax14">jpeg</span><span class="syntax14">&quot;</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   7:</span>  <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">contents</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>
<span class="gutter">   9:</span>  <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">handle</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span><span class="syntax17">?&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The variable $filename is assigned the full path of an image file, "pizza-chef.jpg".
</p><p>
Because the file is an image file, it is a binary file and we must specify the "b"
(for binary) mode on Windows.
</p><p>
The entire contents from the image file, specified by <b>filesize()</b>, are assigned
to $contents. This data is binary and not human readable.
</p><p>
To view the image in a browser, we need to send the <b>header()</b> function with the
"Content-type: image/jpeg" as an HTTP header to the browser.
</p><p>
Make sure the header() function is called before any other output is displayed
to the browser or it will fail.
</p><p>
The image is displayed on the browser and the filehandle is closed.
</p></li>
<li><p>
Positioning the File Pointer
</p><p>
If you have already read all the lines from a file, you are at the end of the file,
meaning the file pointer is at the end of the file.
</p><p>
If you want to go back to the beginning of the file, one way is to close the file
and then reopen it. Another way is to use the <b>fseek()</b> function.
</p><p>
The fseek() function allows you to randomly access a file by moving to a
specified byte (not line) position within the file. On success, seek returns 0;
otherwise, it returns –1. (Seeking past EOF is not considered an error.)
</p></li>
<li><p>
The fseek() Function
</p><p>
The seek() function sets a postion in a file, where the first byte is position 0.
Positions are:
</p>
<code><small>
SEEK_SET = Beginning of the file, the default position.<br><br>
SEEK_CUR = Current position in the file; use a negative or positive offset.<br><br>
SEEK_END = End of the file; use a negative offset.<br><br>
</small></code>
<p>
Format:
</p>
<blockquote><code><small>
int fseek(filehandle, byteoffset, position);<br>
</small></code></blockquote>
<p>
Example:
</p>
<code><small>
fseek($fh, 0, SEEK_SET); // Start at the beginning of the file, byte 0<br>
</small></code>
<p>
The "byteoffset" is the number of bytes from the file "position". A positive
byteoffset moves the position forward in the file; a negative byteoffset moves
the position backwards in the file.
</p><p>
If using a negative byteoffset, you would not want to start at the beginning of the
file, but somewhere in the middle or from the end of the file.
</p></li>
<li><p>
The rewind() Function
</p><p>
The <b>rewind()</b> function moves the file back to the beginning of the file,
the same as fseek(filehandle, 0, SEEK_SET).
</p><p>
It takes a filehandle as its argument and returns true on success and false on failure.
</p><p>
Format:
</p>
<blockquote><code><small>
bool rewind ( resource handle )<br>
</small></code></blockquote>
<p>
Example:
</p>
<code><small>
rewind($filehandle) ; // Go back to the beginning of the file<br>
</small></code>
<h4>
Filename: fseek.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>fseek and fread<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   7:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/data.txt</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">filehandle</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">r</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">total_bytes</span> <span class="syntax18">=</span> <span class="syntax9">filesize</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">contents</span> <span class="syntax18">=</span> <span class="syntax9">fread</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">total_bytes</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Go</span><span class="syntax2"> </span><span class="syntax2">back</span><span class="syntax2"> </span><span class="syntax2">to</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">beginning</span><span class="syntax2"> </span><span class="syntax2">of</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">file</span>
<span class="gutter">  12:</span>    <span class="syntax9">fseek</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">,</span> <span class="syntax5">0</span><span class="syntax18">)</span><span class="syntax18">;</span> 
<span class="gutter">  13:</span>    <span class="syntax10">$</span><span class="syntax10">contents</span> <span class="syntax18">=</span> <span class="syntax9">fread</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">total_bytes</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">Reading</span><span class="syntax14"> </span><span class="syntax14">from</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">beginning</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span>
<span class="gutterH">  15:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">contents</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax9">fseek</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">,</span> <span class="syntax18">-</span><span class="syntax5">10</span><span class="syntax18">,</span> SEEK_END<span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  17:</span>    <span class="syntax10">$</span><span class="syntax10">contents</span> <span class="syntax18">=</span> <span class="syntax9">fread</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">total_bytes</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">Reading</span><span class="syntax14"> </span><span class="syntax14">from</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">end</span><span class="syntax14"> </span><span class="syntax14">of</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14">:</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span>
<span class="gutter">  19:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">contents</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  20:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filehandle</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  22:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  23:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The filesize() function returns the number of bytes in the entire file.
The fread() function will read $total_bytes from the filehandle and return the
data to $contents. After this read operation, the internal read pointer will be
at the end of the file.
</p><p>
The first fseek() positions the read pointer at the beginning of the file
(the default position), at byte 0, the first character.
You can can also use the built-in rewind() function to start back at the beginning
of the file.
</p><p>
The fread() function will again read in the whole file, specified by $total_bytes,
and return the the data and store it in $contents.
</p><p>
The second time the fseek() function will go to the end of the file, SEEK_END,
and back up 10 bytes. The next read operation will start at that position.
</p><p>
The last fread() function will read until it reaches $total_bytes or end of file,
starting at the position set by fseek() on line 16; that is, -10 bytes from the
end of the file.
</p></li>
<li><p>
The ftell() Function - Finding the Current Position in a File
</p><p>
If you have read some data from a file and want to keep track of where you were
in the file when you stopped reading, the <b>ftell()</b> function will return
the current byte position, the number of bytes from the beginning of the file,
and where the next read operation will start.
</p><p>
This can be used in conjunction with the seek() function to return to the correct
position in the file.
</p><p>
Note: If you are using text mode, the carriage return and linefeed translation
will be part of the byte count.
</p><p>
Format:
</p>
<blockquote><code>
int ftell ( resource handle )<br>
</code></blockquote>
<p>
Example:
</p>
<blockquote><code><small>
$filehandle = fopen('myfile','r');<br>
$contents = fgets($filehandle, 1024);<br>
// Current read postion in bytes, starting at byte 1024<br>
echo ftell($filehandle);<br>
</small></code></blockquote>
<h4>
Filename: ftell.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The ftell() Function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Marking a Position in a File<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;pre</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/data.txt</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax9">file_exists</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  11:</span>      <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">No</span><span class="syntax14"> </span><span class="syntax14">such</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14"> </span><span class="syntax14">as</span><span class="syntax14">:</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>      <span class="syntax8">exit</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  13:</span>    <span class="syntax18">}</span>
<span class="gutter">  14:</span>    <span class="syntax10">$</span><span class="syntax10">fh</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">r</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax10">$</span><span class="syntax10">substring</span> <span class="syntax18">=</span> <span class="syntax13">'</span><span class="syntax13">Line</span><span class="syntax13"> </span><span class="syntax13">1</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  16:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax18">!</span><span class="syntax9">feof</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  17:</span>      <span class="syntax10">$</span><span class="syntax10">line_of_text</span> <span class="syntax18">=</span> <span class="syntax9">fgets</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  18:</span>      <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">line_of_text</span><span class="syntax18">;</span>
<span class="gutter">  19:</span>      <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax9">substr_count</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">line_of_text</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">substring</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  20:</span>        <span class="syntax10">$</span><span class="syntax10">bytes</span> <span class="syntax18">=</span> <span class="syntax9">ftell</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  21:</span>      <span class="syntax18">}</span>
<span class="gutter">  22:</span>    <span class="syntax18">}</span>
<span class="gutter">  23:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax8">isset</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">bytes</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  24:</span>      <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">substring</span><span class="syntax14"> </span><span class="syntax14">not</span><span class="syntax14"> </span><span class="syntax14">found</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  25:</span>      <span class="syntax8">exit</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  26:</span>    <span class="syntax18">}</span>
<span class="gutter">  27:</span>    <span class="syntax9">fseek</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">bytes</span><span class="syntax18">,</span> SEEK_SET<span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  28:</span>    <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;hr</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  29:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14">Start</span><span class="syntax14"> </span><span class="syntax14">reading</span><span class="syntax14"> </span><span class="syntax14">again</span><span class="syntax14"> </span><span class="syntax14">from</span><span class="syntax14"> </span><span class="syntax14">byte</span><span class="syntax14"> </span><span class="syntax14">position</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">bytes</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span>
<span class="gutterH">  30:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  31:</span>    <span class="syntax8">while</span><span class="syntax18">(</span><span class="syntax18">!</span><span class="syntax9">feof</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  32:</span>      <span class="syntax10">$</span><span class="syntax10">line_of_text</span> <span class="syntax18">=</span> <span class="syntax9">fgets</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  33:</span>      <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">line_of_text</span><span class="syntax18">;</span>
<span class="gutter">  34:</span>    <span class="syntax18">}</span>
<span class="gutterH">  35:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  36:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  37:</span>  <span class="syntax17">&lt;/pre</span><span class="syntax17">&gt;</span>
<span class="gutter">  38:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  39:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The variable, $substring, is assigned the string "Line 1", a string that will be
searched for in the file that was just opened.
</p><p>
As each line is read from the file, the substr_count() function will search for
the string $substring in a line and return the number of times it was found.
Each time this function returns 1 or more, the next line will be executed.
</p><p>
The ftell() function will return the byte position of where the next read
operation will take place. The line containing $substring has already been read.
The byte position is the number of characters from the beginning of the file.
This value is saved in $bytes, to be used later with the fseek() function.
</p><p>
The fseek() function will start at the beginning of the file, byte 0, and move
to the position returned from ftell().
</p><p>
When fgets() starts reading lines from the file it picks up right after the
line where the substring was found.
</p></li>
<li><p>
Opening a URL for Reading
</p><p>
You can open files with FTP or HTTP with the <b>fopen()</b> function.
</p><p>
Note: If opening the URL fails, check if the <b>allow_url_fopen</b> directive
in the php.ini file is disabled.
</p><p>
Format:
</p>
<code><small>
resource fopen ( string filename, string mode [,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
bool use_include_path [, resource zcontext]] )<br>
</small></code>
<p>
Example:
</p>
<code><small>
$filehandle = fopen('http://www.site.com/');<br>
$filehandle = fopen('ftp://username:password@ftp.wherever.com/pub/index','r');<br>
</small></code>
<h4>
Filename: openURL.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Open URL<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lavender</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   7:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax13">'</span><span class="syntax13">http://www.ellieq.com/</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   8:</span>    <span class="syntax10">$</span><span class="syntax10">fh</span> <span class="syntax18">=</span> <span class="syntax9">fopen</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">r</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax8">while</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax9">feof</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  10:</span>      <span class="syntax10">$</span><span class="syntax10">contents</span> <span class="syntax18">=</span> <span class="syntax9">htmlspecialchars</span><span class="syntax18">(</span><span class="syntax9">fgets</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">,</span> <span class="syntax5">1024</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>      <span class="syntax8">print</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax10">$</span><span class="syntax10">contents</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">pre</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax18">}</span>
<span class="gutter">  13:</span>    <span class="syntax9">fclose</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fh</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>  <span class="syntax17">?&gt;</span>
<span class="gutterH">  15:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  16:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The file name in this case is the URL of a Web site.
The Web page is opened for reading and a filehandle is returned, called $fh.
</p><p>
The fgets() function reads 1024 bytes at a time from the page.
The htmlspecialchars() function converts any special characters to HTML entities;
for example, an "&amp;" would become "&amp;amp;" and a "&lt;" would become "&amp;lt;",
and so on.
</p></li>
<li><p>
Reading from Files Without a Filehandle
</p><p>
PHP provides functions that allow you to read the contents of a file without
first opening a filehandle.
</p></li>
<li><p>
The file_get_contents() Function - Reading the Whole File into a String
</p><p>
An easy way to read the contents of an entire file is with the <b>file_get_contents()</b>
function. You do not even need to get a filehandle, just pass the name of the
file to the function and it will get the contents of the whole file and store
it in a string.
</p><p>
You can also start reading from a specified offset in the file and specify how
many bytes you want to read. The file_get_contents() function will return FALSE,
if it fails.
</p><p>
The PHP manual suggests this as the most efficient way to read a file into a string.
</p><p>
Format:
</p>
<code><small>
string file_get_contents ( string filename [, bool use_include_path [,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
resource context [, int offset [,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
int maxlen]]]] )<br>
</small></code>
<p>
Example:
</p>
<blockquote><code><small>
$contents = file_get_contents('datafile.txt');<br>
</small></code></blockquote>
</p></li>
<li><p>
The file() Function - Reading the Whole File into an Array
</p><p>
Without using a filehandle, you can read an entire file into an array with PHP's
<b>file()</b> function.
</p><p>
The filename can be a full path, relative path, or even
a URL (if each element of the array corresponds to a line in the file, with the
newline still attached. The function returns FALSE if it fails.
</p><p>
If you do not want the end-of-line character at the end of each of the array
elements, use the rtrim() function to remove them.
</p><p>
Note: If PHP does not recognize the line endings (such as on a Macintosh),
see the php.ini file to enable the auto_detect_line_endings runtime configuration
option.
</p><p>
This function is identical to file_get_contents(), except that it returns the
file in an array.
</p><p>
Format:
</p>
<code><small>
array file ( string filename [, int use_include_path [,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
resource context]] )<br>
</small></code>
<h4>
Filename: fileFunc.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>The file() Function<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">verdana</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Assigning Lines of a File to an Array<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   8:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/data.txt</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax10">$</span><span class="syntax10">lines</span> <span class="syntax18">=</span> <span class="syntax9">file</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">;</span> <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Lines</span><span class="syntax2"> </span><span class="syntax2">of</span><span class="syntax2"> </span><span class="syntax2">file</span><span class="syntax2"> </span><span class="syntax2">stored</span><span class="syntax2"> </span><span class="syntax2">in</span><span class="syntax2"> </span><span class="syntax2">an</span><span class="syntax2"> </span><span class="syntax2">array</span>
<span class="gutter">  11:</span>    <span class="syntax2">//</span><span class="syntax2"> </span><span class="syntax2">Loop</span><span class="syntax2"> </span><span class="syntax2">through</span><span class="syntax2"> </span><span class="syntax2">our</span><span class="syntax2"> </span><span class="syntax2">array,</span><span class="syntax2"> </span><span class="syntax2">show</span><span class="syntax2"> </span><span class="syntax2">the</span><span class="syntax2"> </span><span class="syntax2">file</span><span class="syntax2"> </span><span class="syntax2">with</span><span class="syntax2"> </span><span class="syntax2">line</span><span class="syntax2"> </span><span class="syntax2">numbers</span>
<span class="gutter">  12:</span>    <span class="syntax8">foreach</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">lines</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">line_num</span> <span class="syntax18">=</span><span class="syntax18">&gt;</span> <span class="syntax10">$</span><span class="syntax10">line</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  13:</span>      <span class="syntax10">$</span><span class="syntax10">line_num</span><span class="syntax18">+</span><span class="syntax18">+</span><span class="syntax18">;</span>
<span class="gutter">  14:</span>      <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;b&gt;</span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">line_num</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">&lt;/b&gt;:</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">line</span> <span class="syntax18">.</span><span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">\n</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutterH">  15:</span>    <span class="syntax18">}</span>
<span class="gutter">  16:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  17:</span>  <span class="syntax17">&lt;/font</span><span class="syntax17">&gt;</span>
<span class="gutter">  18:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  19:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The built-in <b>file()</b> function takes the filename as its argument (not a
filehandle) and returns an array where each line of the file is an element of the array.
</p><p>
The foreach loop cycles over each element of the array of lines, extracting the
index and the value of the line.
</p><p>
By adding one to the value of $line_number before printing it, we can number the
lines starting at 1.
</p></li>
<li><p>
Using explode() and implode()
</p><p>
After you have read in a line from a file or you get input from a file,
you might want to break the lines into individual fields or create a string
from an array of input items.
</p><p>
This is where the array functions <b>explode()</b> and <b>implode()</b> can be
useful.
</p><p>
The example that follows demonstrates how to use these functions.
This example uses the text file "datebook.txt".
Below are two lines from this file. Notice that the fields are separated by colons.
</p>
<code><small>
Steve Blenheim:238-923-7366:95 Latham Lane, Easton, PA 83755:11/12/56:20300<br>
Betty Boop:245-836-8357:635 Cutesy Lane, Hollywood, CA 91464:6/23/23:14500<br>
</small></code>
<h4>
Filename: parsing.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span><span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Parsing Lines<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightgreen</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span>  <span class="syntax17">&lt;font</span><span class="syntax17"> </span><span class="syntax17">face</span><span class="syntax18">=</span><span class="syntax17">verdana</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">size</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">+</span><span class="syntax17">2</span><span class="syntax14">&quot;</span><span class="syntax14">&gt;</span>
<span class="gutter">   6:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax17">&lt;?php</span>
<span class="gutter">   7:</span>    <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax18">!</span><span class="syntax8">isset</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">_POST</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">submit</span><span class="syntax13">'</span><span class="syntax18">]</span><span class="syntax18">)</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">   8:</span>      <span class="syntax6">show_form</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax18">}</span>
<span class="gutterH">  10:</span>    <span class="syntax8">else</span> <span class="syntax18">{</span>
<span class="gutter">  11:</span>      <span class="syntax6">process_file</span><span class="syntax18">(</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>    <span class="syntax18">}</span>
<span class="gutter">  13:</span>    
<span class="gutter">  14:</span>    <span class="syntax8">function</span> <span class="syntax6">show_form</span><span class="syntax18">(</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutterH">  15:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  16:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">h2</span><span class="syntax14">&gt;</span><span class="syntax14">Exploding</span><span class="syntax14"> </span><span class="syntax14">and</span><span class="syntax14"> </span><span class="syntax14">Imploding</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">h2</span><span class="syntax14">&gt;</span>
<span class="gutter">  17:</span>
<span class="gutter">  18:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">form</span><span class="syntax14"> </span><span class="syntax14">method</span><span class="syntax14">=</span><span class="syntax14">POST</span>
<span class="gutter">  19:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">action</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">&lt;?php</span> <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">PHP_SELF</span><span class="syntax13">'</span><span class="syntax18">]</span><span class="syntax18">;</span> <span class="syntax17">?&gt;</span><span class="syntax14">&quot;</span><span class="syntax14">&gt;</span>
<span class="gutterH">  20:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">table</span><span class="syntax14"> </span><span class="syntax14">cellspacing</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">0</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">cellpadding</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">2</span><span class="syntax14">&quot;</span><span class="syntax14">&gt;</span>
<span class="gutter">  21:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span>
<span class="gutter">  22:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">b</span><span class="syntax14">&gt;</span><span class="syntax14"> </span><span class="syntax14">Select</span><span class="syntax14"> </span><span class="syntax14">a</span><span class="syntax14"> </span><span class="syntax14">first</span><span class="syntax14"> </span><span class="syntax14">name</span><span class="syntax14"> </span><span class="syntax14">from</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14">.</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">b</span><span class="syntax14">&gt;</span>
<span class="gutter">  23:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">input</span><span class="syntax14"> </span><span class="syntax14">type</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">text</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">size</span><span class="syntax14">=</span><span class="syntax14">30</span>
<span class="gutter">  24:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">name</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">first_name</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">td</span><span class="syntax14">&gt;</span>
<span class="gutterH">  25:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span>
<span class="gutter">  26:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span>
<span class="gutter">  27:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&amp;</span><span class="syntax14">nbsp</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">td</span><span class="syntax14">&gt;</span>
<span class="gutter">  28:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span>
<span class="gutter">  29:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span>
<span class="gutterH">  30:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">td</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">input</span><span class="syntax14"> </span><span class="syntax14">type</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">submit</span><span class="syntax14">&quot;</span><span class="syntax14"> </span><span class="syntax14">name</span><span class="syntax14">=</span><span class="syntax14">&quot;</span><span class="syntax17">submit</span><span class="syntax14">&quot;</span>
<span class="gutter">  31:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">tr</span><span class="syntax14">&gt;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span>
<span class="gutter">  32:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">table</span><span class="syntax14">&gt;</span>
<span class="gutter">  33:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">form</span><span class="syntax14">&gt;</span>
<span class="gutter">  34:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax17">&lt;?php</span>
<span class="gutterH">  35:</span>    <span class="syntax18">}</span>
<span class="gutter">  36:</span>    
<span class="gutter">  37:</span>    <span class="syntax8">function</span> <span class="syntax6">process_file</span><span class="syntax18">(</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  38:</span>      <span class="syntax10">$</span><span class="syntax10">filename</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/datebook.txt</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  39:</span>      <span class="syntax10">$</span><span class="syntax10">lines</span> <span class="syntax18">=</span> <span class="syntax9">file</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">filename</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  40:</span>      <span class="syntax10">$</span><span class="syntax10">first_name</span> <span class="syntax18">=</span> <span class="syntax9">trim</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">_POST</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">first_name</span><span class="syntax13">'</span><span class="syntax18">]</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  41:</span>      
<span class="gutter">  42:</span>      <span class="syntax8">foreach</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">lines</span> <span class="syntax8">as</span> <span class="syntax10">$</span><span class="syntax10">line_value</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  43:</span>        <span class="syntax10">$</span><span class="syntax10">fields</span> <span class="syntax18">=</span> <span class="syntax9">explode</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">:</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">line_value</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  44:</span>        <span class="syntax10">$</span><span class="syntax10">fullname</span> <span class="syntax18">=</span> <span class="syntax9">explode</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13"> </span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">fields</span><span class="syntax18">[</span><span class="syntax5">0</span><span class="syntax18">]</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  45:</span>        <span class="syntax10">$</span><span class="syntax10">phone</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">fields</span><span class="syntax18">[</span><span class="syntax5">1</span><span class="syntax18">]</span><span class="syntax18">;</span>
<span class="gutter">  46:</span>        <span class="syntax10">$</span><span class="syntax10">address</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">fields</span><span class="syntax18">[</span><span class="syntax5">2</span><span class="syntax18">]</span><span class="syntax18">;</span>
<span class="gutter">  47:</span>        <span class="syntax10">$</span><span class="syntax10">birthday</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">fields</span><span class="syntax18">[</span><span class="syntax5">3</span><span class="syntax18">]</span><span class="syntax18">;</span>
<span class="gutter">  48:</span>        <span class="syntax10">$</span><span class="syntax10">salary</span> <span class="syntax18">=</span> <span class="syntax10">$</span><span class="syntax10">fields</span><span class="syntax18">[</span><span class="syntax5">4</span><span class="syntax18">]</span><span class="syntax18">;</span>
<span class="gutter">  49:</span>        
<span class="gutterH">  50:</span>        <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax9">strcasecmp</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fullname</span><span class="syntax18">[</span><span class="syntax5">0</span><span class="syntax18">]</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">first_name</span><span class="syntax18">)</span> <span class="syntax18">=</span><span class="syntax18">=</span> <span class="syntax5">0</span> <span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  51:</span>          <span class="syntax10">$</span><span class="syntax10">birth</span> <span class="syntax18">=</span> <span class="syntax9">explode</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">/</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">birthday</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutter">  52:</span>          <span class="syntax10">$</span><span class="syntax10">newstring</span> <span class="syntax18">=</span> <span class="syntax9">implode</span><span class="syntax18">(</span><span class="syntax13">'</span><span class="syntax13">&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">,</span> <span class="syntax8">array</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">fields</span><span class="syntax18">[</span><span class="syntax5">0</span><span class="syntax18">]</span><span class="syntax18">,</span> <span class="syntax10">$</span><span class="syntax10">phone</span><span class="syntax18">,</span>
<span class="gutter">  53:</span>                               <span class="syntax10">$</span><span class="syntax10">address</span><span class="syntax18">,</span><span class="syntax13">'</span><span class="syntax13">19</span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax10">$</span><span class="syntax10">birth</span><span class="syntax18">[</span><span class="syntax5">2</span><span class="syntax18">]</span><span class="syntax18">,</span>
<span class="gutter">  54:</span>                               <span class="syntax13">'</span><span class="syntax13">$</span><span class="syntax13">'</span><span class="syntax18">.</span> <span class="syntax9">number_format</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">salary</span><span class="syntax18">,</span><span class="syntax5">2</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  55:</span>          <span class="syntax8">echo</span> <span class="syntax10">$</span><span class="syntax10">newstring</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">&lt;br</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  56:</span>          <span class="syntax10">$</span><span class="syntax10">count</span><span class="syntax18">+</span><span class="syntax18">+</span><span class="syntax18">;</span>
<span class="gutter">  57:</span>          <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;hr</span><span class="syntax13"> </span><span class="syntax13">/&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  58:</span>        <span class="syntax18">}</span>
<span class="gutter">  59:</span>      <span class="syntax18">}</span>
<span class="gutterH">  60:</span>      
<span class="gutter">  61:</span>      <span class="syntax8">if</span><span class="syntax18"> (</span><span class="syntax10">$</span><span class="syntax10">count</span><span class="syntax18">=</span><span class="syntax18">=</span><span class="syntax5">0</span><span class="syntax18">)</span> <span class="syntax18">{</span>
<span class="gutter">  62:</span>        <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax10">$</span><span class="syntax10">first_name</span><span class="syntax14"> </span><span class="syntax14">is</span><span class="syntax14"> </span><span class="syntax14">not</span><span class="syntax14"> </span><span class="syntax14">in</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14">.</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  63:</span>      <span class="syntax18">}</span>
<span class="gutter">  64:</span>    <span class="syntax18">}</span>
<span class="gutterH">  65:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  66:</span><span class="syntax14"> </span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">font</span><span class="syntax14">&gt;</span>
<span class="gutter">  67:</span><span class="syntax14"> </span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">body</span><span class="syntax14">&gt;</span>
<span class="gutter">  68:</span><span class="syntax14">&lt;</span><span class="syntax14">/</span><span class="syntax14">html</span><span class="syntax14">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
If the form has not been submitted yet, the <b>show_form()</b> function will display it.
Otherwise, the submit button was pressed, the form has already been filled out,
and it is time to process it. The <b>process_file()</b> function is called.
</p><p>
The show_form() function is declared, starting on line 14. It produces a very
simple HTML form with one text box and a submit button.
</p><p>
The user will type in the first name of someone from an external text file:
datebook.txt
</p><p>
The process_file() function is declared starting on line 37. It will read a file
into an array and break each line of the file into fields.
</p><p>
If a line matches the first name of the input value typed into the form, that
data for that person will be displayed.
</p><p>
The PHP file() function reads an entire file and assigns it to an array,
where each line of the file is an element of the array.
</p><p>
The value of the variable called $first_name is what the user typed in the form
and was sent via the POST method to this PHP program. Any whitespace is stripped
out with the built-in trim() function.
</p><p>
The foreach loop iterates through each value in the array of lines.
</p><p>
The explode() function splits up a string, $line, by a specified delimiter,
in this case, by a colon.
</p><p>
It creates an array where each of the elements represents the individual fields
that were created.
</p><p>
The first element of the array called $fields[0] contains a first and last name.
The explode() functionon line 44 will create a two-element array, called $fullname,
consisting of a first and last name.
</p><p>
The strcasecmp() function compares two strings, case insensitive.
If the value that came in from the form, $first_name, and the value of
$fullname[0] are equal, then lines 51-57 are executed.
</p><p>
The explode() function on line 51 creates the $birth array by splitting
$birthday by slashes.
</p><p>
The implode() function on lines 52-54 joins or "glues" the array elements together
into one string, called $newstring.
</p><p>
A variable called $count will be incremented each time through this loop to keep
track of the number of lines found matching the name input by the user.
</p><p>
If the value of the $count is 0, there were no matches, and the program displays
a message saying so.
</p></li>
<li><p>
The readfile() Function - Reading and Writing a File
</p><p>
The <b>readfile()</b> function reads from a file and writes it to the output
buffer. It returns the number of bytes read from the file.
If an error occurs, FALSE is returned and an error message is printed.
</p><p>
Format:
</p>
<code><small>
int readfile ( string filename [, bool use_include_path [,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
resource context]] )<br>
</small></code>
<p>
Example:
</p>
<blockquote><code><small>
$numBytes = readfile('myfile.txt');<br>
</small></code></blockquote>
<h4>
Filename: readfile.php
</h4>
<blockquote><small>
<div class="disp2">
<PRE>
<span class="syntax0"><span class="gutter">   1:</span><span class="syntax17">&lt;html</span><span class="syntax17">&gt;</span>
<span class="gutter">   2:</span> <span class="syntax17">&lt;head</span><span class="syntax17">&gt;</span>
<span class="gutter">   3:</span>  <span class="syntax17">&lt;title</span><span class="syntax17">&gt;</span>Reading and Outputting a File<span class="syntax17">&lt;/title</span><span class="syntax17">&gt;</span>
<span class="gutter">   4:</span> <span class="syntax17">&lt;/head</span><span class="syntax17">&gt;</span>
<span class="gutterH">   5:</span> <span class="syntax17">&lt;body</span><span class="syntax17"> </span><span class="syntax17">bgcolor</span><span class="syntax18">=</span><span class="syntax14">&quot;</span><span class="syntax14">lightblue</span><span class="syntax14">&quot;</span><span class="syntax17">&gt;</span>
<span class="gutter">   6:</span>  <span class="syntax17">&lt;h3</span><span class="syntax17">&gt;</span>Reading and Outputting a File<span class="syntax17">&lt;/h3</span><span class="syntax17">&gt;</span>
<span class="gutter">   7:</span>  <span class="syntax17">&lt;?php</span>
<span class="gutter">   8:</span>    <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;pre&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">   9:</span>    <span class="syntax10">$</span><span class="syntax10">numBytes</span> <span class="syntax18">=</span> <span class="syntax18">@ </span><span class="syntax9">readfile</span><span class="syntax18">(</span><span class="syntax10">$</span><span class="syntax10">_SERVER</span><span class="syntax18">[</span><span class="syntax13">'</span><span class="syntax13">DOCUMENT_ROOT</span><span class="syntax13">'</span><span class="syntax18">]</span> <span class="syntax18">.</span><span class="syntax13">'</span><span class="syntax13">/files/datebook.txt</span><span class="syntax13">'</span><span class="syntax18">)</span><span class="syntax18">;</span>
<span class="gutterH">  10:</span>    <span class="syntax8">echo</span> <span class="syntax13">'</span><span class="syntax13">&lt;/pre&gt;</span><span class="syntax13">'</span><span class="syntax18">;</span>
<span class="gutter">  11:</span>    <span class="syntax8">echo</span> <span class="syntax14">&quot;</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">Read</span><span class="syntax14"> </span><span class="syntax10">$</span><span class="syntax10">numBytes</span><span class="syntax14"> </span><span class="syntax14">bytes</span><span class="syntax14"> </span><span class="syntax14">from</span><span class="syntax14"> </span><span class="syntax14">the</span><span class="syntax14"> </span><span class="syntax14">file</span><span class="syntax14">.</span><span class="syntax14">&lt;</span><span class="syntax14">br</span><span class="syntax14"> </span><span class="syntax14">/</span><span class="syntax14">&gt;</span><span class="syntax14">&quot;</span><span class="syntax18">;</span>
<span class="gutter">  12:</span>  <span class="syntax17">?&gt;</span>
<span class="gutter">  13:</span> <span class="syntax17">&lt;/body</span><span class="syntax17">&gt;</span>
<span class="gutter">  14:</span><span class="syntax17">&lt;/html</span><span class="syntax17">&gt;</span></span>
</PRE>
</div>
</small></blockquote>
<p>
The HTML "&lt;pre&gt;" tag is used here so that when the file is displayed,
the newlines will be preserved.
</p><p>
The readfile() function will read in the contents of datebook.txt and send the
output to the the output stream (e.g. browser or terminal).
It returns the number of bytes read.
</p><p>
The function call is preceded by "@" to suppress the printing of an error message
if an error occurs.
</p>
</li>
</ul>
</div>
</body>
</html>
