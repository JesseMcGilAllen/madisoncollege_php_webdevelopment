h2.  Using PHP


h3. Using PHP

This unit gives you a quick overview of PHP syntax and language constructs. If you are already a PHP programmer, it might fill some gaps in your knowledge. If you have a background using C, Active Server Pages (ASP), or another programming language, it will help you get up to speed quickly. The goal of this course is to learn how to use PHP by working through real- world examples taken from the "PHP and MySQL Web Development" text and other sources. Often, programming courses teach basic syntax with very simple examples. This course will try not not to do that. Often what you want to do is get something up and running, to understand how the language is used, instead of plowing through yet another syntax and function reference that's no better than the online manual.
h3. Creating PHP Scripts

PHP scripts can be written using any text editor. jEdit is a good text editor that is available on Linux, OSX and Windows. Special-purpose PHP programming editors are also available for download on the Web.
h3. Creating a Sample Application: Bob's Auto Parts

One of the most common applications of any server-side scripting language is processing HTML forms. You'll start learning PHP by implementing an order form for Bob's Auto Parts, a fictional spare parts company.

h3. Creating the Order Form

Bob's HTML programmer has set up an order form for the parts that Bob sells. This relatively simple order form, is similar to many you have probably seen while surfing the Web. Bob would like to be able to know what his customers ordered, work out the total prices of their orders, and determine how much sales tax is payable on the orders.

Part of the HTML for this form is shown in the listing below:

<pre>orderform.html - HTML for Bob's Basic Order Form
<form action="processorder.php" method="post">
<table border="0">
 <tr bgcolor="#cccccc">
  <td width="150">Item</td>
  <td width="15">Quantity</td>
 </tr>
 <tr>
  <td>Tires</td>
  <td align="center"><input type="text" name="tireqty" size="3"
     maxlength="3" /></td>
 </tr>
 <tr>
  <td>Oil</td>
  <td align="center"><input type="text" name="oilqty" size="3"
     maxlength="3" /></td>
 </tr>
 <tr>
  <td>Spark Plugs</td>
  <td align="center"><input type="text" name="sparkqty" size="3"
     maxlength="3" /></td>
 </tr>
 <tr>
  <td colspan="2" align="center"><input type="submit" 
     value="Submit Order" /></td>
 </tr>
</table>
</form></pre>

Notice that the form's action is set to the name of the PHP script that will process the customer's order. (We will view this script next.) In general, the value of the action attribute is the URL that will be loaded when the user clicks the Submit button. The data the user has typed into the form will be sent to this URL via the method specified in the method attribute, either get (appended to the end of the URL) or post (sent as a separate message).

Also note the names of the form fields: tireqty, oilqty,and sparkqty. We will use these names again in the PHP script. Because the names will be reused, it is important to give your form fields meaningful names that you can easily remember when you begin writing the PHP script. Some HTML editors generate field names like field23 by default. They are difficult to remember. Your life as a PHP programmer will be easier if the names you use reflect the data typed into the field.

You might want to consider adopting a coding standard for field names so that all field names throughout your site use the same format. This way, you can more easily remember whether, for example, you abbreviated a word in a field name or put in underscores as spaces.

h3. Processing the Form

To process the form, you need to create the script mentioned in the action attribute of the form tag called processorder.php. We will open a text editor and create this file by typing in the following code:
<br /><pre><html>
<head>
 <title>Bob's Auto Parts - Order Results</title>
</head>
<body>
 <h1>Bob's Auto Parts</h1>
 <h2>Order Results</h2>
</body>
</html></pre>

Notice how everything we have typed so far is just plain HTML? Next we will
add some simple PHP code to the script.

<br />

---

[[Unit Two => 152-166 Unit Two Index]]
